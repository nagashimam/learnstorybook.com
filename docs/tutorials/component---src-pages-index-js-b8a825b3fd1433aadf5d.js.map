{"version":3,"file":"component---src-pages-index-js-b8a825b3fd1433aadf5d.js","mappings":"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","sources":["webpack://learnstorybook.com/./src/components/composite/User.js","webpack://learnstorybook.com/./src/components/screens/IndexScreen/Community.js","webpack://learnstorybook.com/./src/components/screens/IndexScreen/Guide.js","webpack://learnstorybook.com/./src/components/screens/IndexScreen/Guides.js","webpack://learnstorybook.com/./src/components/screens/IndexScreen/Pitch.js","webpack://learnstorybook.com/./src/components/screens/IndexScreen/SocialValidation.js","webpack://learnstorybook.com/./src/components/screens/IndexScreen/index.js","webpack://learnstorybook.com/./src/pages/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@storybook/theming';\nimport { Avatar, styles } from '@storybook/design-system';\n\nconst { color, typography } = styles;\n\nconst AvatarWrapper = styled(Avatar)`\n  min-width: 40px;\n`;\n\nconst UserWrapper = styled.div`\n  display: flex;\n`;\n\nconst Text = styled.div`\n  margin-left: 15px;\n`;\n\nconst Name = styled.div`\n  color: ${color.darkest};\n  font-size: ${typography.size.s3}px;\n  font-weight: ${typography.weight.bold};\n  line-height: 20px;\n  hyphens: auto;\n`;\n\nconst Detail = styled.div`\n  color: #586368;\n  font-size: ${typography.size.s2}px;\n  line-height: 16px;\n  margin-top: 3px;\n  text-align: left;\n`;\n\nfunction User({ detail, name, src, ...rest }) {\n  return (\n    <UserWrapper {...rest}>\n      <AvatarWrapper size=\"large\" src={src} />\n\n      <Text>\n        <Name>{name}</Name>\n        <Detail>{detail}</Detail>\n      </Text>\n    </UserWrapper>\n  );\n}\n\nUser.propTypes = {\n  detail: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n  name: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n};\n\nexport default User;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { styles as marketingStyles } from '@storybook/components-marketing';\nimport { Avatar } from '@storybook/design-system';\nimport { styled } from '@storybook/theming';\n\nconst Section = styled.div`\n  ${(props) =>\n    !props.isFirst &&\n    `\n    margin-top: 64px;\n  `}\n`;\n\nconst Heading = styled.div`\n  ${marketingStyles.marketing.subheading};\n  margin-bottom: 12px;\n`;\n\nconst Text = styled.div`\n  ${marketingStyles.marketing.textLarge}\n  margin-bottom: 32px;\n`;\n\nconst CommunityAvatars = styled.div`\n  margin-left: -10px;\n  margin-right: -10px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst AvatarWrapper = styled(Avatar)`\n  min-width: 40px;\n  margin: 10px;\n`;\n\nfunction PureCommunity({ contributors }) {\n  return (\n    <div>\n      <Section isFirst>\n        <Heading>Peer reviewed and updated all the time</Heading>\n\n        <Text>\n          Our guides are peer reviewed by leading folks at Shopify, Auth0, and New York Times. Our\n          amazing community of learners keep the guides up to date with industry best practices.\n        </Text>\n\n        <CommunityAvatars className=\"chromatic-ignore\">\n          {contributors.map((contributor) => (\n            <AvatarWrapper key={contributor.id} src={contributor.avatar_url} size=\"large\" />\n          ))}\n        </CommunityAvatars>\n      </Section>\n    </div>\n  );\n}\n\nPureCommunity.propTypes = {\n  contributors: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar_url: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nPureCommunity.defaultProps = {\n  contributors: [],\n};\n\nconst contributorsUrl = 'https://api.github.com/repos/chromaui/learnstorybook.com/contributors';\nconst sessionStorageKey = 'lsbGithubContributors';\n\nfunction Community() {\n  const [contributors, setContributors] = useState([]);\n\n  useEffect(() => {\n    async function fetchGithubContributors() {\n      const response = await fetch(contributorsUrl).then((res) => res.json());\n      if (response.message) {\n        return; // Likely an error\n      }\n      sessionStorage.setItem(sessionStorageKey, JSON.stringify(response));\n      setContributors(response);\n    }\n\n    if (sessionStorage.getItem(sessionStorageKey)) {\n      // Use the cached version of contributors\n      setContributors(JSON.parse(sessionStorage.getItem(sessionStorageKey)));\n      return;\n    }\n\n    fetchGithubContributors();\n  }, []);\n\n  return <PureCommunity contributors={contributors} />;\n}\n\nexport { PureCommunity };\n\nexport default Community;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@storybook/theming';\nimport pluralize from 'pluralize';\nimport { styles, Subheading } from '@storybook/design-system';\n\nconst { breakpoint, color, spacing, typography } = styles;\n\nconst GuideWrapper = styled.span`\n  display: block;\n  background: ${(props) => props.themeColor};\n  color: ${color.lightest};\n  padding: 40px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  text-align: left;\n  height: 400px;\n\n  @media (min-width: ${breakpoint}px) {\n    height: 450px;\n  }\n\n  @media (min-width: ${breakpoint * 1.25}px) {\n    height: 400px;\n  }\n`;\n\nconst GuideTitle = styled.span`\n  display: block;\n  font-size: ${typography.size.m1}px;\n  font-weight: ${typography.weight.black};\n  line-height: ${typography.size.m3}px;\n`;\n\nconst GuideDescription = styled.span`\n  display: block;\n  margin-top: ${spacing.padding.small}px;\n`;\n\nconst GuideChapterCount = styled(Subheading)`\n  display: block;\n  margin-top: ${spacing.padding.small}px;\n  font-size: ${typography.size.s1}px;\n  opacity: 0.5;\n`;\n\nconst GuideImageWrapper = styled.span`\n  height: 170px;\n  display: flex;\n  align-items: center;\n`;\n\nconst GuideImage = styled.img`\n  margin: ${spacing.padding.medium}px auto 0;\n  width: fit-content;\n  max-width: 100%;\n  max-height: 170px;\n`;\n\nfunction Guide({ chapterCount, description, imagePath, themeColor, title, ...props }) {\n  return (\n    <GuideWrapper themeColor={themeColor} {...props}>\n      <div>\n        <GuideTitle>{title}</GuideTitle>\n        <GuideDescription>{description}</GuideDescription>\n\n        {chapterCount && (\n          <GuideChapterCount>{pluralize('Chapter', chapterCount, true)}</GuideChapterCount>\n        )}\n      </div>\n\n      <GuideImageWrapper>\n        {imagePath && <GuideImage src={imagePath} alt={title} />}\n      </GuideImageWrapper>\n    </GuideWrapper>\n  );\n}\n\nGuide.propTypes = {\n  chapterCount: PropTypes.number,\n  description: PropTypes.string.isRequired,\n  imagePath: PropTypes.string,\n  themeColor: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nGuide.defaultProps = {\n  chapterCount: null,\n  imagePath: null,\n};\n\nexport default Guide;\n","import React, { useMemo } from 'react';\nimport { styled } from '@storybook/theming';\nimport PropTypes from 'prop-types';\nimport { styles } from '@storybook/design-system';\nimport { withPrefix } from 'gatsby';\nimport Guide from './Guide';\nimport GatsbyLink from '../../basics/GatsbyLink';\n\nconst { breakpoint } = styles;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  margin: -20px 0;\n\n  @media (min-width: ${breakpoint}px) {\n    margin-left: -20px;\n    margin-right: -20px;\n  }\n\n  > * {\n    max-width: 100%;\n    margin: 20px 0;\n\n    @media (min-width: ${breakpoint}px) {\n      max-width: calc(50% - 40px);\n      margin: 20px;\n    }\n\n    @media (min-width: ${breakpoint * 1.75}px) {\n      max-width: calc(33% - 40px);\n    }\n  }\n`;\n\nconst StyledGuide = styled(Guide)``;\n\nconst GuideLink = styled(GatsbyLink)`\n  ${StyledGuide} {\n    box-shadow: 0 3px 10px 0 rgba(0, 0, 0, 0.2);\n  }\n  &&:hover {\n    transform: translateY(-3px);\n\n    ${StyledGuide} {\n      box-shadow: 0 7px 15px 0 rgba(0, 0, 0, 0.15);\n    }\n  }\n`;\n\nconst getChapterCountByGuide = (chaptersEdges) =>\n  chaptersEdges.reduce(\n    (\n      acc,\n      {\n        node: {\n          fields: { guide },\n        },\n      }\n    ) => {\n      const chapterCountByGuide = { ...acc };\n\n      if (chapterCountByGuide[guide]) {\n        chapterCountByGuide[guide] += 1;\n      } else {\n        chapterCountByGuide[guide] = 1;\n      }\n\n      return chapterCountByGuide;\n    },\n    {}\n  );\n\nfunction Guides({ chaptersEdges, guidesEdges }) {\n  const chapterCountByGuide = useMemo(() => getChapterCountByGuide(chaptersEdges), [chaptersEdges]);\n\n  return (\n    <Content>\n      {guidesEdges.map(({ node: guideNode }) => (\n        <GuideLink key={guideNode.fields.slug} to={guideNode.fields.slug}>\n          <StyledGuide\n            chapterCount={chapterCountByGuide[guideNode.fields.guide]}\n            description={guideNode.frontmatter.description}\n            imagePath={withPrefix(guideNode.frontmatter.thumbImagePath)}\n            themeColor={guideNode.frontmatter.themeColor}\n            title={guideNode.frontmatter.title}\n          />\n        </GuideLink>\n      ))}\n    </Content>\n  );\n}\n\nGuides.propTypes = {\n  chaptersEdges: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        fields: PropTypes.shape({\n          guide: PropTypes.string.isRequired,\n        }).isRequired,\n      }).isRequired,\n    }).isRequired\n  ).isRequired,\n  guidesEdges: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        fields: PropTypes.shape({\n          guide: PropTypes.string.isRequired,\n          slug: PropTypes.string.isRequired,\n        }).isRequired,\n        frontmatter: PropTypes.shape({\n          description: PropTypes.string.isRequired,\n          title: PropTypes.string.isRequired,\n          themeColor: PropTypes.string.isRequired,\n          thumbImagePath: PropTypes.string,\n        }).isRequired,\n      }).isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default Guides;\n","import React from 'react';\nimport { styles as marketingStyles } from '@storybook/components-marketing';\nimport { styles } from '@storybook/design-system';\nimport { styled } from '@storybook/theming';\n\nconst { breakpoint, color } = styles;\n\nconst PitchWrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\nconst PitchTitle = styled.h1`\n  ${marketingStyles.marketing.subheading}\n  color: ${color.darkest};\n  margin-bottom: 12px;\n\n  @media (min-width: ${breakpoint}px) {\n    ${marketingStyles.marketing.hero2}\n  }\n`;\n\nconst PitchDescription = styled.p`\n  ${marketingStyles.marketing.textLarge}\n  color: ${color.darker};\n  margin: 0;\n`;\n\nfunction Pitch() {\n  return (\n    <PitchWrapper>\n      <PitchTitle>Tutorials</PitchTitle>\n\n      <PitchDescription>\n        Free in-depth guides with code samples. Made for professional frontend developers.{' '}\n      </PitchDescription>\n    </PitchWrapper>\n  );\n}\n\nexport default Pitch;\n","import React from 'react';\nimport { styles as marketingStyles } from '@storybook/components-marketing';\nimport { styles } from '@storybook/design-system';\nimport { styled } from '@storybook/theming';\n\nimport User from '../../composite/User';\n\nconst { breakpoint } = styles;\n\nconst Heading = styled.div`\n  ${marketingStyles.marketing.subheading};\n  margin-bottom: 24px;\n`;\n\nconst Testimonials = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n\n  @media (min-width: ${breakpoint * 1.25}px) {\n    flex-direction: row;\n    gap: 80px;\n    justify-content: space-between;\n  }\n`;\n\nconst Testimonial = styled.div`\n  ${marketingStyles.marketing.textLarge}\n\n  @media (min-width: ${breakpoint * 1.25}px) {\n    flex: 0 1 300px;\n  }\n`;\n\nconst UserWrapper = styled(User)`\n  margin-top: 20px;\n`;\n\nfunction SocialValidation() {\n  return (\n    <>\n      <Heading>200,000+ readers so far</Heading>\n      <Testimonials>\n        <Testimonial>\n          Storybook is such a pivotal tool not just for workbenching a component in isolation, but\n          also to communicate your component&#39;s use cases and API to your whole team. You NEED to\n          learn how to use Storybook, and this is the place to learn.\n          <UserWrapper\n            src=\"https://avatars2.githubusercontent.com/u/9523719\"\n            name=\"Kyle Holmberg\"\n            detail=\"Engineer at Air\"\n          />\n        </Testimonial>\n\n        <Testimonial>\n          I was amazed at how easy it was to build a Design System with Storybook! The guide\n          provided here is just perfect. Everything is explained step by step, from the setup of the\n          repository to the deployment, including the tests and the generation of the documentation.\n          <UserWrapper\n            src=\"https://avatars2.githubusercontent.com/u/19664438\"\n            name=\"Michèle Legait\"\n            detail=\"Engineer at PROS\"\n          />\n        </Testimonial>\n\n        <Testimonial>\n          Design systems are rapidly growing in popularity. It can be overwhelming for developers to\n          understand where to start. This guide will kickstart your design system using industry\n          standard best practices.\n          <UserWrapper\n            src=\"https://avatars2.githubusercontent.com/u/9113740\"\n            name=\"Lee Robinson\"\n            detail=\"Engineer at Vercel\"\n          />\n        </Testimonial>\n      </Testimonials>\n    </>\n  );\n}\n\nexport default SocialValidation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@storybook/theming';\nimport { useStaticQuery, graphql, withPrefix } from 'gatsby';\nimport { SubNavTabs } from '@storybook/components-marketing';\nimport { styles } from '@storybook/design-system';\nimport { GatsbyLinkWrapper } from '../../basics/GatsbyLink';\nimport AppLayout from '../../composite/AppLayout';\nimport Community from './Community';\nimport Guides from './Guides';\nimport Pitch from './Pitch';\nimport SocialValidation from './SocialValidation';\n\nconst navItems = [\n  {\n    key: '0',\n    label: 'Documentation',\n    href: 'https://storybook.js.org/docs',\n  },\n  {\n    key: '1',\n    label: 'Tutorials',\n    href: '/',\n    LinkWrapper: GatsbyLinkWrapper,\n    isActive: true,\n  },\n];\n\n// TODO: Replace these?\nconst logos = [\n  {\n    src: '/brands/logo-nike.svg',\n    alt: 'Nike',\n  },\n  {\n    src: '/brands/logo-shopify.svg',\n    alt: 'Shopify',\n  },\n  {\n    src: '/brands/logo-dazn.svg',\n    alt: 'DAZN',\n  },\n  {\n    src: '/brands/logo-invision.svg',\n    alt: 'InVision',\n  },\n  {\n    src: '/brands/logo-oreilly.svg',\n    alt: `O'Reilly`,\n  },\n  {\n    src: '/brands/logo-betterment.svg',\n    alt: 'Betterment',\n  },\n  {\n    src: '/brands/logo-hashicorp.svg',\n    alt: 'Hashicorp',\n  },\n].map((logo) => ({\n  ...logo,\n  src: withPrefix(logo.src),\n}));\n\nconst Logo = styled.div`\n  img {\n    display: block;\n    width: 100%;\n    max-width: 100px;\n    height: auto;\n    max-height: 50px;\n  }\n`;\n\nconst Logos = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 3rem;\n  filter: grayscale(1);\n  opacity: 0.5;\n\n  @media (min-width: ${styles.breakpoint * 1.25}px) {\n    display: flex;\n  }\n\n  ${Logo} {\n    margin: 20px;\n    flex: 0 0 20%;\n    display: flex;\n    justify-content: center;\n\n    @media (min-width: ${styles.breakpoint * 1.25}px) {\n      flex: 1;\n    }\n  }\n`;\n\nconst LineBreak = styled.div`\n  height: 1px;\n  background: ${styles.color.mediumlight};\n  margin: 48px 0;\n`;\n\nexport function PureIndexScreen({ data }) {\n  return (\n    <AppLayout subNav={<SubNavTabs label=\"Docs nav\" items={navItems} />}>\n      <Pitch />\n      <Guides chaptersEdges={data.chapters.edges} guidesEdges={data.guides.edges} />\n      <Logos>\n        {logos.map((logo) => (\n          <Logo key={logo.src}>\n            <img src={logo.src} alt={logo.alt} />\n          </Logo>\n        ))}\n      </Logos>\n      <LineBreak />\n      <SocialValidation />\n      <LineBreak />\n      <Community />\n    </AppLayout>\n  );\n}\n\nPureIndexScreen.propTypes = {\n  data: PropTypes.shape({\n    allEditionsChapters: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.any.isRequired).isRequired,\n    }).isRequired,\n    chapters: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.any.isRequired).isRequired,\n    }).isRequired,\n    guides: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.any.isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nfunction IndexScreen(props) {\n  const data = useStaticQuery(graphql`\n    query IndexQuery {\n      guides: allMarkdownRemark(\n        filter: { fields: { pageType: { eq: \"guide\" } } }\n        sort: { order: ASC, fields: [frontmatter___order] }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              description\n              order\n              title\n              themeColor\n              thumbImagePath\n            }\n            fields {\n              guide\n              slug\n            }\n          }\n        }\n      }\n      chapters: allMarkdownRemark(\n        filter: { fields: { pageType: { eq: \"chapter\" }, isDefaultTranslation: { eq: true } } }\n      ) {\n        edges {\n          node {\n            fields {\n              guide\n            }\n          }\n        }\n      }\n      allEditionsChapters: allMarkdownRemark(filter: { fields: { pageType: { eq: \"chapter\" } } }) {\n        edges {\n          node {\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n  return <PureIndexScreen data={data} {...props} />;\n}\n\nexport default IndexScreen;\n","import React from 'react';\nimport IndexScreen from '../components/screens/IndexScreen';\n\nfunction Index(props) {\n  return <IndexScreen {...props} />;\n}\n\nexport default Index;\n"],"names":["color","styles","typography","AvatarWrapper","styled","Avatar","UserWrapper","Text","Name","darkest","size","s3","weight","bold","Detail","s2","detail","name","src","rest","Section","props","isFirst","Heading","marketingStyles","CommunityAvatars","PureCommunity","contributors","className","map","contributor","key","id","avatar_url","defaultProps","contributorsUrl","sessionStorageKey","useState","setContributors","useEffect","fetch","then","res","json","response","message","sessionStorage","setItem","JSON","stringify","getItem","parse","fetchGithubContributors","breakpoint","spacing","GuideWrapper","themeColor","lightest","GuideTitle","m1","black","m3","GuideDescription","padding","small","GuideChapterCount","Subheading","s1","GuideImageWrapper","GuideImage","medium","Guide","chapterCount","description","imagePath","title","pluralize","alt","Content","StyledGuide","GuideLink","GatsbyLink","chaptersEdges","guidesEdges","chapterCountByGuide","useMemo","reduce","acc","guide","node","fields","getChapterCountByGuide","guideNode","slug","to","frontmatter","withPrefix","thumbImagePath","PitchWrapper","PitchTitle","PitchDescription","darker","Testimonials","Testimonial","User","navItems","label","href","LinkWrapper","GatsbyLinkWrapper","isActive","logos","logo","Logo","Logos","LineBreak","PureIndexScreen","data","AppLayout","subNav","SubNavTabs","items","chapters","edges","guides","useStaticQuery"],"sourceRoot":""}
{"componentChunkName":"component---src-components-screens-chapter-screen-index-js","path":"/visual-testing-handbook/react/es/conclusion/","result":{"data":{"currentPage":{"html":"<p>Los desarrolladores dedican el <a href=\"https://ieeexplore.ieee.org/document/895984\">21%</a> de su tiempo a corregir errores. Depurar la apariencia de la interfaz de usuario puede resultar especialmente frustrante. Las reproducciones requieren que inicie diferentes navegadores, coloque su aplicación en el estado correcto y avance penosamente por el DOM. Lo que está en juego también es mayor; los errores no detectados cuestan <a href=\"https://www.cs.umd.edu/projects/SoftEng/ESEG/papers/82.78.pdf\">5-10x</a> más tiempo para corregirlos en producción que en QA.</p>\n<p>Es de sentido común que miles de equipos de frontend realicen pruebas visuales con Storybook. Storybook te ayuda a <strong>construir</strong> componentes y escribir <strong>pruebas visuales</strong>. La ejecución de pruebas a nivel de componente te permite identificar la causa raíz de un error. Tomar instantáneas te ayuda a detectar <strong>regresiones</strong> automáticamente. Eso significa que la gente puede enviar interfaces de usuario sin preocuparse por los errores polizones.</p>\n<p>Esta guía te presentó los conceptos básicos de las pruebas visuales. Tom y yo esperamos que puedan aprovechar estos aprendizajes en sus propios proyectos. Únase a la lista de correo de Storybook para recibir notificaciones sobre más artículos y guías útiles como este.</p>\n<iframe style=\"height:400px;width:100%;max-width:800px;margin:0px auto;\" src=\"https://upscri.be/d42fc0?as_embed\"></iframe>\n<h2>Código de muestra para este tutorial</h2>\n<p>Si lo ha estado siguiendo, su repositorio y Storybook implementado deberían verse así:</p>\n<ul>\n<li>📕 <a href=\"https://github.com/chromaui/learnstorybook-visual-testing-code\"><strong>Repositorio de GitHub</strong></a></li>\n<li>🌎 <a href=\"https://6070d9288779ab00214a9831-edgtavyhhd.chromatic.com/?path=/story/commentlist--paginated\"><strong>Storybook desplegado</strong></a></li>\n</ul>\n<h2>Más recursos</h2>\n<p>¿Quieres sumergirte más profundo? A continuación, se incluyen algunos recursos útiles adicionales:</p>\n<ul>\n<li>\n<p><a href=\"https://storybook.js.org/docs/react/get-started/why-storybook\"><strong>Documentación oficial de Storybook</strong></a> tiene documentación de API, ejemplos y la galería de complementos.</p>\n</li>\n<li>\n<p><a href=\"https://storybook.js.org/blog/how-to-actually-test-uis/\"><strong>Cómo probar realmente las IU</strong></a> es un resumen de las estrategias prácticas de prueba de interfaz de usuario de Shopify, Adobe, Twilio y más.</p>\n</li>\n<li>\n<p><a href=\"https://discord.gg/UUt2PJb\"><strong>Discord de Storybook</strong></a> te pone en contacto con la comunidad y los mantenedores de Storybook.</p>\n</li>\n<li>\n<p><a href=\"https://storybook.js.org/blog\"><strong>Blog de Storybook</strong></a> muestra las últimas versiones y funciones para optimizar el flujo de trabajo de desarrollo de la interfaz de usuario.</p>\n</li>\n</ul>","frontmatter":{"title":"Conclusión","description":"Di adiós a los errores visuales","commit":null},"fields":{"guide":"visual-testing-handbook","slug":"/visual-testing-handbook/react/es/conclusion/","chapter":"conclusion","framework":"react","language":"es","permalink":"https://storybook.js.org/tutorials/visual-testing-handbook/react/es/conclusion/","tutorialUpToDate":false}},"currentGuide":{"frontmatter":{"codeGithubUrl":"https://github.com/chromaui/learnstorybook-visual-testing-code","toc":["introduction","component-explorers","workflow","vtdd","automate","conclusion"],"title":"Visual Testing Handbook","twitterShareText":"I’m learning how to visual test UIs with Storybook! It’s great for finding UI bugs automatically."}},"site":{"siteMetadata":{"title":"Storybook Tutorials","githubUrl":"https://github.com/chromaui/learnstorybook.com","contributeUrl":"https://github.com/chromaui/learnstorybook.com/#contribute","permalink":"https://storybook.js.org/tutorials","siteUrl":"https://storybook.js.org"}},"tocPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Automatizar","title":"Automatizar las pruebas visuales","description":"Automatice las pruebas visuales para detectar regresiones"},"fields":{"slug":"/visual-testing-handbook/react/es/automate/","framework":"react","chapter":"automate"}}},{"node":{"frontmatter":{"tocTitle":"Exploradores de componentes","title":"Exploradores de componentes","description":"Una herramienta para el desarrollo de la UI y las pruebas visuales"},"fields":{"slug":"/visual-testing-handbook/react/es/component-explorers/","framework":"react","chapter":"component-explorers"}}},{"node":{"frontmatter":{"tocTitle":"Conclusión","title":"Conclusión","description":"Di adiós a los errores visuales"},"fields":{"slug":"/visual-testing-handbook/react/es/conclusion/","framework":"react","chapter":"conclusion"}}},{"node":{"frontmatter":{"tocTitle":"Introducción","title":"Introducción a las pruebas visuales","description":"La manera pragmática de probar interfaces de usuario"},"fields":{"slug":"/visual-testing-handbook/react/es/introduction/","framework":"react","chapter":"introduction"}}},{"node":{"frontmatter":{"tocTitle":null,"title":"TDD Visual","description":"Escribe tus primeras pruebas visuales"},"fields":{"slug":"/visual-testing-handbook/react/es/vtdd/","framework":"react","chapter":"vtdd"}}},{"node":{"frontmatter":{"tocTitle":null,"title":"Flujo de trabajo","description":"Un flujo de trabajo guiado por pruebas para la construcción de componentes"},"fields":{"slug":"/visual-testing-handbook/react/es/workflow/","framework":"react","chapter":"workflow"}}}]},"translationPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Automate","title":"Automate visual testing","description":"Automate visual testing to catch regressions"},"fields":{"slug":"/visual-testing-handbook/react/en/automate/","framework":"react","chapter":"automate","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Component explorers","title":"Component explorers","description":"A tool for UI development and visual testing"},"fields":{"slug":"/visual-testing-handbook/react/en/component-explorers/","framework":"react","chapter":"component-explorers","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Say bye to visual bugs"},"fields":{"slug":"/visual-testing-handbook/react/en/conclusion/","framework":"react","chapter":"conclusion","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to visual testing","description":"The pragmatic way to test user interfaces"},"fields":{"slug":"/visual-testing-handbook/react/en/introduction/","framework":"react","chapter":"introduction","language":"en"}}},{"node":{"frontmatter":{"tocTitle":null,"title":"Visual TDD","description":"Write your first visual tests"},"fields":{"slug":"/visual-testing-handbook/react/en/vtdd/","framework":"react","chapter":"vtdd","language":"en"}}},{"node":{"frontmatter":{"tocTitle":null,"title":"Workflow","description":"A test-driven workflow for building components"},"fields":{"slug":"/visual-testing-handbook/react/en/workflow/","framework":"react","chapter":"workflow","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Automatizar","title":"Automatizar las pruebas visuales","description":"Automatice las pruebas visuales para detectar regresiones"},"fields":{"slug":"/visual-testing-handbook/react/es/automate/","framework":"react","chapter":"automate","language":"es"}}},{"node":{"frontmatter":{"tocTitle":"Exploradores de componentes","title":"Exploradores de componentes","description":"Una herramienta para el desarrollo de la UI y las pruebas visuales"},"fields":{"slug":"/visual-testing-handbook/react/es/component-explorers/","framework":"react","chapter":"component-explorers","language":"es"}}},{"node":{"frontmatter":{"tocTitle":"Conclusión","title":"Conclusión","description":"Di adiós a los errores visuales"},"fields":{"slug":"/visual-testing-handbook/react/es/conclusion/","framework":"react","chapter":"conclusion","language":"es"}}},{"node":{"frontmatter":{"tocTitle":"Introducción","title":"Introducción a las pruebas visuales","description":"La manera pragmática de probar interfaces de usuario"},"fields":{"slug":"/visual-testing-handbook/react/es/introduction/","framework":"react","chapter":"introduction","language":"es"}}},{"node":{"frontmatter":{"tocTitle":null,"title":"TDD Visual","description":"Escribe tus primeras pruebas visuales"},"fields":{"slug":"/visual-testing-handbook/react/es/vtdd/","framework":"react","chapter":"vtdd","language":"es"}}},{"node":{"frontmatter":{"tocTitle":null,"title":"Flujo de trabajo","description":"Un flujo de trabajo guiado por pruebas para la construcción de componentes"},"fields":{"slug":"/visual-testing-handbook/react/es/workflow/","framework":"react","chapter":"workflow","language":"es"}}},{"node":{"frontmatter":{"tocTitle":"자동화","title":"시각적 테스트 자동화","description":"회귀 오류를 잡기 위해 시각적 테스트를 자동화하기"},"fields":{"slug":"/visual-testing-handbook/react/ko/automate/","framework":"react","chapter":"automate","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"컴포넌트 탐색기","title":"컴포넌트 탐색기","description":"UI 개발과 시각적 테스팅을 위한 도구"},"fields":{"slug":"/visual-testing-handbook/react/ko/component-explorer/","framework":"react","chapter":"component-explorer","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"마무리","title":"마무리","description":"시각적 버그들에 안녕을"},"fields":{"slug":"/visual-testing-handbook/react/ko/conclusion/","framework":"react","chapter":"conclusion","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"소개","title":"시각적 테스팅 소개","description":"UI를 테스트하는 실용적인 방법"},"fields":{"slug":"/visual-testing-handbook/react/ko/introduction/","framework":"react","chapter":"introduction","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":null,"title":"시각적 TDD","description":"첫 번째 시각적 테스트를 만들어보세요"},"fields":{"slug":"/visual-testing-handbook/react/ko/vtdd/","framework":"react","chapter":"vtdd","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":null,"title":"작업 흐름(Work Flow)","description":"컴포넌트 설계를 위한 테스트 주도(test-driven) 작업 흐름(workflow)"},"fields":{"slug":"/visual-testing-handbook/react/ko/workflow/","framework":"react","chapter":"workflow","language":"ko"}}}]}},"pageContext":{"guide":"visual-testing-handbook","slug":"/visual-testing-handbook/react/es/conclusion/","framework":"react","language":"es","chapter":"conclusion","pageType":"chapter"}},"staticQueryHashes":["238248339"]}
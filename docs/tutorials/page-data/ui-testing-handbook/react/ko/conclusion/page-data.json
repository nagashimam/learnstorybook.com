{"componentChunkName":"component---src-components-screens-chapter-screen-index-js","path":"/ui-testing-handbook/react/ko/conclusion/","result":{"data":{"currentPage":{"html":"<p>개발자들은 <a href=\"https://www.niss.org/sites/default/files/technicalreports/tr81.pdf\">21%의 시간을</a> 버그를 고치는데 씁니다. 테스트는 결함을 발견하고 디버깅 속도를 빠르게 해서 해야하는 일을 줄여줍니다. 하지만 모든 새로운 기능은 더 많은 UI와 상태를 도입하고 테스트도 필요해집니다. 생산성을 유지하는 유일한 방법은 직관적인 테스트 작업 흐름을 구축하는 것 뿐입니다.</p>\n<p><strong>테스트 케이스를 스토리(story)로 작성하면서 시작하세요.</strong> 이 스토리는 Jest, Chromatic, 그리고 Axe 같은 테스팅 도구를 재사용할 수 있습니다. 코드를 재사용하면 <a href=\"https://www.researchgate.net/publication/3188437_Evaluating_Software_Reuse_Alternatives_A_Model_and_Its_Application_to_an_Industrial_Case_Study?ev=publicSearchHeader&#x26;_sg=g8WraNGZNGPw0R-1-jGpy0XwUDeAr3qb472J6lhisyQ3l24pSmndO6anMdX2L3HdWHifsczPegR9wjA\">42-81%</a> 정도 개발 시간을 아낄 수 있다는 연구 결과들도 있습니다.</p>\n<p>개발하는 동안, 빠르게 <strong>코드를 짜면서 테스트를 하면</strong> 빠른 피드백 순환을 유지하고 프로덕션(production)에 올라가기 전에 버그들을 잡을 수 있습니다. 프로덕션에서 버그를 고치는 건 <a href=\"https://ntrs.nasa.gov/search.jsp?R=20100036670\">10x</a>배 더 비쌉니다.</p>\n<img src=\"/tutorials/ui-testing-handbook/component-automate-testing.gif\" alt=\"PR은 시각적 요소, 상호작용, 접근성, 구성, 그리고 사용자 흐름과 같은 모든 종류의 UI 테스팅을 검사합니다.\" style=\"max-width: 450px;\">\n<p>마지막으로, 의도치 않은 회귀 에러를 예방하기 위해 전체 UI에 걸쳐서 <strong>CI 서버를 사용해서 모든 검사를 실행하세요.</strong> Microsoft에서 수행한 연구에 기반한 조사에서 자동화 테스트로 <a href=\"https://collaboration.csc.ncsu.edu/laurie/Papers/Unit_testing_cameraReady.pdf\">결함이 20.9 까지 감소</a>하는 걸 보게 될 거라고 제안합니다.</p>\n<p>테스트가 통과하면, 우리의 UI가 버그에서 자유롭다는 확신을 얻게 될 겁니다.</p>\n<p>이런 배움이 실용적인 작업 흐름으로 잘 모아서 우리만의 탄탄한 테스트 전략을 구축하는데 도움을 줄 수 있기를 바랍니다.</p>\n<h2>이 튜토리얼을 위한 예시 코드</h2>\n<p>코딩을 해나가면서, 당신의 저장소와 배포된 스토리북(Storybook)은 이렇게 보여야 합니다.</p>\n<ul>\n<li>📕 <a href=\"https://github.com/chromaui/ui-testing-guide-code/tree/workflow\">깃허브(Github) 저장소</a></li>\n<li>🌎 <a href=\"https://main--60876bbe754b7b0021704b3d.chromatic.com\">배포된 스토리북</a></li>\n</ul>\n<h2>더 많은 자료</h2>\n<p>더 많은 걸 원하나요? 여기 유용한 몇몇 추가 자료가 있습니다.</p>\n<ul>\n<li><a href=\"/tutorials/visual-testing-handbook\"><strong>시각적 요소 테스팅 핸드북</strong></a>은 UI 모습을 테스팅하는 방법을 BBC, Adobe, Target 그리고 더 많은 선도적인 엔지니어링 팀들에서 배운 교훈들과 함께 깊이 있게 다루는 가이드입니다.</li>\n<li><a href=\"https://storybook.js.org/docs/react/writing-tests/introduction\"><strong>스토리북으로 UI 테스트하기</strong></a> UI 테스팅을 위해 Storybook을 어떻게 사용하는지 자세히 설명합니다.</li>\n<li><a href=\"https://discord.gg/UUt2PJb\"><strong>디스코드(Discord) 채팅</strong></a>에서는 스토리북 커뮤니티와 메인테이너들과 연락을 유지할 수 있게 해줍니다.</li>\n<li><a href=\"https://storybook.js.org/blog\"><strong>블로그</strong></a>에서는 최신 릴리즈(release)와 기능을 보여주고 당신의 UI 개발 작업흐름을 최신으로 유지시켜줍니다.</li>\n</ul>\n<p>우리와 함께 해주셔서 감사합니다. 스토리북 메일링 리스트를 구독하셔서 이 핸드북과 같이 유용한 기사와 가이드가 공개될 때마다 알림을 받아보세요.</p>\n<iframe style=\"height:400px;width:100%;max-width:800px;margin:0px auto;\" src=\"https://upscri.be/d42fc0?as_embed\"></iframe>","frontmatter":{"title":"마무리","description":"적게 손대고 더 많은 게 해결되도록 하자","commit":null},"fields":{"guide":"ui-testing-handbook","slug":"/ui-testing-handbook/react/ko/conclusion/","chapter":"conclusion","framework":"react","language":"ko","permalink":"https://storybook.js.org/tutorials/ui-testing-handbook/react/ko/conclusion/","tutorialUpToDate":false}},"currentGuide":{"frontmatter":{"codeGithubUrl":"https://github.com/chromaui/ui-testing-guide-code","toc":["introduction","visual-testing","composition-testing","interaction-testing","accessibility-testing","user-flow-testing","automate","workflow","conclusion"],"title":"UI Testing Handbook","twitterShareText":"I'm learning how to test UIs! This will help me ship UIs without worrying about stowaway bugs."}},"site":{"siteMetadata":{"title":"Storybook Tutorials","githubUrl":"https://github.com/chromaui/learnstorybook.com","contributeUrl":"https://github.com/chromaui/learnstorybook.com/#contribute","permalink":"https://storybook.js.org/tutorials","siteUrl":"https://storybook.js.org"}},"tocPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"접근성","title":"스토리북(Storybook)을 통한 접근성 테스트","description":"통합적인 툴 사용(integrated tooling)으로 빠른 피드백 제공"},"fields":{"slug":"/ui-testing-handbook/react/ko/accessibility-testing/","framework":"react","chapter":"accessibility-testing"}}},{"node":{"frontmatter":{"tocTitle":"자동화(Automate)","title":"깃허브(Github) 액션으로 UI 테스트 자동화하기","description":"작업 흐름(workflow)을 더 빠르게 만들고, 더 고품질의 코드를 전달하기"},"fields":{"slug":"/ui-testing-handbook/react/ko/automate/","framework":"react","chapter":"automate"}}},{"node":{"frontmatter":{"tocTitle":"구성","title":"구성 테스트","description":"사소한 변경이 커다란 회귀로 변하는 것을 방지하기"},"fields":{"slug":"/ui-testing-handbook/react/ko/composition-testing/","framework":"react","chapter":"composition-testing"}}},{"node":{"frontmatter":{"tocTitle":"마무리","title":"마무리","description":"적게 손대고 더 많은 게 해결되도록 하자"},"fields":{"slug":"/ui-testing-handbook/react/ko/conclusion/","framework":"react","chapter":"conclusion"}}},{"node":{"frontmatter":{"tocTitle":"상호작용","title":"컴포넌트 상호작용 테스트하기","description":"사용자의 동작을 시뮬레이션하고 기능별 검사를 실행하는 방법 알아보기"},"fields":{"slug":"/ui-testing-handbook/react/ko/interaction-testing/","framework":"react","chapter":"interaction-testing"}}},{"node":{"frontmatter":{"tocTitle":"소개","title":"UI 테스트 소개","description":"UI 테스트를 위한 최신 개발 방법"},"fields":{"slug":"/ui-testing-handbook/react/ko/introduction/","framework":"react","chapter":"introduction"}}},{"node":{"frontmatter":{"tocTitle":"사용자 플로우(User flow)","title":"사용자 플로우(user flow) 테스트하기","description":"UI가 전체적으로 작동하는지 확인해보세요"},"fields":{"slug":"/ui-testing-handbook/react/ko/user-flow-testing/","framework":"react","chapter":"user-flow-testing"}}},{"node":{"frontmatter":{"tocTitle":"시각적 요소 테스트","title":"스토리북(Storybook)의 시각적 요소 테스트","description":"UI 버그를 자동으로 찾아내는 방법 알아보기"},"fields":{"slug":"/ui-testing-handbook/react/ko/visual-testing/","framework":"react","chapter":"visual-testing"}}},{"node":{"frontmatter":{"tocTitle":"작업 흐름(Workflow)","title":"UI 테스팅 플레이북","description":"우리를 느리게 하지 않는 테스팅 작업 흐름(workflow)"},"fields":{"slug":"/ui-testing-handbook/react/ko/workflow/","framework":"react","chapter":"workflow"}}}]},"translationPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Accessibility","title":"Accessibility testing with Storybook","description":"Fast feedback with integrated tooling"},"fields":{"slug":"/ui-testing-handbook/react/en/accessibility-testing/","framework":"react","chapter":"accessibility-testing","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Automate","title":"How to automate UI tests with Github Actions","description":"Speed up your workflow and ship higher quality of code"},"fields":{"slug":"/ui-testing-handbook/react/en/automate/","framework":"react","chapter":"automate","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Get more done by doing less"},"fields":{"slug":"/ui-testing-handbook/react/en/conclusion/","framework":"react","chapter":"conclusion","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Interaction","title":"Testing component interactions","description":"Learn how to simulate user behaviour and run functional checks"},"fields":{"slug":"/ui-testing-handbook/react/en/interaction-testing/","framework":"react","chapter":"interaction-testing","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to testing UIs","description":"Latest production-ready techniques for testing UIs"},"fields":{"slug":"/ui-testing-handbook/react/en/introduction/","framework":"react","chapter":"introduction","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"User flow","title":"Testing user flows","description":"Verify that your UI works end-to-end"},"fields":{"slug":"/ui-testing-handbook/react/en/user-flow-testing/","framework":"react","chapter":"user-flow-testing","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Visual","title":"Visual testing in Storybook","description":"Learn how to pinpoint UI bugs automatically"},"fields":{"slug":"/ui-testing-handbook/react/en/visual-testing/","framework":"react","chapter":"visual-testing","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Workflow","title":"UI Testing Playbook","description":"A testing workflow that doesn’t slow you down"},"fields":{"slug":"/ui-testing-handbook/react/en/workflow/","framework":"react","chapter":"workflow","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"접근성","title":"스토리북(Storybook)을 통한 접근성 테스트","description":"통합적인 툴 사용(integrated tooling)으로 빠른 피드백 제공"},"fields":{"slug":"/ui-testing-handbook/react/ko/accessibility-testing/","framework":"react","chapter":"accessibility-testing","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"자동화(Automate)","title":"깃허브(Github) 액션으로 UI 테스트 자동화하기","description":"작업 흐름(workflow)을 더 빠르게 만들고, 더 고품질의 코드를 전달하기"},"fields":{"slug":"/ui-testing-handbook/react/ko/automate/","framework":"react","chapter":"automate","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"구성","title":"구성 테스트","description":"사소한 변경이 커다란 회귀로 변하는 것을 방지하기"},"fields":{"slug":"/ui-testing-handbook/react/ko/composition-testing/","framework":"react","chapter":"composition-testing","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"마무리","title":"마무리","description":"적게 손대고 더 많은 게 해결되도록 하자"},"fields":{"slug":"/ui-testing-handbook/react/ko/conclusion/","framework":"react","chapter":"conclusion","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"상호작용","title":"컴포넌트 상호작용 테스트하기","description":"사용자의 동작을 시뮬레이션하고 기능별 검사를 실행하는 방법 알아보기"},"fields":{"slug":"/ui-testing-handbook/react/ko/interaction-testing/","framework":"react","chapter":"interaction-testing","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"소개","title":"UI 테스트 소개","description":"UI 테스트를 위한 최신 개발 방법"},"fields":{"slug":"/ui-testing-handbook/react/ko/introduction/","framework":"react","chapter":"introduction","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"사용자 플로우(User flow)","title":"사용자 플로우(user flow) 테스트하기","description":"UI가 전체적으로 작동하는지 확인해보세요"},"fields":{"slug":"/ui-testing-handbook/react/ko/user-flow-testing/","framework":"react","chapter":"user-flow-testing","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"시각적 요소 테스트","title":"스토리북(Storybook)의 시각적 요소 테스트","description":"UI 버그를 자동으로 찾아내는 방법 알아보기"},"fields":{"slug":"/ui-testing-handbook/react/ko/visual-testing/","framework":"react","chapter":"visual-testing","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"작업 흐름(Workflow)","title":"UI 테스팅 플레이북","description":"우리를 느리게 하지 않는 테스팅 작업 흐름(workflow)"},"fields":{"slug":"/ui-testing-handbook/react/ko/workflow/","framework":"react","chapter":"workflow","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Composition","title":"Testing composite components","description":"Prevent minor changes from turning into major regressions"},"fields":{"slug":"/ui-testing-handbook/react/en/composition-testing/","framework":"react","chapter":"composition-testing","language":"en"}}}]}},"pageContext":{"guide":"ui-testing-handbook","slug":"/ui-testing-handbook/react/ko/conclusion/","framework":"react","language":"ko","chapter":"conclusion","pageType":"chapter"}},"staticQueryHashes":["238248339"]}
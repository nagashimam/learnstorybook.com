{"componentChunkName":"component---src-components-screens-chapter-screen-index-js","path":"/design-systems-for-developers/react/ko/test/","result":{"data":{"currentPage":{"html":"<p>5장에서는 UI 버그를 방지하기 위해 디자인 시스템 테스트를 자동화합니다. 이 장에서는 테스트가 필요한 UI 컴포넌트의 특성과 피해야 할 잠재적 함정에 대해 자세히 설명합니다. Wave, BBC 및 Salesforce의 전문 팀을 조사하여 종합적인 테스트 적용 범위, 직관적인 초기 설정 및 낮은 유지 보수 비용 간의 균형을 고려한 테스트 전략을 수립했습니다.</p>\n<img src=\"/tutorials/design-systems-for-developers/ui-component.png\" width=\"250\">\n<h2>UI 컴포넌트 테스트의 기초</h2>\n<p>시작하기 전에 무엇이 테스트에 적합할지 알아봅시다. 디자인 시스템은 UI 컴포넌트로 구성됩니다. 각 UI 컴포넌트에는 일련의 입력(속성)들이 주어졌을 때 의도한 외관과 느낌을 설명하는 스토리(순열)들이 포함되어 있습니다. 그런 다음 최종 사용자를 위해 브라우저 또는 장치에서 스토리를 렌더링 합니다.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/component-test-cases.png\" alt=\"결합적인 컴포넌트 상태\"></p>\n<p>우와! 보시다시피 한 컴포넌트에는 여러 상태가 포함되어 있습니다. 상태에 디자인 시스템 컴포넌트의 수를 곱해본다면, 모든 상태를 추적하는 것이 불가능하다는 것을 알 수 있습니다. 특히 디자인 시스템이 확장되는 경우 모든 요소를 수작업으로 검토하는 것은 현실적으로 지속가능하지 않습니다.</p>\n<p>그러니 더더욱 <strong>나중의</strong> 수고를 덜하기 위해 <strong>지금</strong> 자동 테스트를 설정해야 합니다.</p>\n<h2>테스트 준비</h2>\n<p>전문적인 스토리북(Storybook) 작업 흐름(workflow)에 대해 <a href=\"https://www.chromatic.com/blog/the-delightful-storybook-workflow\">이전 글</a>에서 4개의 프런트엔드 팀을 설문 조사했습니다. 그들은 스토리(story) 작성에 대한 이러한 모범 사례들이 쉽고 포괄적인 테스트를 만든다는 것에 동의했습니다.</p>\n<p>어떤 입력 조합이 테스트 항목으로 주어지는지 명확히 하기 위해 <strong>스토리가 지원하는 컴포넌트 상태</strong>들을 표시합니다. 엉뚱한 테스트 범위를 줄이기 위해 지원되지 않는 상태를 가차 없이 제거합니다.</p>\n<p><strong>일관되게 컴포넌트를 렌더링</strong>하여 무작위(Math.random()) 또는 상대적(Date.now()) 입력에 의해 촉발될 수 있는 가변성을 완화합니다.</p>\n<blockquote>\n<p>\"최고의 스토리는 컴포넌트가 실제로 경험할 수 있는 모든 상태를 시각화할 수 있도록 해줍니다.\" – Tim Hingston, Apollo GraphQL의 기술 책임자</p>\n</blockquote>\n<h2>외관에 대한 시각적 테스트</h2>\n<p>디자인 시스템에는 본질적으로 시각적인 UI 컴포넌트가 포함되어 있습니다. 시각적 테스트는 렌더링 된 UI의 시각적 측면을 검증합니다.</p>\n<p>시각적 테스트는 일관된 브라우저 환경에서 모든 UI 컴포넌트의 이미지를 캡처합니다. 새 스크린샷은 이전에 테스트를 통과하여 기준 버전으로 지정되었던 스크린샷과 자동으로 비교됩니다. 시각적 차이가 있으면 알림을 받을 수 있습니다.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/component-visual-testing.gif\" alt=\"시각적 테스트 컴포넌트\"></p>\n<p>모던 UI를 구축하는 경우 시각적 테스트를 통해 프런트엔드 팀이 수작업 리뷰에 드는 시간을 절약하고 비용이 많이 드는 UI 회귀 테스트를 수행하는 것을 방지할 수 있습니다.</p>\n<p><a href=\"https://storybook.js.org/tutorials/design-systems-for-developers/react/ko/review/#publish-storybook\">이전 장</a>에서 <a href=\"https://www.chromatic.com/?utm_source=storybook_website&#x26;utm_medium=link&#x26;utm_campaign=storybook\">크로마틱(Chromatic)</a>을 사용하여 스토리북을 게시하는 방법을 배웠습니다. 각 <code>버튼</code> 컴포넌트 주위에 굵은 빨간색 테두리(border)를 추가한 다음, 팀원에게 피드백을 요청했습니다.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-button-border-change.png\" alt=\"빨간색 테두리 버튼\"></p>\n<p>이제 크로마틱에 내장된 <a href=\"https://www.chromatic.com/features/test/?utm_source=storybook_website&#x26;utm_medium=link&#x26;utm_campaign=storybook\">테스트 도구</a>를 사용하여 시각적 테스트가 어떻게 작동하는지 살펴보겠습니다. 풀 리퀘스트(pull request)가 생성되었을 때 크로마틱은 변경 사항에 대한 이미지를 캡처하여 동일한 컴포넌트의 이전 버전과 비교했습니다. 4가지 변경 사항이 발견되었습니다.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-list-of-checks.png\" alt=\"풀 리퀘스트의 체크 목록\"></p>\n<p><strong>🟡 UI 테스트</strong> 체크를 클릭하여 검토합니다.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-second-build-from-pr.png\" alt=\"크로마틱에서 변경된 두 번째 빌드(build)\"></p>\n<p>검토하여 의도적인 것인지 (개선) 의도하지 않은 것인지 (버그) 확인합니다. 변경 사항을 수락하면 테스트 기준이 업데이트됩니다. 즉, 후속 commit은 버그를 감지하기 위해 새로운 기준 버전과 비교됩니다.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-review-changes-pr.png\" alt=\"크로마틱에서의 변경 검토\"></p>\n<p>이전 장에서 우리 팀원은 어떤 이유로 <code>버튼</code> 주위에 빨간색 테두리를 원하지 않았습니다. 취소해야 함을 나타 내기 위해 변경 사항을 거부합니다.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-review-deny.png\" alt=\"크로마틱에서 거부 검토\"></p>\n<p>변경 사항을 실행 취소하고 다시 commit하여 시각적 테스트를 다시 통과해보세요.</p>\n<h2>기능성에 대한 단위 테스트</h2>\n<p>단위 테스트는 제어된 입력이 주어졌을 때 UI 코드가 올바른 출력을 반환하는지 확인합니다. 컴포넌트와 함께 존재하며 특정 기능을 검증하는 데 도움이 됩니다.</p>\n<p>모든 것은 React, Vue 및 Angular와 같은 최신 뷰 레이어의 컴포넌트입니다. 컴포넌트는 단순한 버튼부터 정교한 날짜 선택기까지 다양한 기능을 캡슐화합니다. 컴포넌트가 복잡할수록 시각적 테스트만으로 뉘앙스를 포착하는 것이 더 까다로워집니다. 그렇기 때문에 단위 테스트가 필요합니다.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/component-unit-testing.gif\" alt=\"단위 테스트 컴포넌트\"></p>\n<p>예를 들어, 링크 컴포넌트는 링크 URL을 생성하는 시스템 (ReactRouter, Gatsby 또는 Next.js의 \"LinkWrappers\")과 결합할 때 약간 복잡해집니다. 구현 단계의 실수는 유효한 href 값이 없는 링크를 생성할 수 있습니다.</p>\n<p>시각을 통해서는 <code>href</code> 속성이 있고 올바른 위치를 가리키는지 확인할 수 없으므로 회귀 테스트를 방지하기 위해 단위 테스트가 적절할 수 있습니다.</p>\n<h4>href에 대한 단위 테스트</h4>\n<p><code>Link</code> 컴포넌트에 대한 단위 테스트를 추가해 봅시다. <a href=\"https://create-react-app.dev/\">Create React App</a> 은 이미 단위 테스트 환경을 설정했으므로 간단히 <code>src/Link.test.js</code> 파일을 만들 수 있습니다.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`import { render } from '@testing-library/react';\nimport { Link } from './Link';\n\ntest('has a href attribute when rendering with linkWrapper', () => {\n  // eslint-disable-next-line jsx-a11y/anchor-has-content\n  const LinkWrapper = props => <a {...props} />;\n  const { container } = render(\n    <Link href=&quot;https://storybook.js.org/tutorials/&quot; LinkWrapper={LinkWrapper}>\n      Link Text\n    </Link>\n  );\n\n  const linkElement = container.querySelector('a[href=&quot;https://storybook.js.org/tutorials/&quot;]');\n  expect(linkElement).not.toBeNull();\n  expect(linkElement.textContent).toEqual('Link Text');\n});`, `3217170361539611600`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"3217170361539611600\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/Link.test.js</div>\n<pre><code class=\"language-js\">import { render } from '@testing-library/react';\nimport { Link } from './Link';\n\ntest('has a href attribute when rendering with linkWrapper', () => {\n  // eslint-disable-next-line jsx-a11y/anchor-has-content\n  const LinkWrapper = props => &#x3C;a {...props} />;\n  const { container } = render(\n    &#x3C;Link href=\"https://storybook.js.org/tutorials/\" LinkWrapper={LinkWrapper}>\n      Link Text\n    &#x3C;/Link>\n  );\n\n  const linkElement = container.querySelector('a[href=\"https://storybook.js.org/tutorials/\"]');\n  expect(linkElement).not.toBeNull();\n  expect(linkElement.textContent).toEqual('Link Text');\n});\n</code></pre>\n<p><code>yarn test</code> 명령의 일부로 위의 단위 테스트를 실행할 수 있습니다.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/jest-test.png\" alt=\"단일 Jest 테스트를 실행합니다\"></p>\n<p>이전에 스토리북을 배포하도록 GitHub Action을 구성했고, 이제 테스트도 포함하도록 조정할 수 있습니다. 기여자들은 이제 이 단위 테스트의 혜택을 누릴 수 있고, Link 컴포넌트는 회귀를 방어할 수 있습니다.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`# ... Same as before\njobs:\n  test:\n    # The operating system it will run on\n    runs-on: ubuntu-latest\n    # The list of steps that the action will go through\n    steps:\n      - uses: actions/checkout@v1\n      - run: yarn\n     - run: yarn test # Adds the test command\n        #👇 Adds Chromatic as a step in the workflow\n      - uses: chromaui/action@v1\n        # Options required for Chromatic's GitHub Action\n        with:\n          #👇 Chromatic projectToken, see https://storybook.js.org/tutorials/design-systems-for-developers/react/ko/review/ to obtain it\n          projectToken: project-token\n          token: \\${{ secrets.GITHUB_TOKEN }}`, `43131473865463900000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"43131473865463900000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">.github/workflows/chromatic.yml</div>\n<pre><code class=\"language-diff\"># ... Same as before\njobs:\n  test:\n    # The operating system it will run on\n    runs-on: ubuntu-latest\n    # The list of steps that the action will go through\n    steps:\n      - uses: actions/checkout@v1\n      - run: yarn\n+     - run: yarn test # Adds the test command\n        #👇 Adds Chromatic as a step in the workflow\n      - uses: chromaui/action@v1\n        # Options required for Chromatic's GitHub Action\n        with:\n          #👇 Chromatic projectToken, see https://storybook.js.org/tutorials/design-systems-for-developers/react/ko/review/ to obtain it\n          projectToken: project-token\n          token: ${{ secrets.GITHUB_TOKEN }}\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/gh-action-with-test-successful-build.png\" alt=\"성공적인 Circle 빌드\"></p>\n<div class=\"aside\">💡 <strong>참고 :</strong> 업데이트를 번거롭게 만들 수 있는 너무 많은 단위 테스트에 주의하십시오. 디자인 시스템에 대한 단위 테스트를 적당한 수준에서 할 것을 권장합니다.</div>\n<blockquote>\n<p>\"향상된 자동화 테스트 모음 덕분에 디자인 시스템 팀이 더 확신을 가지고 더 빠르게 움직일 수 있게 되었습니다.\" – Dan Green-Leipciger, Wave의 선임 소프트웨어 엔지니어</p>\n</blockquote>\n<h2>접근성 테스트</h2>\n<p>\"접근성은 장애가 있는 사용자를 포함한 모든 사용자가 애플리케이션을 이해하고 탐색하고 상호 작용할 수 있음을 의미합니다. 온라인 [예제]에는 탭 키나 스크린 리더를 통해 사이트를 탐색하는 것처럼 콘텐츠에 접근할 수 있는 다른 방법들을 포함했습니다.\" 개발자 <a href=\"https://medium.com/storybookjs/instant-accessibility-qa-linting-in-storybook-4a474b0f5347\">T.Rowe Price의 Alex Wilson</a>이 작성하였습니다.</p>\n<p><a href=\"https://www.who.int/disabilities/world_report/2011/report/en/\">세계 보건기구</a>에 따르면 전 인류의 15%가 장애를 가지고 있습니다. 디자인 시스템은 사용자 인터페이스의 컴포넌트를 포함하므로 접근성에 큰 영향을 미칩니다. 단 하나의 컴포넌트에 대한 접근성을 향상시킨다는 것은 회사 전체에서 해당 컴포넌트의 모든 인스턴스의 접근성이 향상된다는 것을 의미합니다.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-accessibility-addon.png\" alt=\"스토리북 접근성 애드온(addon)\"></p>\n<p>웹 접근성 표준(WCAG)을 실시간으로 확인하기 위한 도구인 스토리북의 접근성 애드온을 사용하여 포용력 있는 UI를 시작하세요.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`yarn add --dev @storybook/addon-a11y`, `84696075251232620000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"84696075251232620000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">yarn add --dev @storybook/addon-a11y\n</code></pre>\n<p>애드온을 <code>.storybook/main.js</code>에 추가:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`module.exports = {\n  stories: ['../src/**/*.stories.mdx', '../src/**/*.stories.@(js|jsx|ts|tsx)'],\n  addons: [\n    '@storybook/addon-links',\n    '@storybook/addon-essentials',\n    '@storybook/preset-create-react-app',\n   '@storybook/addon-a11y',\n    '@storybook/addon-interactions',\n  ],\n  framework: '@storybook/react',\n  staticDirs: ['../public'],\n};`, `35888849820282507000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"35888849820282507000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">.storybook/main.js</div>\n<pre><code class=\"language-diff\">module.exports = {\n  stories: ['../src/**/*.stories.mdx', '../src/**/*.stories.@(js|jsx|ts|tsx)'],\n  addons: [\n    '@storybook/addon-links',\n    '@storybook/addon-essentials',\n    '@storybook/preset-create-react-app',\n+   '@storybook/addon-a11y',\n    '@storybook/addon-interactions',\n  ],\n  framework: '@storybook/react',\n  staticDirs: ['../public'],\n};\n</code></pre>\n<p><code>.storybook/preview.js</code>파일의 <a href=\"https://storybook.js.org/docs/react/writing-stories/parameters\">parameters</a>를 업데이트 하고, 다음의 <code>a11y</code>설정을 추가하세요.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`import React from 'react';\n\nimport { GlobalStyle } from '../src/shared/global';\n\n/*\n* More on Storybook global decorators at:\n* https://storybook.js.org/docs/react/writing-stories/decorators#global-decorators\n*/\nexport const decorators = [\n  Story => (\n    <>\n      <GlobalStyle />\n      <Story />\n    </>\n  ),\n];\n\n/*\n* More on Storybook global parameters at:\n* https://storybook.js.org/docs/react/writing-stories/parameters#global-parameters\n*/\n export const parameters = {\n   actions: { argTypesRegex: '^on[A-Z].*' },\n   // Storybook a11y addon configuration\n   a11y: {\n     // the target DOM element\n     element: '#root',\n     // sets the execution mode for the addon\n     manual: false,\n   },\n };`, `80721548832590660000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"80721548832590660000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">.storybook/preview.js</div>\n<pre><code class=\"language-diff\">import React from 'react';\n\nimport { GlobalStyle } from '../src/shared/global';\n\n/*\n* More on Storybook global decorators at:\n* https://storybook.js.org/docs/react/writing-stories/decorators#global-decorators\n*/\nexport const decorators = [\n  Story => (\n    &#x3C;>\n      &#x3C;GlobalStyle />\n      &#x3C;Story />\n    &#x3C;/>\n  ),\n];\n\n/*\n* More on Storybook global parameters at:\n* https://storybook.js.org/docs/react/writing-stories/parameters#global-parameters\n*/\n+ export const parameters = {\n+   actions: { argTypesRegex: '^on[A-Z].*' },\n+   // Storybook a11y addon configuration\n+   a11y: {\n+     // the target DOM element\n+     element: '#root',\n+     // sets the execution mode for the addon\n+     manual: false,\n+   },\n+ };\n</code></pre>\n<p>모든 설정이 완료되면 스토리북 애드온 패널에 새로운 \"접근성\"탭이 표시됩니다.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-addon-a11y-6-0.png\" alt=\"스토리북 A11y 애드온\"></p>\n<p>DOM 요소 (위반 및 통과)의 접근성 수준을 보여줍니다. UI 컴포넌트인 \"highlight results\" 체크박스를 클릭하여 UI 컴포넌트와 관련된 상황에서의 위반 사항을 시각화합니다.</p>\n<video autoPlay muted playsInline loop>\n  <source\n    src=\"/tutorials/design-systems-for-developers/storybook-addon-a11y-6-0-highlighted.mp4\"\n    type=\"video/mp4\"\n  />\n</video>\n<p>지금부터는 애드온의 접근성 권장 사항을 따르세요.</p>\n<h2>기타 테스트 전략</h2>\n<p>역설적이게도 테스트는 시간을 절약해주기도 하지만 유지 관리로 인해 개발 속도를 저하시킵니다. 모든 것이 아니라 올바른 것을 테스트하는 데 집중하세요. 소프트웨어 개발에는 많은 테스트 전략이 있지만 모두 디자인 시스템에 적합하지는 않다는 것을 저희도 어렵게 깨달았습니다.</p>\n<h4>스냅샷 테스트 (Jest)</h4>\n<p>이 기술은 UI 컴포넌트의 코드 출력을 캡처하여 이전 버전과 비교합니다. UI 컴포넌트 마크업을 테스트하면 결국에는 사용자가 브라우저에서 경험하는 것을 테스트하는 것이 아닌 구현 세부 정보(코드)를 테스트하게 됩니다.</p>\n<p>변경된 코드 스냅샷 비교는 예측할 수 없으며 긍정 오류(false positive)가 발생하기 쉽습니다. 컴포넌트 수준에서의 코드 스냅 샷은 디자인 토큰, CSS 및 타사 API 업데이트 (웹 글꼴, 스트라이프 양식, Google 지도 등)와 같은 전체적인 변경 사항을 탐지할 수 없습니다. 실제로 개발자는 \"모두 승인\"하거나 스냅 샷 테스트를 모두 무시합니다.</p>\n<blockquote>\n<p>대부분의 컴포넌트 스냅샷 테스트는 실제로 스크린샷 테스트의 더 나쁜 버전일 뿐입니다. 출력을 테스트해보세요. 기본 (휘발성!) 마크업이 아니라 렌더링 되는 항목을 스냅샷 합니다. – Mark Dalgliesh, SEEK의 프런트엔드 인프라, CSS 모듈 작성자</p>\n</blockquote>\n<h4>엔드 투 엔드(End to end) 테스트 (Selenium, Cypress)</h4>\n<p>엔드 투 엔드 테스트는 컴포넌트 DOM을 탐색하여 사용자의 작업 절차를 시뮬레이션합니다. 가입 또는 결제 프로세스와 같은 앱 작업 절차를 확인하는 데 가장 적합합니다. 이 테스트 전략은 기능이 복잡할수록 더 유용합니다.</p>\n<p>디자인 시스템은 비교적 단순한 기능을 가진 단일 컴포넌트를 포함합니다. 사용자 작업 절차에 대한 유효성 검사는 테스트를 생성하는 데 시간이 많이 걸리고 유지 관리를 하기에도 취약하기 때문에 여기에는 적합하지 않은것으로 간주되는 편입니다. 그러나 컴포넌트가 드물게 엔드 투 엔드 테스트의 이점을 누릴 수 있는 경우도 있습니다. 예를 들면, 날짜 선택기 또는 자체 내장된 결제 양식과 같은 복잡한 UI의 유효성을 검사하는 경우입니다.</p>\n<h2>문서화를 통해 디자인 시스템 도입 촉진</h2>\n<p>디자인 시스템은 테스트만으로는 완성되지 않습니다. 디자인 시스템은 조직 전체의 이해 관계자들에게 서비스를 제공하므로 잘 테스트 된 UI 컴포넌트를 최대한 활용하는 방법을 다른 사람들에게 가르쳐야 합니다.</p>\n<p>6장에서는 문서를 통해 디자인 시스템 도입을 가속화하는 방법을 배웁니다. 왜 Storybook Docs가 작은 노력으로 이해하기 쉬운 문서를 만드는 비밀 무기인지 알아보세요.</p>","frontmatter":{"title":"품질 유지를 위한 테스트","description":"디자인 시스템 외관, 기능성 및 접근성을 테스트하는 방법","commit":"5f69e5c"},"fields":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/ko/test/","chapter":"test","framework":"react","language":"ko","permalink":"https://storybook.js.org/tutorials/design-systems-for-developers/react/ko/test/","tutorialUpToDate":false}},"currentGuide":{"frontmatter":{"codeGithubUrl":"https://github.com/chromaui/learnstorybook-design-system","toc":["introduction","architecture","build","review","test","document","distribute","workflow","conclusion"],"title":"Design Systems for Developers","twitterShareText":"I’m learning about building design systems! They're great for scaling frontend code on large teams."}},"site":{"siteMetadata":{"title":"Storybook Tutorials","githubUrl":"https://github.com/chromaui/learnstorybook.com","contributeUrl":"https://github.com/chromaui/learnstorybook.com/#contribute","permalink":"https://storybook.js.org/tutorials","siteUrl":"https://storybook.js.org"}},"tocPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"설계","title":"시스템 설계","description":"컴포넌트 라이브러리에서 디자인 시스템을 추출하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/architecture/","framework":"react","chapter":"architecture"}}},{"node":{"frontmatter":{"tocTitle":"빌드","title":"UI 컴포넌트 구축하기","description":"스토리북에서 디자인 시스템 컴포넌트를 구축하고 구조화하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/build/","framework":"react","chapter":"build"}}},{"node":{"frontmatter":{"tocTitle":"마무리","title":"마무리","description":"잘 갖춰놓은 디자인 시스템으로 시간 절약과 생산성 향상"},"fields":{"slug":"/design-systems-for-developers/react/ko/conclusion/","framework":"react","chapter":"conclusion"}}},{"node":{"frontmatter":{"tocTitle":"배포","title":"UI 배포","description":"디자인 시스템을 다른 앱에 패키징하고 import하는 방법을 배웁니다."},"fields":{"slug":"/design-systems-for-developers/react/ko/distribute/","framework":"react","chapter":"distribute"}}},{"node":{"frontmatter":{"tocTitle":"문서","title":"이해관계자를 위한 문서","description":"문서화를 통하여 디자인 시스템 도입을 촉진하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/document/","framework":"react","chapter":"document"}}},{"node":{"frontmatter":{"tocTitle":"소개","title":"디자인 시스템 소개","description":"디자인 시스템을 위한 최신 개발 방법 도구 가이드"},"fields":{"slug":"/design-systems-for-developers/react/ko/introduction/","framework":"react","chapter":"introduction"}}},{"node":{"frontmatter":{"tocTitle":"리뷰","title":"팀과 함께 리뷰하기","description":"지속적 통합(CI)과 비주얼 리뷰를 통한 협업"},"fields":{"slug":"/design-systems-for-developers/react/ko/review/","framework":"react","chapter":"review"}}},{"node":{"frontmatter":{"tocTitle":"테스트","title":"품질 유지를 위한 테스트","description":"디자인 시스템 외관, 기능성 및 접근성을 테스트하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/test/","framework":"react","chapter":"test"}}},{"node":{"frontmatter":{"tocTitle":"작업 흐름(workflow)","title":"디자인 시스템을 위한 작업 흐름(workflow)","description":"프론트엔드 개발자를 위한 디자인 시스템 작업 흐름(workflow)의 개요"},"fields":{"slug":"/design-systems-for-developers/react/ko/workflow/","framework":"react","chapter":"workflow"}}}]},"translationPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Architecture","title":"Architecting systems","description":"How to extract a design system from component libraries"},"fields":{"slug":"/design-systems-for-developers/react/en/architecture/","framework":"react","chapter":"architecture","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Build","title":"Build UI components","description":"Set up Storybook to build and catalog design system components"},"fields":{"slug":"/design-systems-for-developers/react/en/build/","framework":"react","chapter":"build","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Thriving design systems save time and increase productivity"},"fields":{"slug":"/design-systems-for-developers/react/en/conclusion/","framework":"react","chapter":"conclusion","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Distribute","title":"Distribute UI across an organization","description":"Learn to package and import your design system into other apps"},"fields":{"slug":"/design-systems-for-developers/react/en/distribute/","framework":"react","chapter":"distribute","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Document","title":"Document for stakeholders","description":"Drive design system adoption with documentation"},"fields":{"slug":"/design-systems-for-developers/react/en/document/","framework":"react","chapter":"document","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to design systems","description":"A guide to the latest production-ready tools for design systems"},"fields":{"slug":"/design-systems-for-developers/react/en/introduction/","framework":"react","chapter":"introduction","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Review","title":"Review with teams","description":"Collaborate with continuous integration and visual review"},"fields":{"slug":"/design-systems-for-developers/react/en/review/","framework":"react","chapter":"review","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Test","title":"Test to maintain quality","description":"How to test design system appearance, functionality, and accessibility"},"fields":{"slug":"/design-systems-for-developers/react/en/test/","framework":"react","chapter":"test","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Workflow","title":"Workflow for design systems","description":"An overview of the design system workflow for frontend developers"},"fields":{"slug":"/design-systems-for-developers/react/en/workflow/","framework":"react","chapter":"workflow","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"設計","title":"システム設計","description":"コンポーネントライブラリーからデザインシステムを抽出する方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/architecture/","framework":"react","chapter":"architecture","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"構築","title":"UIコンポーネントを構築する","description":"Storybook をセットアップしデザインシステムコンポーネントを構築してカタログ化する"},"fields":{"slug":"/design-systems-for-developers/react/ja/build/","framework":"react","chapter":"build","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"結論","title":"結論","description":"デザインシステムの成長が時間を節約し生産性を向上させる"},"fields":{"slug":"/design-systems-for-developers/react/ja/conclusion/","framework":"react","chapter":"conclusion","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"配布","title":"組織を横断してUIを配布する","description":"デザインシステムをパッケージングし他のアプリへインポートする方法を学ぶ"},"fields":{"slug":"/design-systems-for-developers/react/ja/distribute/","framework":"react","chapter":"distribute","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ドキュメント","title":"ステークホルダーに向けたドキュメント","description":"ドキュメンテーションでデザインシステムの採用を推進する"},"fields":{"slug":"/design-systems-for-developers/react/ja/document/","framework":"react","chapter":"document","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"イントロダクション","title":"デザインシステムのイントロダクション","description":"デザインシステムのために最新のリリース可能なツールのガイド"},"fields":{"slug":"/design-systems-for-developers/react/ja/introduction/","framework":"react","chapter":"introduction","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"レビュー","title":"チームでレビューする","description":"継続的インテグレーションとビジュアルレビューで協働する"},"fields":{"slug":"/design-systems-for-developers/react/ja/review/","framework":"react","chapter":"review","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"テスト","title":"品質を保つためのテスト","description":"デザインシステムの見た目、機能性、アクセシビリティをテストする方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/test/","framework":"react","chapter":"test","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ワークフロー","title":"デザインシステムのためのワークフロー","description":"フロントエンド開発者のためのデザインシステムワークフローの概要"},"fields":{"slug":"/design-systems-for-developers/react/ja/workflow/","framework":"react","chapter":"workflow","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"설계","title":"시스템 설계","description":"컴포넌트 라이브러리에서 디자인 시스템을 추출하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/architecture/","framework":"react","chapter":"architecture","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"빌드","title":"UI 컴포넌트 구축하기","description":"스토리북에서 디자인 시스템 컴포넌트를 구축하고 구조화하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/build/","framework":"react","chapter":"build","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"마무리","title":"마무리","description":"잘 갖춰놓은 디자인 시스템으로 시간 절약과 생산성 향상"},"fields":{"slug":"/design-systems-for-developers/react/ko/conclusion/","framework":"react","chapter":"conclusion","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"배포","title":"UI 배포","description":"디자인 시스템을 다른 앱에 패키징하고 import하는 방법을 배웁니다."},"fields":{"slug":"/design-systems-for-developers/react/ko/distribute/","framework":"react","chapter":"distribute","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"문서","title":"이해관계자를 위한 문서","description":"문서화를 통하여 디자인 시스템 도입을 촉진하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/document/","framework":"react","chapter":"document","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"소개","title":"디자인 시스템 소개","description":"디자인 시스템을 위한 최신 개발 방법 도구 가이드"},"fields":{"slug":"/design-systems-for-developers/react/ko/introduction/","framework":"react","chapter":"introduction","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"리뷰","title":"팀과 함께 리뷰하기","description":"지속적 통합(CI)과 비주얼 리뷰를 통한 협업"},"fields":{"slug":"/design-systems-for-developers/react/ko/review/","framework":"react","chapter":"review","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"테스트","title":"품질 유지를 위한 테스트","description":"디자인 시스템 외관, 기능성 및 접근성을 테스트하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/test/","framework":"react","chapter":"test","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"작업 흐름(workflow)","title":"디자인 시스템을 위한 작업 흐름(workflow)","description":"프론트엔드 개발자를 위한 디자인 시스템 작업 흐름(workflow)의 개요"},"fields":{"slug":"/design-systems-for-developers/react/ko/workflow/","framework":"react","chapter":"workflow","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Construção","title":"Construção de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Conclusão","title":"Conclusão","description":"Sistemas de design prósperos economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Distribuição","title":"Distribuir o IU numa organização","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplicações"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a adoção de sistemas de design através de documentação"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Introdução","title":"Introdução aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produção"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Revisão","title":"Revisão com equipas","description":"Colaboração através de integração contínua e revisão visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a aparência,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma visão geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"架构","title":"架构系统","description":"如何从现有的组件库中提取出设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","chapter":"architecture","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"创建","title":"创建 UI 组件","description":"使用 Storybook 来创建和分类您设计系统中的组件"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/build/","framework":"react","chapter":"build","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"总结","title":"总结","description":"持续发展的设计系统帮您节省时间并提高效率"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/conclusion/","framework":"react","chapter":"conclusion","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"发布","title":"在整个组织中发布您的 UI 组件","description":"学习如何打包并在别的应用程序中引入您的设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/distribute/","framework":"react","chapter":"distribute","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"文档","title":"写给干系人的文档","description":"通过文档推动设计系统的使用"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/document/","framework":"react","chapter":"document","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"简介","title":"设计系统简介","description":"最新发布的设计系统工具的指南"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/introduction/","framework":"react","chapter":"introduction","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"审查","title":"与团队一起审查","description":"视觉审查与持续集成并进"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/review/","framework":"react","chapter":"review","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"测试","title":"通过测试来保证质量","description":"如何测试设计系统的界面、功能和无障碍访问"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/test/","framework":"react","chapter":"test","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"工作流程","title":"设计系统的工作流程","description":"概述前端开发创建设计系统的工作流程"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","chapter":"workflow","language":"zh-CN"}}}]}},"pageContext":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/ko/test/","framework":"react","language":"ko","chapter":"test","pageType":"chapter"}},"staticQueryHashes":["238248339"]}
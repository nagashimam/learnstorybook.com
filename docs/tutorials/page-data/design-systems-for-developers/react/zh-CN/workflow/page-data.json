{"componentChunkName":"component---src-components-screens-chapter-screen-index-js","path":"/design-systems-for-developers/react/zh-CN/workflow/","result":{"data":{"currentPage":{"html":"<p>前端工具如何协同工作去实现最终目标对设计团队和开发团队有着非常重大的意义。如果做得好，开发和重用组件应该是无缝衔接的。</p>\n<p>这一章我们将演示通过五步工作流程去开发一个新的 AvatarList 组件。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-workflow-horizontal.jpg\" alt=\"Design system workflow\"></p>\n<h2>编写</h2>\n<p>AvatarList 是一个显示多个 avatar 的组件。和其他设计系统的组件一样，AvatarList 组件被粘贴到各个项目中。因此，我们必须将该组件添加到我们的设计系统中去。在此案例中，我们假设组件已经在其他项目中被开发完成了。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/AvatarList.jpg\" alt=\"AvatarList\"></p>\n<p>首先，在 git 上创建一个新的分支来追踪后续工作：</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git checkout -b create-avatar-list-component`, `9533647468491480000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"9533647468491480000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git checkout -b create-avatar-list-component\n</code></pre>\n<p>下载 <code>AvatarList</code> 组件到您本地机器，并将它保存在 <code>/src</code> 目录：</p>\n<ul>\n<li><a href=\"https://raw.githubusercontent.com/chromaui/learnstorybook-design-system/2347a5e8b27635f39091728d0845ff7a2ded3699/src/AvatarList.js\">组件文件</a></li>\n<li><a href=\"https://raw.githubusercontent.com/chromaui/learnstorybook-design-system/2347a5e8b27635f39091728d0845ff7a2ded3699/src/AvatarList.stories.js\">Story 文件</a></li>\n</ul>\n<p>Storybook 被配置为默认识别以 <code>\\*.stories.js</code> 结尾的文件，并将他们显示到 UI 中。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-with-avatarlist.png\" alt=\"Storybook with AvatarList component\"></p>\n<p>赞！我们来看一下 AvatarList 支持的 UI 状态。乍一看，它支持一些和 Avatar 组件一样的属性（如： <code>small</code> 和 <code>loading</code>）。</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`export const smallSize = () => <AvatarList users={users.slice(0, 2)} size=&quot;small&quot; />;\nexport const loading = () => <AvatarList loading />;`, `9498952472314270000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"9498952472314270000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList.js</div>\n<pre><code class=\"language-js\">export const smallSize = () => &#x3C;AvatarList users={users.slice(0, 2)} size=\"small\" />;\nexport const loading = () => &#x3C;AvatarList loading />;\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-with-avatarlist-loading.png\" alt=\"Storybook with more AvatarList stories\"></p>\n<p>由于它是一个列表，所以应该显示多个头像。让我们添加 stories 去分别演示很多个头像和只有几个头像的情况。</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`export const ellipsized = () => <AvatarList users={users} />;\nexport const bigUserCount = () => <AvatarList users={users} userCount={100} />;\nexport const empty = () => <AvatarList users={[]} />;`, `81403575107542880000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"81403575107542880000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList.js</div>\n<pre><code class=\"language-js\">export const ellipsized = () => &#x3C;AvatarList users={users} />;\nexport const bigUserCount = () => &#x3C;AvatarList users={users} userCount={100} />;\nexport const empty = () => &#x3C;AvatarList users={[]} />;\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-with-all-avatarlist-stories.png\" alt=\"Storybook with all AvatarList stories\"></p>\n<p>添加您的修改并提交.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git commit -am &quot;Added AvatarList and stories&quot;`, `42458887608541580000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"42458887608541580000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git commit -am \"Added AvatarList and stories\"\n</code></pre>\n<h2>文档</h2>\n<p>感谢 Storybook Docs 插件，我们只需要花一点点时间便可以得到内容可自定义的文档。它可以帮助其他人通过浏览 Storybook 的 Docs 页签去学习如何使用 AvatarList。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs-minimal-avatarlist.png\" alt=\"Storybook docs with minimal AvatarList info\"></p>\n<p>最小可行的文档！让我们添加如何使用 AvatarList 的上下文来让它更加易读：</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`/**\n * A list of Avatars, ellipsized to at most 3. Supports passing only a subset of the total user count.\n */\nexport function AvatarList({ loading, users, userCount, size, ...props }) {`, `66952861458977030000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"66952861458977030000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList.stories.js</div>\n<pre><code class=\"language-js\">/**\n * A list of Avatars, ellipsized to at most 3. Supports passing only a subset of the total user count.\n */\nexport function AvatarList({ loading, users, userCount, size, ...props }) {\n</code></pre>\n<p>添加一些组件支持属性的详细信息：</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`AvatarList.propTypes = {\n  /**\n   * Are we loading avatar data from the network?\n   */\n  loading: PropTypes.bool,\n  /**\n   * A (sub)-list of the users whose avatars we have data for. Note: only 3 will be displayed.\n   */\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      avatarUrl: PropTypes.string,\n    })\n  ),\n  /**\n   * The total number of users, if a subset is passed to \\`users\\`.\n   */\n  userCount: PropTypes.number,\n  /**\n   * AvatarList comes in four sizes. In most cases, you’ll be fine with \\`medium\\`.\n   */\n  size: PropTypes.oneOf(Object.keys(sizes)),\n};`, `1275393580059724800`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"1275393580059724800\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList.stories.js</div>\n<pre><code class=\"language-js\">AvatarList.propTypes = {\n  /**\n   * Are we loading avatar data from the network?\n   */\n  loading: PropTypes.bool,\n  /**\n   * A (sub)-list of the users whose avatars we have data for. Note: only 3 will be displayed.\n   */\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      avatarUrl: PropTypes.string,\n    })\n  ),\n  /**\n   * The total number of users, if a subset is passed to `users`.\n   */\n  userCount: PropTypes.number,\n  /**\n   * AvatarList comes in four sizes. In most cases, you’ll be fine with `medium`.\n   */\n  size: PropTypes.oneOf(Object.keys(sizes)),\n};\n</code></pre>\n<p>太简单了！ 到目前为止我们的文档已经足够详细了 —— 我们可以使用 MDX 随时添加更多的自定义内容。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs-full-avatarlist.png\" alt=\"Storybook docs with full AvatarList info\"></p>\n<p>文档不需要花费太多精力，有了自动化工具，我们可以删除一些无用的信息然后直接添加我们想要的内容即可。</p>\n<p>提交您的修改到 GitHub 上：</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git commit -am “Improved AvatarList docs”`, `30597125293860807000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"30597125293860807000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git commit -am “Improved AvatarList docs”\n</code></pre>\n<h4>创建一个 pull request</h4>\n<p>让我们将 <code>AvatarList</code> 分支提交到 GitHub 上并创建一个 pull request ：</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git push -u origin \\`create-avatar-list-component\\``, `13529866175166206000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"13529866175166206000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git push -u origin `create-avatar-list-component`\n</code></pre>\n<p>然后打开 GitHub 创建一个 pull request ：</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-pr-create-avatarlist.png\" alt=\"PR created in PR for AvatarList\"></p>\n<h2>审查</h2>\n<p>此时，AvatarList 作为设计系统的候选组件，干系人需要审查它来确定是否在功能和外观上达到了他们的期望。</p>\n<p>设计系统的 Storybook 在每次提交请求后都会自动发布，这让审查变得格外简单。您可以在 pull request 的底部找到部署后的 Storybook 链接。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/avatarlist-github-pr-checks-chromatic-changes.png\" alt=\"PR check for deployed PR\"></p>\n<p>在线上的 Storybook 中找到 AvatarList，它应该和您本地运行的 Storybook 一模一样。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/netlify-deployed-avatarlist-stories.png\" alt=\"AvatarList in Storybook online\"></p>\n<p>线上版本的 Storybook 是一个团队通用的参考样例，将 AvatarList 的链接分享给其他干系人来更快的获得反馈。您的团队成员会非常喜欢您，因为他们不用直接查看代码或者安装开发环境。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/visual-review-shipit.png\" alt=\"Looks good, ship it!\"></p>\n<p>和团队的成员达成共识往往可能是徒劳的，因为他们可能参考了过时的代码，或者没有开发环境，或者将反馈散布在不同的工具上。通过在线的 Storybook 让审查变得像分享链接一样简单。</p>\n<h2>测试</h2>\n<p>我们的测试套件会在每次提交之后在后台运行。AvatarList 是一个简单的显示组件，所以不需要单元测试。但是如果我们查看提交请求检查，我们会发现视觉测试工具 Chromatic 已经识别出需要被审查的变化。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/avatarlist-github-pr-checks-chromatic-changes.png\" alt=\"Chromatic changes on the GitHub PR check\"></p>\n<p>因为 AvatarList 是一个新的组件且未被视觉测试覆盖到，我们则需要为每个 story 去添加新的基准。在 Chromatic 中接受 “新 stories” 去扩大我们的视觉测试覆盖率。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-avatarlist-changes.png\" alt=\"Chromatic changes to the AvatarList stories\"></p>\n<p>当您操作完成后，Chromatic 的检查便会通过。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-avatarlist-changes-accepted.png\" alt=\"Chromatic changes to the AvatarList stories accepted\"></p>\n<p>依次更新 GitHub 中的合并提交检查。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/avatarlist-github-pr-checks-chromatic-changes-accepted.png\" alt=\"Chromatic changes accepted on the GitHub PR check\"></p>\n<p>测试被成功的更新了。在以后，回溯将很难偷偷摸摸地就被加入到设计系统中。</p>\n<h2>发布</h2>\n<p>我们有一个正在进行的 pull request 去把 AvatarList 添加到设计系统中。我们已经编写了相关的 stories，测试已经通过并且也有相关的文档。最后，我们准备好使用 Auto 和 npm 来打包设计系统。</p>\n<p>给 pull request 添加 <code>minor</code> 标签，这可以告诉 Auto 此次更新是一个小版本的更新。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-pr-labelled.png\" alt=\"GitHub PR with labels\"></p>\n<p>现在合并您的 pull request 到主分支，您可以在 npm 网站中打开您的软件包并稍等几分钟（上传软件包）去查看新的版本。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/npm-published-package.png\" alt=\"Package published on npm\"></p>\n<p>成功了! 您的设计系统包已经成功上传。您不需要任何和命令行操作或使用繁杂的 npm。在实例中更新您的 <code>learnstorybook-design-system</code> 依赖项，然后开始使用 AvatarList。</p>\n<h2>开始您的旅程</h2>\n<p><em>针对开发人员的设计系统</em> 着重介绍了专业团队使用的端到端的工作流程，帮助您能在开发自己的设计系统时先行一步。伴随着您的设计系统的发展、整理，您可以扩展这些工具来满足您团队的需求。</p>\n<p>在第九章，我们将以完整的示例代码、有用的学习资源和回答开发常见问题作为结尾。</p>","frontmatter":{"title":"设计系统的工作流程","description":"概述前端开发创建设计系统的工作流程","commit":"9d13d12"},"fields":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/zh-CN/workflow/","chapter":"workflow","framework":"react","language":"zh-CN","permalink":"https://storybook.js.org/tutorials/design-systems-for-developers/react/zh-CN/workflow/","tutorialUpToDate":false}},"currentGuide":{"frontmatter":{"codeGithubUrl":"https://github.com/chromaui/learnstorybook-design-system","toc":["introduction","architecture","build","review","test","document","distribute","workflow","conclusion"],"title":"Design Systems for Developers","twitterShareText":"I’m learning about building design systems! They're great for scaling frontend code on large teams."}},"site":{"siteMetadata":{"title":"Storybook Tutorials","githubUrl":"https://github.com/chromaui/learnstorybook.com","contributeUrl":"https://github.com/chromaui/learnstorybook.com/#contribute","permalink":"https://storybook.js.org/tutorials","siteUrl":"https://storybook.js.org"}},"tocPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"架构","title":"架构系统","description":"如何从现有的组件库中提取出设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","chapter":"architecture"}}},{"node":{"frontmatter":{"tocTitle":"创建","title":"创建 UI 组件","description":"使用 Storybook 来创建和分类您设计系统中的组件"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/build/","framework":"react","chapter":"build"}}},{"node":{"frontmatter":{"tocTitle":"总结","title":"总结","description":"持续发展的设计系统帮您节省时间并提高效率"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/conclusion/","framework":"react","chapter":"conclusion"}}},{"node":{"frontmatter":{"tocTitle":"发布","title":"在整个组织中发布您的 UI 组件","description":"学习如何打包并在别的应用程序中引入您的设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/distribute/","framework":"react","chapter":"distribute"}}},{"node":{"frontmatter":{"tocTitle":"文档","title":"写给干系人的文档","description":"通过文档推动设计系统的使用"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/document/","framework":"react","chapter":"document"}}},{"node":{"frontmatter":{"tocTitle":"简介","title":"设计系统简介","description":"最新发布的设计系统工具的指南"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/introduction/","framework":"react","chapter":"introduction"}}},{"node":{"frontmatter":{"tocTitle":"审查","title":"与团队一起审查","description":"视觉审查与持续集成并进"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/review/","framework":"react","chapter":"review"}}},{"node":{"frontmatter":{"tocTitle":"测试","title":"通过测试来保证质量","description":"如何测试设计系统的界面、功能和无障碍访问"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/test/","framework":"react","chapter":"test"}}},{"node":{"frontmatter":{"tocTitle":"工作流程","title":"设计系统的工作流程","description":"概述前端开发创建设计系统的工作流程"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","chapter":"workflow"}}}]},"translationPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Architecture","title":"Architecting systems","description":"How to extract a design system from component libraries"},"fields":{"slug":"/design-systems-for-developers/react/en/architecture/","framework":"react","chapter":"architecture","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Build","title":"Build UI components","description":"Set up Storybook to build and catalog design system components"},"fields":{"slug":"/design-systems-for-developers/react/en/build/","framework":"react","chapter":"build","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Thriving design systems save time and increase productivity"},"fields":{"slug":"/design-systems-for-developers/react/en/conclusion/","framework":"react","chapter":"conclusion","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Distribute","title":"Distribute UI across an organization","description":"Learn to package and import your design system into other apps"},"fields":{"slug":"/design-systems-for-developers/react/en/distribute/","framework":"react","chapter":"distribute","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Document","title":"Document for stakeholders","description":"Drive design system adoption with documentation"},"fields":{"slug":"/design-systems-for-developers/react/en/document/","framework":"react","chapter":"document","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to design systems","description":"A guide to the latest production-ready tools for design systems"},"fields":{"slug":"/design-systems-for-developers/react/en/introduction/","framework":"react","chapter":"introduction","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Review","title":"Review with teams","description":"Collaborate with continuous integration and visual review"},"fields":{"slug":"/design-systems-for-developers/react/en/review/","framework":"react","chapter":"review","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Test","title":"Test to maintain quality","description":"How to test design system appearance, functionality, and accessibility"},"fields":{"slug":"/design-systems-for-developers/react/en/test/","framework":"react","chapter":"test","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Workflow","title":"Workflow for design systems","description":"An overview of the design system workflow for frontend developers"},"fields":{"slug":"/design-systems-for-developers/react/en/workflow/","framework":"react","chapter":"workflow","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"設計","title":"システム設計","description":"コンポーネントライブラリーからデザインシステムを抽出する方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/architecture/","framework":"react","chapter":"architecture","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"構築","title":"UIコンポーネントを構築する","description":"Storybook をセットアップしデザインシステムコンポーネントを構築してカタログ化する"},"fields":{"slug":"/design-systems-for-developers/react/ja/build/","framework":"react","chapter":"build","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"結論","title":"結論","description":"デザインシステムの成長が時間を節約し生産性を向上させる"},"fields":{"slug":"/design-systems-for-developers/react/ja/conclusion/","framework":"react","chapter":"conclusion","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"配布","title":"組織を横断してUIを配布する","description":"デザインシステムをパッケージングし他のアプリへインポートする方法を学ぶ"},"fields":{"slug":"/design-systems-for-developers/react/ja/distribute/","framework":"react","chapter":"distribute","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ドキュメント","title":"ステークホルダーに向けたドキュメント","description":"ドキュメンテーションでデザインシステムの採用を推進する"},"fields":{"slug":"/design-systems-for-developers/react/ja/document/","framework":"react","chapter":"document","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"イントロダクション","title":"デザインシステムのイントロダクション","description":"デザインシステムのために最新のリリース可能なツールのガイド"},"fields":{"slug":"/design-systems-for-developers/react/ja/introduction/","framework":"react","chapter":"introduction","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"レビュー","title":"チームでレビューする","description":"継続的インテグレーションとビジュアルレビューで協働する"},"fields":{"slug":"/design-systems-for-developers/react/ja/review/","framework":"react","chapter":"review","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"テスト","title":"品質を保つためのテスト","description":"デザインシステムの見た目、機能性、アクセシビリティをテストする方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/test/","framework":"react","chapter":"test","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ワークフロー","title":"デザインシステムのためのワークフロー","description":"フロントエンド開発者のためのデザインシステムワークフローの概要"},"fields":{"slug":"/design-systems-for-developers/react/ja/workflow/","framework":"react","chapter":"workflow","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"설계","title":"시스템 설계","description":"컴포넌트 라이브러리에서 디자인 시스템을 추출하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/architecture/","framework":"react","chapter":"architecture","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"빌드","title":"UI 컴포넌트 구축하기","description":"스토리북에서 디자인 시스템 컴포넌트를 구축하고 구조화하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/build/","framework":"react","chapter":"build","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"마무리","title":"마무리","description":"잘 갖춰놓은 디자인 시스템으로 시간 절약과 생산성 향상"},"fields":{"slug":"/design-systems-for-developers/react/ko/conclusion/","framework":"react","chapter":"conclusion","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"배포","title":"UI 배포","description":"디자인 시스템을 다른 앱에 패키징하고 import하는 방법을 배웁니다."},"fields":{"slug":"/design-systems-for-developers/react/ko/distribute/","framework":"react","chapter":"distribute","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"문서","title":"이해관계자를 위한 문서","description":"문서화를 통하여 디자인 시스템 도입을 촉진하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/document/","framework":"react","chapter":"document","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"소개","title":"디자인 시스템 소개","description":"디자인 시스템을 위한 최신 개발 방법 도구 가이드"},"fields":{"slug":"/design-systems-for-developers/react/ko/introduction/","framework":"react","chapter":"introduction","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"리뷰","title":"팀과 함께 리뷰하기","description":"지속적 통합(CI)과 비주얼 리뷰를 통한 협업"},"fields":{"slug":"/design-systems-for-developers/react/ko/review/","framework":"react","chapter":"review","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"테스트","title":"품질 유지를 위한 테스트","description":"디자인 시스템 외관, 기능성 및 접근성을 테스트하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/test/","framework":"react","chapter":"test","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"작업 흐름(workflow)","title":"디자인 시스템을 위한 작업 흐름(workflow)","description":"프론트엔드 개발자를 위한 디자인 시스템 작업 흐름(workflow)의 개요"},"fields":{"slug":"/design-systems-for-developers/react/ko/workflow/","framework":"react","chapter":"workflow","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Construção","title":"Construção de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Conclusão","title":"Conclusão","description":"Sistemas de design prósperos economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Distribuição","title":"Distribuir o IU numa organização","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplicações"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a adoção de sistemas de design através de documentação"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Introdução","title":"Introdução aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produção"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Revisão","title":"Revisão com equipas","description":"Colaboração através de integração contínua e revisão visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a aparência,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma visão geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"架构","title":"架构系统","description":"如何从现有的组件库中提取出设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","chapter":"architecture","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"创建","title":"创建 UI 组件","description":"使用 Storybook 来创建和分类您设计系统中的组件"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/build/","framework":"react","chapter":"build","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"总结","title":"总结","description":"持续发展的设计系统帮您节省时间并提高效率"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/conclusion/","framework":"react","chapter":"conclusion","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"发布","title":"在整个组织中发布您的 UI 组件","description":"学习如何打包并在别的应用程序中引入您的设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/distribute/","framework":"react","chapter":"distribute","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"文档","title":"写给干系人的文档","description":"通过文档推动设计系统的使用"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/document/","framework":"react","chapter":"document","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"简介","title":"设计系统简介","description":"最新发布的设计系统工具的指南"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/introduction/","framework":"react","chapter":"introduction","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"审查","title":"与团队一起审查","description":"视觉审查与持续集成并进"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/review/","framework":"react","chapter":"review","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"测试","title":"通过测试来保证质量","description":"如何测试设计系统的界面、功能和无障碍访问"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/test/","framework":"react","chapter":"test","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"工作流程","title":"设计系统的工作流程","description":"概述前端开发创建设计系统的工作流程"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","chapter":"workflow","language":"zh-CN"}}}]}},"pageContext":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","language":"zh-CN","chapter":"workflow","pageType":"chapter"}},"staticQueryHashes":["238248339"]}
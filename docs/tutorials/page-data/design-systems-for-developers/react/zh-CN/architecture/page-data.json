{"componentChunkName":"component---src-components-screens-chapter-screen-index-js","path":"/design-systems-for-developers/react/zh-CN/architecture/","result":{"data":{"currentPage":{"html":"<p>在第二章，我们将从现有的组件库中提取出设计系统。在此过程中，我们需要识别出哪些组件属于设计系统，并列举出开发人员在构建设计系统的起步阶段面临的一些问题。</p>\n<p>在大型公司中，该实践是由设计师、工程师和产品团队一起完成的。 Chromatic（Storybook 的母公司）和 Storybook 共享了一个强大的前端基础架构团队，该团队为 3+个产品及将近 800 个开源贡献者提供服务。接下来我们将概述该实践的具体流程。</p>\n<h2>面临的挑战</h2>\n<p>如果您是团队中的一名开发人员，您可能已经发现团队的体量越大开发效率越低。沟通缺失随着团队的体量增加而越发明显。现有的 UI 设计模式没有相应的文档或者已经很难找到。当这种情况发生时，开发人员可能需要开发新的轮子而不是开发新的功能，随着时间流逝，项目中的“一次性”代码越来越多。</p>\n<p>即使在一支尽职尽责、经验丰富的团队，UI 组件依然被无止尽地重建或是滥用。这使得我们陷入困境。从功能和表现上来看， UI 组件的设计模式应当保持一致。而项目中每个组件就像是一片独特的雪花，这使得新加入的开发人员无法辨别出哪一个才是自己需要的，这样也会加大他们的交付难度。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-inconsistent-buttons.jpg\" alt=\"UIs diverge\"></p>\n<h2>创建一个设计系统</h2>\n<p>设计系统将常见的 UI 组件合并到一个持续维护的组件库中，该组件库通过程序包管理的方式供外部使用。因此，开发人员只需要从该组件库中导入标准化的 UI 组件，而不用将相同的 UI 代码粘贴到多个项目中去。</p>\n<p>大多数的设计系统都不是凭空构建起来的，而是由已经在多个项目上并且经过验证的组件组成的。我们的项目也不例外。为了节省时间并尽快的交付给干系人，我们将从现有的组件库中挑选组件来构建设计系统。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-contents.jpg\" alt=\"What&#x27;s in a design system\"></p>\n<h2>我们把设计系统放在哪?</h2>\n<p>您可以把设计系统想像成另外一个组件库，但它并不是服务于一个程序而是服务于整个组织。设计系统应该更加关注在基础组件上（UI primitives），而项目专用的组件库则可以包含任何与该项目 UI 相关的组件（复合组件或页面中任何 UI 元素）。</p>\n<p>因此，我们的设计系统必须独立于任何项目并不依赖任何项目。当系统中发生任何变更的时候，我们会通过包管理工具发布一个新的版本，别的项目可以通过升级软件包来获取新的更新。项目可以使用设计系统的组件并在需要时对组件进行定制。这些限制为我们提供了组织前端项目的蓝图。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-consumers.jpg\" alt=\"Who uses a design system\"></p>\n<h2>使用 create-react-app 和 GitHub 创建仓库</h2>\n<p>根据 <a href=\"https://stateofjs.com/\">State of JS</a> 的调查，React 是目前最受欢迎的视图层（view layer）。大量的 Storybook 都是使用 React 的，因此我们在本教程中将使用与 React 一起流行的 <a href=\"https://github.com/facebook/create-react-app\">create-react-app</a> 来创建基于 React 的设计系统。</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`npx create-react-app learnstorybook-design-system`, `26755638571342844000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"26755638571342844000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">npx create-react-app learnstorybook-design-system\n</code></pre>\n<div class=\"aside\">根据您的团队需求，您也可以选择使用原生 HTML/CSS 、其他视图层（Vue、Angular）、由 Svelte 编译的组件或 web components 来构建您的设计系统</div>\n<p>当我们使用 create-react-app 创建了我们的仓库后，我们可以把它发布到 GitHub 上（用 GitHub 去托管我们的设计系统）。请在 GitHub.com 上登陆您的账号并创建一个新的仓库：</p>\n<p><img src=\"/tutorials/design-systems-for-developers/create-github-repository.png\" alt=\"Create a GitHub repository\"></p>\n<p>然后按照 GitHub 的说明将远程服务器添加到您的 git 仓库中，并提交（到目前为止大部分为空）仓库：</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`cd learnstorybook-design-system\ngit remote add origin https://github.com/chromaui/learnstorybook-design-system.git\ngit push -u origin master`, `93453282972147630000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"93453282972147630000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">cd learnstorybook-design-system\ngit remote add origin https://github.com/chromaui/learnstorybook-design-system.git\ngit push -u origin master\n</code></pre>\n<p>请记得把 <code>chromaui</code> 替换成您的 GitHub 账号名。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/created-github-repository.png\" alt=\"Initial commit to GitHub repository\"></p>\n<h2>设计系统应包含什么、不包含什么</h2>\n<p>设计系统应该只包含纯 UI 组件和<a href=\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\">可呈现的组件</a>，这些组件关乎到如何去显示 UI。 它们仅对输入的数据作出响应，不应该包含特定于应用程序的业务逻辑，也不应该和数据的加载方式有关。这些要求对于构建一个可重复使用的组件来说至关重要。</p>\n<p>设计系统中的组件不应该是每个组件库的超集，否则就会很难追踪。</p>\n<p>含有业务逻辑的程序特定组件不应该包含在设计系统中，因为这些受业务逻辑约束的组件将会成为其他项目使用该组件的障碍。</p>\n<p>避免将当前未被复用过的 UI 组件加入到设计系统，即使您希望以后它能成为您设计系统的一部分，从敏捷团队的角度出发，您应该尽量避免去维护过多的代码。</p>\n<h2>创建一个清单</h2>\n<p>您首要的任务是创建一个清单去收集最常用的组件。这通常会涉及到对各个项目（网页）中的 UI 页面进行手动分类，然后识别出常见的 UI 模式。采用 <a href=\"http://bradfrost.com/blog/post/interface-inventory/\">Brad Frost</a> 和 <a href=\"https://medium.com/eightshapes-llc/the-component-cut-up-workshop-1378ae110517\">Nathan Curtis</a> 提供的方法可以帮助您便捷地盘点您的组件，因此在本指南中我们将不再赘述。</p>\n<p>对开发人员的启发:</p>\n<ul>\n<li>如果一个 UI 模式被使用至少 3 次以上，您可以把它放到可复用组件库里</li>\n<li>如果一个 UI 组件至少在 3 个以上的项目/团队中使用，您可以把它放入到设计系统中</li>\n</ul>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-grid.png\" alt=\"Contents of a design system\"></p>\n<p>按照该方法，我们最终得到了如下的基础组件： Avatar、 Badge、 Button、 Checkbox、 Input、 Radio、 Select、 Textarea、 Highlight (代码高亮)、 Icon、 Link 和 Tooltip 等。我们将这些模块以不同的方式去配置，并保证它可以在我们的客户端应用程序中组合出无数个特有的功能和布局。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-consolidate-into-one-button.jpg\" alt=\"Variants in one component\"></p>\n<p>将我们方才下载的组件添加到您的组件库中并且删除 Create React App 默认提供的应用程序文件。</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`rm -rf src\n\nsvn export https://github.com/chromaui/learnstorybook-design-system/tags/download-1/src`, `34190022795070263000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"34190022795070263000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">rm -rf src\n\nsvn export https://github.com/chromaui/learnstorybook-design-system/tags/download-1/src\n</code></pre>\n<div class=\"aside\">\n<p>我们使用 <code>svn</code> (Subversion) 来从 GitHub 上下载该目录文件. 如果您没有安装 svn 或着您想手动下载该目录，您可以通过点击 <a href=\"https://github.com/chromaui/learnstorybook-design-system/tree/download-1/src\">这里</a>来下载。</p>\n<p>\n为了方便代码示例，我们只选择了一部分组件来简化抽取组件库的过程。有些团队在他们的设计系统中也会加入一些自定义的第三方组件（比如：表格、表单）。</p>\n</div>\n<p>接下来我们还需要更新组件所依赖的依赖项。</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`yarn add prop-types styled-components polished`, `3079137176044288500`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"3079137176044288500\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">yarn add prop-types styled-components polished\n</code></pre>\n<div class=\"aside\">CSS-in-JS: 我们使用 <a href=\"https://www.styled-components.com\">styled-components</a> 来限制组件的样式作用域。 当然您还可以通过例如：手动定位 css 或 css 模块化的方式去设置您的组件样式</div>\n<p>除了 UI 组件外，设计系统应该还包括：文字版式、颜色和间距等样式常量。在设计系统中这种命名的全局变量被称为“设计变量（design tokens）”。我们不会在本指南中深入探讨设计变量背后的理论，如果您感兴趣可以在网上找到更多的文章（推荐<a href=\"https://medium.com/eightshapes-llc/tokens-in-design-systems-25dd82d58421\">好文</a>）。</p>\n<p>下载我们的设计变量并添加到您的组件库中</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`svn export https://github.com/chromaui/learnstorybook-design-system/tags/download-2/src/shared src/shared`, `25513673630434087000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"25513673630434087000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">svn export https://github.com/chromaui/learnstorybook-design-system/tags/download-2/src/shared src/shared\n</code></pre>\n<div class=\"aside\">\n<p>您也可以通过点击<a href=\"https://github.com/chromaui/learnstorybook-design-system/tree/download-2/src/shared\">这里</a>来直接下载。</p>\n</div>\n<h2>让我们开始开发吧！</h2>\n<p>我们已经定义了如何构建内容以及如何把它们组合到一起，是时候开始开发工作了！在接下来的第三章中，我们将介绍设计系统的基本工具。我们将使用 Storybook 来分类和查看原始目录和 UI 组件库。</p>","frontmatter":{"title":"架构系统","description":"如何从现有的组件库中提取出设计系统","commit":"f856c77"},"fields":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/zh-CN/architecture/","chapter":"architecture","framework":"react","language":"zh-CN","permalink":"https://storybook.js.org/tutorials/design-systems-for-developers/react/zh-CN/architecture/","tutorialUpToDate":false}},"currentGuide":{"frontmatter":{"codeGithubUrl":"https://github.com/chromaui/learnstorybook-design-system","toc":["introduction","architecture","build","review","test","document","distribute","workflow","conclusion"],"title":"Design Systems for Developers","twitterShareText":"I’m learning about building design systems! They're great for scaling frontend code on large teams."}},"site":{"siteMetadata":{"title":"Storybook Tutorials","githubUrl":"https://github.com/chromaui/learnstorybook.com","contributeUrl":"https://github.com/chromaui/learnstorybook.com/#contribute","permalink":"https://storybook.js.org/tutorials","siteUrl":"https://storybook.js.org"}},"tocPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"架构","title":"架构系统","description":"如何从现有的组件库中提取出设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","chapter":"architecture"}}},{"node":{"frontmatter":{"tocTitle":"创建","title":"创建 UI 组件","description":"使用 Storybook 来创建和分类您设计系统中的组件"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/build/","framework":"react","chapter":"build"}}},{"node":{"frontmatter":{"tocTitle":"总结","title":"总结","description":"持续发展的设计系统帮您节省时间并提高效率"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/conclusion/","framework":"react","chapter":"conclusion"}}},{"node":{"frontmatter":{"tocTitle":"发布","title":"在整个组织中发布您的 UI 组件","description":"学习如何打包并在别的应用程序中引入您的设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/distribute/","framework":"react","chapter":"distribute"}}},{"node":{"frontmatter":{"tocTitle":"文档","title":"写给干系人的文档","description":"通过文档推动设计系统的使用"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/document/","framework":"react","chapter":"document"}}},{"node":{"frontmatter":{"tocTitle":"简介","title":"设计系统简介","description":"最新发布的设计系统工具的指南"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/introduction/","framework":"react","chapter":"introduction"}}},{"node":{"frontmatter":{"tocTitle":"审查","title":"与团队一起审查","description":"视觉审查与持续集成并进"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/review/","framework":"react","chapter":"review"}}},{"node":{"frontmatter":{"tocTitle":"测试","title":"通过测试来保证质量","description":"如何测试设计系统的界面、功能和无障碍访问"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/test/","framework":"react","chapter":"test"}}},{"node":{"frontmatter":{"tocTitle":"工作流程","title":"设计系统的工作流程","description":"概述前端开发创建设计系统的工作流程"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","chapter":"workflow"}}}]},"translationPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Architecture","title":"Architecting systems","description":"How to extract a design system from component libraries"},"fields":{"slug":"/design-systems-for-developers/react/en/architecture/","framework":"react","chapter":"architecture","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Build","title":"Build UI components","description":"Set up Storybook to build and catalog design system components"},"fields":{"slug":"/design-systems-for-developers/react/en/build/","framework":"react","chapter":"build","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Thriving design systems save time and increase productivity"},"fields":{"slug":"/design-systems-for-developers/react/en/conclusion/","framework":"react","chapter":"conclusion","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Distribute","title":"Distribute UI across an organization","description":"Learn to package and import your design system into other apps"},"fields":{"slug":"/design-systems-for-developers/react/en/distribute/","framework":"react","chapter":"distribute","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Document","title":"Document for stakeholders","description":"Drive design system adoption with documentation"},"fields":{"slug":"/design-systems-for-developers/react/en/document/","framework":"react","chapter":"document","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to design systems","description":"A guide to the latest production-ready tools for design systems"},"fields":{"slug":"/design-systems-for-developers/react/en/introduction/","framework":"react","chapter":"introduction","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Review","title":"Review with teams","description":"Collaborate with continuous integration and visual review"},"fields":{"slug":"/design-systems-for-developers/react/en/review/","framework":"react","chapter":"review","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Test","title":"Test to maintain quality","description":"How to test design system appearance, functionality, and accessibility"},"fields":{"slug":"/design-systems-for-developers/react/en/test/","framework":"react","chapter":"test","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Workflow","title":"Workflow for design systems","description":"An overview of the design system workflow for frontend developers"},"fields":{"slug":"/design-systems-for-developers/react/en/workflow/","framework":"react","chapter":"workflow","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"設計","title":"システム設計","description":"コンポーネントライブラリーからデザインシステムを抽出する方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/architecture/","framework":"react","chapter":"architecture","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"構築","title":"UIコンポーネントを構築する","description":"Storybook をセットアップしデザインシステムコンポーネントを構築してカタログ化する"},"fields":{"slug":"/design-systems-for-developers/react/ja/build/","framework":"react","chapter":"build","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"結論","title":"結論","description":"デザインシステムの成長が時間を節約し生産性を向上させる"},"fields":{"slug":"/design-systems-for-developers/react/ja/conclusion/","framework":"react","chapter":"conclusion","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"配布","title":"組織を横断してUIを配布する","description":"デザインシステムをパッケージングし他のアプリへインポートする方法を学ぶ"},"fields":{"slug":"/design-systems-for-developers/react/ja/distribute/","framework":"react","chapter":"distribute","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ドキュメント","title":"ステークホルダーに向けたドキュメント","description":"ドキュメンテーションでデザインシステムの採用を推進する"},"fields":{"slug":"/design-systems-for-developers/react/ja/document/","framework":"react","chapter":"document","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"イントロダクション","title":"デザインシステムのイントロダクション","description":"デザインシステムのために最新のリリース可能なツールのガイド"},"fields":{"slug":"/design-systems-for-developers/react/ja/introduction/","framework":"react","chapter":"introduction","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"レビュー","title":"チームでレビューする","description":"継続的インテグレーションとビジュアルレビューで協働する"},"fields":{"slug":"/design-systems-for-developers/react/ja/review/","framework":"react","chapter":"review","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"テスト","title":"品質を保つためのテスト","description":"デザインシステムの見た目、機能性、アクセシビリティをテストする方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/test/","framework":"react","chapter":"test","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ワークフロー","title":"デザインシステムのためのワークフロー","description":"フロントエンド開発者のためのデザインシステムワークフローの概要"},"fields":{"slug":"/design-systems-for-developers/react/ja/workflow/","framework":"react","chapter":"workflow","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"설계","title":"시스템 설계","description":"컴포넌트 라이브러리에서 디자인 시스템을 추출하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/architecture/","framework":"react","chapter":"architecture","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"빌드","title":"UI 컴포넌트 구축하기","description":"스토리북에서 디자인 시스템 컴포넌트를 구축하고 구조화하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/build/","framework":"react","chapter":"build","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"마무리","title":"마무리","description":"잘 갖춰놓은 디자인 시스템으로 시간 절약과 생산성 향상"},"fields":{"slug":"/design-systems-for-developers/react/ko/conclusion/","framework":"react","chapter":"conclusion","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"배포","title":"UI 배포","description":"디자인 시스템을 다른 앱에 패키징하고 import하는 방법을 배웁니다."},"fields":{"slug":"/design-systems-for-developers/react/ko/distribute/","framework":"react","chapter":"distribute","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"문서","title":"이해관계자를 위한 문서","description":"문서화를 통하여 디자인 시스템 도입을 촉진하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/document/","framework":"react","chapter":"document","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"소개","title":"디자인 시스템 소개","description":"디자인 시스템을 위한 최신 개발 방법 도구 가이드"},"fields":{"slug":"/design-systems-for-developers/react/ko/introduction/","framework":"react","chapter":"introduction","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"리뷰","title":"팀과 함께 리뷰하기","description":"지속적 통합(CI)과 비주얼 리뷰를 통한 협업"},"fields":{"slug":"/design-systems-for-developers/react/ko/review/","framework":"react","chapter":"review","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"테스트","title":"품질 유지를 위한 테스트","description":"디자인 시스템 외관, 기능성 및 접근성을 테스트하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/test/","framework":"react","chapter":"test","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"작업 흐름(workflow)","title":"디자인 시스템을 위한 작업 흐름(workflow)","description":"프론트엔드 개발자를 위한 디자인 시스템 작업 흐름(workflow)의 개요"},"fields":{"slug":"/design-systems-for-developers/react/ko/workflow/","framework":"react","chapter":"workflow","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Construção","title":"Construção de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Conclusão","title":"Conclusão","description":"Sistemas de design prósperos economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Distribuição","title":"Distribuir o IU numa organização","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplicações"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a adoção de sistemas de design através de documentação"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Introdução","title":"Introdução aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produção"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Revisão","title":"Revisão com equipas","description":"Colaboração através de integração contínua e revisão visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a aparência,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma visão geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"架构","title":"架构系统","description":"如何从现有的组件库中提取出设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","chapter":"architecture","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"创建","title":"创建 UI 组件","description":"使用 Storybook 来创建和分类您设计系统中的组件"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/build/","framework":"react","chapter":"build","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"总结","title":"总结","description":"持续发展的设计系统帮您节省时间并提高效率"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/conclusion/","framework":"react","chapter":"conclusion","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"发布","title":"在整个组织中发布您的 UI 组件","description":"学习如何打包并在别的应用程序中引入您的设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/distribute/","framework":"react","chapter":"distribute","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"文档","title":"写给干系人的文档","description":"通过文档推动设计系统的使用"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/document/","framework":"react","chapter":"document","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"简介","title":"设计系统简介","description":"最新发布的设计系统工具的指南"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/introduction/","framework":"react","chapter":"introduction","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"审查","title":"与团队一起审查","description":"视觉审查与持续集成并进"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/review/","framework":"react","chapter":"review","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"测试","title":"通过测试来保证质量","description":"如何测试设计系统的界面、功能和无障碍访问"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/test/","framework":"react","chapter":"test","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"工作流程","title":"设计系统的工作流程","description":"概述前端开发创建设计系统的工作流程"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","chapter":"workflow","language":"zh-CN"}}}]}},"pageContext":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","language":"zh-CN","chapter":"architecture","pageType":"chapter"}},"staticQueryHashes":["238248339"]}
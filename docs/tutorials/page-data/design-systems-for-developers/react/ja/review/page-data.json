{"componentChunkName":"component---src-components-screens-chapter-screen-index-js","path":"/design-systems-for-developers/react/ja/review/","result":{"data":{"currentPage":{"html":"<p>第 4 章では、矛盾を減らしてゆくなかでデザインシステムの改善をするための専門的なワークフローを学びます。本章では UI フィードバックの収集とチームで共通認識に到達するためのテクニックを取り扱います。この生産プロセスは Auth0、Shopify、Discovery Network の皆さんに使われています。</p>\n<h2>信頼できる唯一の情報源か単一の障害点か</h2>\n<p>以前、私はデザインシステムがフロントエンドチームにとって<a href=\"https://www.chromatic.com/blog/why-design-systems-are-a-single-point-of-failure\">単一の障害点</a>だと書きました。本質的に、デザインシステムは依存すべき対象です。デザインシステムのコンポーネントを変えたら、その変更が依存しているアプリへ伝播します。変更の配布の仕組みは公平です—改善とバグの両方を送り出しているのです。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-dependencies.png\" alt=\"Design system dependencies\"></p>\n<p>バグはデザインシステムにとって目に見えるリスクのため、それを阻止するために手を尽くします。ささいな調整は雪だるま式に膨れあがり、数えきれない手戻りとなるのです。継続するメンテナンス戦略なくしては、デザインシステムは枯れ果ててしまいます。</p>\n<blockquote>\n<p>“でも私のマシンでは動いてるけど？！” – みんな</p>\n</blockquote>\n<h2>チームと UI コンポーネントをビジュアルレビューする</h2>\n<p>ビジュアルレビューはユーザーインターフェイスの振る舞いと審美性を確かめるプロセスです。UI を一人で開発しているときも、チーム内での品質保証をしているときも発生します。</p>\n<p>多くの開発者はコードの質を高めるために他の開発者からフィードバックを収集するプロセスであるコードレビューに慣れています。UI コンポーネントはコードを視覚的に表現するので、ビジュアルレビューは UI/UX フィードバックを集めるために必要です。</p>\n<h3>共通の参照先を立ち上げる</h3>\n<p>node_modules を削除する。パッケージを再インストールする。ローカルストレージをクリアする。クッキーを削除する。こうした行動に馴染みがあるなら、チームメートに最新のコードを参照させるのがどんなに大変か分かるでしょう。みんなが同じ開発環境を持っていないために、本来のバグとローカル環境により引き起こされる問題とを見分ける破目になるのは最悪です。</p>\n<p>幸いにも、フロントエンド開発者として、私たちは共通のコンパイルターゲットがあります: ブラウザーです。精通したチームは ビジュアルレビューのための共通の参照先として Storybook をオンライン上に配信し、ローカル開発環境 (何にせよテクニカルサポートがやっかいです) につきものの複雑さを回避します。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-visual-review.jpg\" alt=\"Review your work in the cloud\"></p>\n<p>現存の UI コンポーネントが URL 経由でアクセス可能であると、ステークホルダーは自身のブラウザーで快適に UI のルック＆フィールを確認できます。それは開発者たち、デザイナーたち、プロジェクトマネージャーたちがローカル開発環境をいじくり回したり、スクリーンショットをやり取りしたり、古いバージョンの UI を参照したりする必要がないことを意味します。</p>\n<blockquote>\n<p>\"それぞれのプルリクエストで Storybook にデプロイすればビジュアルレビューを容易にしプロダクトオーナーがコンポーネントを考え抜く助けとなります。\" –Norbert de Langen, Storybook のコア開発者</p>\n</blockquote>\n<h2 id=\"publish-storybook\">Storybook を発行する</h2>\n<p>Storybook の開発者により作られた無料の配信サービスである <a href=\"https://www.chromatic.com/\">Chromatic</a> を用いてビジュアルワークフローをデモンストレーションします。Chromatic を使ってもクラウド上に安全でセキュアに Storybook をデプロイできますが、他のホスティングサービスでも<a href=\"https://storybook.js.org/docs/react/workflows/publish-storybook\">静的サイトとして Storybook を構築しデプロイする</a>ことは同じくとても簡単です。</p>\n<h3>Chromatic を入手する</h3>\n<p>まず最初に、<a href=\"https://chromatic.com\">chromatic.com</a> に行きあなたの GitHub アカウントでサインアップします。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-signup.png\" alt=\"Signing up at Chromatic\"></p>\n<p>そこから、デザインシステムのリポジトリを選択します。その裏で、アクセス権限の同期とプルリクエストチェックの設定を行います。</p>\n<video autoPlay muted playsInline loop style=\"width:520px; margin: 0 auto;\">\n  <source\n    src=\"/tutorials/design-systems-for-developers/chromatic-setup-learnstorybook-design-system.mp4\"\n    type=\"video/mp4\"\n  />\n</video>\n<p>npm を経由して <a href=\"https://www.npmjs.com/package/chromatic\">chromatic</a> パッケージをインストールします。</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`yarn add --dev chromatic`, `32671218835939600000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"32671218835939600000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">yarn add --dev chromatic\n</code></pre>\n<p>インストールしたら、次のコマンドを実行して Storybook をビルドしデプロイします (直前の操作で Chromatic から提供された<code>project-token</code>の使用が必要になるでしょう) :</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`npx chromatic --project-token=<project-token>`, `37121600438750370000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"37121600438750370000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">npx chromatic --project-token=&#x3C;project-token>\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-manual-storybook-console-log.png\" alt=\"Chromatic in the command line\"></p>\n<p>提供されるリンクをコピーし新しいブラウザウィンドウにそれを貼り付けて配信された Storybook を閲覧しましょう。ローカル Storybook の開発環境がオンラインでミラーリングされていることが分かるでしょう。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-published-storybook-6-0.png\" alt=\"Storybook built with Chromatic\"></p>\n<p>これであなたがローカルで見ているようにチームが実際にレンダリングされた UI コンポーネントをレビューするのが容易になります。そしてこちらが Chromatic で見ることのできる確認画面です。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-first-build.png\" alt=\"Result of our first Chromatic build\"></p>\n<p>おめでとうございます！Storybook を配信する基盤をセットアップしたので継続的インテグレーションでさらに良くしていきましょう。</p>\n<h3>継続的インテグレーション</h3>\n<p>継続的インテグレーションは現代的な Web アプリをメンテナンスするための事実上のやり方です。コードをプッシュするたびにテスト、分析、デプロイのような振る舞いを自動化できます。繰り返しの手作業から私たちの身を守るためにこのテクニックを取り入れます。</p>\n<p>私たちは GitHub アクションを使います、適度に利用すれば無料です。同様の原則は他の CI サービスにも適用できます。</p>\n<p><code>.github</code>ディレクトリを最上位の階層に加えましょう。それから <code>workflows</code> という別のディレクトリを作成します。</p>\n<p>以下のような chromatic.yml ファイルを作成します。これにより CI プロセスをどう処理させるかを記述します。今は小さく始めて進むにしたがって改善を続けます:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`# Name of our action\nname: 'Chromatic'\n# The event that will trigger the action\non: push\n\n# What the action will do\njobs:\n  test:\n    # The operating system it will run on\n    runs-on: ubuntu-latest\n    # The list of steps that the action will go through\n    steps:\n      - uses: actions/checkout@v1\n      - run: yarn\n        #👇 Adds Chromatic as a step in the workflow\n      - uses: chromaui/action@v1\n        # Options required for Chromatic's GitHub Action\n        with:\n          #👇 Chromatic projectToken, see https://storybook.js.org/tutorials/design-systems-for-developers/react/en/review/ to obtain it\n          projectToken: \\${{ secrets.CHROMATIC_PROJECT_TOKEN }}\n          token: \\${{ secrets.GITHUB_TOKEN }}`, `18772020779763810000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"18772020779763810000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">.github/workflows/chromatic.yml</div>\n<pre><code class=\"language-yaml\"># Name of our action\nname: 'Chromatic'\n# The event that will trigger the action\non: push\n\n# What the action will do\njobs:\n  test:\n    # The operating system it will run on\n    runs-on: ubuntu-latest\n    # The list of steps that the action will go through\n    steps:\n      - uses: actions/checkout@v1\n      - run: yarn\n        #👇 Adds Chromatic as a step in the workflow\n      - uses: chromaui/action@v1\n        # Options required for Chromatic's GitHub Action\n        with:\n          #👇 Chromatic projectToken, see https://storybook.js.org/tutorials/design-systems-for-developers/react/en/review/ to obtain it\n          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}\n          token: ${{ secrets.GITHUB_TOKEN }}\n</code></pre>\n<div class=\"aside\"><p>💡 簡潔さのため <a href=\"https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets\">GitHubシークレット</a> には言及しませんでした。シークレットは Github により提供されるセキュアな環境変数であるため<code>project-token</code>をハードコーディングする必要はありません。</p></div>\n<p>変更を次のコマンドで追加します:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git add .`, `82117661705521230000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"82117661705521230000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git add .\n</code></pre>\n<p>それをコミットします:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git commit -m &quot;Storybook deployment with GitHub action&quot;`, `36991271214383880000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"36991271214383880000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git commit -m \"Storybook deployment with GitHub action\"\n</code></pre>\n<p>最後に、次のコマンドでリモートリポジトリへプッシュします:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git push origin main`, `40857921730431880000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"40857921730431880000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git push origin main\n</code></pre>\n<p>上手くいきました！私たちの基盤を改善しました。</p>\n<h2>チームによるビジュアルレビューを要求する</h2>\n<p>プルリクエストに UI の変更を含むたびに、ユーザーに対して何が提供されるかステークホルダーに共通理解を得るビジュアルレビューに着手することは有益です。そうすることで、望まれない不意の出来事やコストの高い手戻りが無くなります。</p>\n<p>新しいブランチに UI の変更を作成してビジュアルレビューを披露します。</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git checkout -b improve-button`, `6523324856431101000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"6523324856431101000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git checkout -b improve-button\n</code></pre>\n<p>最初に、ボタンコンポーネントを微調整します。「ポップにする」とデザイナー達が気に入るでしょう。</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`// ...\nconst StyledButton = styled.button\\`\n  border: 10px solid red;\n  font-size: 20px;\n\\`;\n// ...`, `12122945819894925000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"12122945819894925000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/Button.js</div>\n<pre><code class=\"language-js\">// ...\nconst StyledButton = styled.button`\n  border: 10px solid red;\n  font-size: 20px;\n`;\n// ...\n</code></pre>\n<p>変更をコミットし GitHub のリポジトリへプッシュします。</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git commit -am &quot;make Button pop&quot;\ngit push -u origin improve-button`, `56966514812359300000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"56966514812359300000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git commit -am \"make Button pop\"\ngit push -u origin improve-button\n</code></pre>\n<p>GitHub.com へ移動して<code>improve-button</code>ブランチのプルリクエストをオープンします。オープンになると、Storybook を発行する CI ジョブが走ります。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-created-pr-actions.png\" alt=\"Created a PR in GitHub\"></p>\n<p>ページ下部のプルリクエストチェックの一覧のうち、<strong>Storybook Publish</strong> をクリックして発行された Storybook の新しい変更点を閲覧します。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-deployed-site-with-changed-button.png\" alt=\"Button component changed in deployed site\"></p>\n<p>変更があった各コンポーネントとストーリーについて、ブラウザのアドレスバーから URL をコピーしてチームメイトが素早く関連するストーリーをレビューする助けとなるようタスク管理の場所 (GitHub、Asana、Jira、等) に貼り付けます。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-created-pr-with-links-actions.png\" alt=\"GitHub PR with links to storybook\"></p>\n<p>チームメイトに課題をアサインし寄せられるフィードバックを確認します。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-visual-review-feedback.gif\" alt=\"Why?!\"></p>\n<div class=\"aside\">💡 Chromatic はまた一部有料プロダクトとして完全なUIレビューのワークフローを提供しています。Storybook のリンクを Github のプルリクエストにコピーするテクニックは小規模で (そして Chromatic でなく、Storybook をホストするあらゆるサービスで) 有効ですが、利用頻度が増えてくると、プロセスを自動化するサービスを検討するのが良いかもしれません。</div>\n<p>ソフトウェア開発において、大抵の欠陥は伝達ミスに起因しており技術ではありません。ビジュアルレビューはチームがデザインシステムをより早く提供するために開発中に継続的にフィードバックを集める助けとなります。</p>\n<p><img src=\"/tutorials/design-systems-for-developers/visual-review-loop.jpg\" alt=\"Visual review process\"></p>\n<blockquote>\n<p>プルリクエスト毎に Storybook を特定の URL にデプロイすることは Shopify のデザインシステムである Polaris でやってきていることで、驚くほど助けになる。 Ben Scott、Shopify エンジニア</p>\n</blockquote>\n<h2>デザインシステムをテストする</h2>\n<p>ビジュアルレビューは計り知れない価値があります。しかしながら、手作業で数百ものコンポーネントのストーリーをレビューするのは時間がかかります。理想的には、意図的な変更 (追加／改善) だけを見て自動的に意図しないリグレッションを捕捉したいのです。</p>\n<p>第 5 章では、ビジュアルレビューの最中のノイズを軽減し時間の経過に耐えうるコンポーネントであることを保証するテスト戦略を紹介します。</p>","frontmatter":{"title":"チームでレビューする","description":"継続的インテグレーションとビジュアルレビューで協働する","commit":"5bbfa8c"},"fields":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/ja/review/","chapter":"review","framework":"react","language":"ja","permalink":"https://storybook.js.org/tutorials/design-systems-for-developers/react/ja/review/","tutorialUpToDate":false}},"currentGuide":{"frontmatter":{"codeGithubUrl":"https://github.com/chromaui/learnstorybook-design-system","toc":["introduction","architecture","build","review","test","document","distribute","workflow","conclusion"],"title":"Design Systems for Developers","twitterShareText":"I’m learning about building design systems! They're great for scaling frontend code on large teams."}},"site":{"siteMetadata":{"title":"Storybook Tutorials","githubUrl":"https://github.com/chromaui/learnstorybook.com","contributeUrl":"https://github.com/chromaui/learnstorybook.com/#contribute","permalink":"https://storybook.js.org/tutorials","siteUrl":"https://storybook.js.org"}},"tocPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"設計","title":"システム設計","description":"コンポーネントライブラリーからデザインシステムを抽出する方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/architecture/","framework":"react","chapter":"architecture"}}},{"node":{"frontmatter":{"tocTitle":"構築","title":"UIコンポーネントを構築する","description":"Storybook をセットアップしデザインシステムコンポーネントを構築してカタログ化する"},"fields":{"slug":"/design-systems-for-developers/react/ja/build/","framework":"react","chapter":"build"}}},{"node":{"frontmatter":{"tocTitle":"結論","title":"結論","description":"デザインシステムの成長が時間を節約し生産性を向上させる"},"fields":{"slug":"/design-systems-for-developers/react/ja/conclusion/","framework":"react","chapter":"conclusion"}}},{"node":{"frontmatter":{"tocTitle":"配布","title":"組織を横断してUIを配布する","description":"デザインシステムをパッケージングし他のアプリへインポートする方法を学ぶ"},"fields":{"slug":"/design-systems-for-developers/react/ja/distribute/","framework":"react","chapter":"distribute"}}},{"node":{"frontmatter":{"tocTitle":"ドキュメント","title":"ステークホルダーに向けたドキュメント","description":"ドキュメンテーションでデザインシステムの採用を推進する"},"fields":{"slug":"/design-systems-for-developers/react/ja/document/","framework":"react","chapter":"document"}}},{"node":{"frontmatter":{"tocTitle":"イントロダクション","title":"デザインシステムのイントロダクション","description":"デザインシステムのために最新のリリース可能なツールのガイド"},"fields":{"slug":"/design-systems-for-developers/react/ja/introduction/","framework":"react","chapter":"introduction"}}},{"node":{"frontmatter":{"tocTitle":"レビュー","title":"チームでレビューする","description":"継続的インテグレーションとビジュアルレビューで協働する"},"fields":{"slug":"/design-systems-for-developers/react/ja/review/","framework":"react","chapter":"review"}}},{"node":{"frontmatter":{"tocTitle":"テスト","title":"品質を保つためのテスト","description":"デザインシステムの見た目、機能性、アクセシビリティをテストする方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/test/","framework":"react","chapter":"test"}}},{"node":{"frontmatter":{"tocTitle":"ワークフロー","title":"デザインシステムのためのワークフロー","description":"フロントエンド開発者のためのデザインシステムワークフローの概要"},"fields":{"slug":"/design-systems-for-developers/react/ja/workflow/","framework":"react","chapter":"workflow"}}}]},"translationPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Architecture","title":"Architecting systems","description":"How to extract a design system from component libraries"},"fields":{"slug":"/design-systems-for-developers/react/en/architecture/","framework":"react","chapter":"architecture","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Build","title":"Build UI components","description":"Set up Storybook to build and catalog design system components"},"fields":{"slug":"/design-systems-for-developers/react/en/build/","framework":"react","chapter":"build","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Thriving design systems save time and increase productivity"},"fields":{"slug":"/design-systems-for-developers/react/en/conclusion/","framework":"react","chapter":"conclusion","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Distribute","title":"Distribute UI across an organization","description":"Learn to package and import your design system into other apps"},"fields":{"slug":"/design-systems-for-developers/react/en/distribute/","framework":"react","chapter":"distribute","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Document","title":"Document for stakeholders","description":"Drive design system adoption with documentation"},"fields":{"slug":"/design-systems-for-developers/react/en/document/","framework":"react","chapter":"document","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to design systems","description":"A guide to the latest production-ready tools for design systems"},"fields":{"slug":"/design-systems-for-developers/react/en/introduction/","framework":"react","chapter":"introduction","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Review","title":"Review with teams","description":"Collaborate with continuous integration and visual review"},"fields":{"slug":"/design-systems-for-developers/react/en/review/","framework":"react","chapter":"review","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Test","title":"Test to maintain quality","description":"How to test design system appearance, functionality, and accessibility"},"fields":{"slug":"/design-systems-for-developers/react/en/test/","framework":"react","chapter":"test","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Workflow","title":"Workflow for design systems","description":"An overview of the design system workflow for frontend developers"},"fields":{"slug":"/design-systems-for-developers/react/en/workflow/","framework":"react","chapter":"workflow","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"設計","title":"システム設計","description":"コンポーネントライブラリーからデザインシステムを抽出する方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/architecture/","framework":"react","chapter":"architecture","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"構築","title":"UIコンポーネントを構築する","description":"Storybook をセットアップしデザインシステムコンポーネントを構築してカタログ化する"},"fields":{"slug":"/design-systems-for-developers/react/ja/build/","framework":"react","chapter":"build","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"結論","title":"結論","description":"デザインシステムの成長が時間を節約し生産性を向上させる"},"fields":{"slug":"/design-systems-for-developers/react/ja/conclusion/","framework":"react","chapter":"conclusion","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"配布","title":"組織を横断してUIを配布する","description":"デザインシステムをパッケージングし他のアプリへインポートする方法を学ぶ"},"fields":{"slug":"/design-systems-for-developers/react/ja/distribute/","framework":"react","chapter":"distribute","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ドキュメント","title":"ステークホルダーに向けたドキュメント","description":"ドキュメンテーションでデザインシステムの採用を推進する"},"fields":{"slug":"/design-systems-for-developers/react/ja/document/","framework":"react","chapter":"document","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"イントロダクション","title":"デザインシステムのイントロダクション","description":"デザインシステムのために最新のリリース可能なツールのガイド"},"fields":{"slug":"/design-systems-for-developers/react/ja/introduction/","framework":"react","chapter":"introduction","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"レビュー","title":"チームでレビューする","description":"継続的インテグレーションとビジュアルレビューで協働する"},"fields":{"slug":"/design-systems-for-developers/react/ja/review/","framework":"react","chapter":"review","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"テスト","title":"品質を保つためのテスト","description":"デザインシステムの見た目、機能性、アクセシビリティをテストする方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/test/","framework":"react","chapter":"test","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ワークフロー","title":"デザインシステムのためのワークフロー","description":"フロントエンド開発者のためのデザインシステムワークフローの概要"},"fields":{"slug":"/design-systems-for-developers/react/ja/workflow/","framework":"react","chapter":"workflow","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"설계","title":"시스템 설계","description":"컴포넌트 라이브러리에서 디자인 시스템을 추출하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/architecture/","framework":"react","chapter":"architecture","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"빌드","title":"UI 컴포넌트 구축하기","description":"스토리북에서 디자인 시스템 컴포넌트를 구축하고 구조화하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/build/","framework":"react","chapter":"build","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"마무리","title":"마무리","description":"잘 갖춰놓은 디자인 시스템으로 시간 절약과 생산성 향상"},"fields":{"slug":"/design-systems-for-developers/react/ko/conclusion/","framework":"react","chapter":"conclusion","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"배포","title":"UI 배포","description":"디자인 시스템을 다른 앱에 패키징하고 import하는 방법을 배웁니다."},"fields":{"slug":"/design-systems-for-developers/react/ko/distribute/","framework":"react","chapter":"distribute","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"문서","title":"이해관계자를 위한 문서","description":"문서화를 통하여 디자인 시스템 도입을 촉진하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/document/","framework":"react","chapter":"document","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"소개","title":"디자인 시스템 소개","description":"디자인 시스템을 위한 최신 개발 방법 도구 가이드"},"fields":{"slug":"/design-systems-for-developers/react/ko/introduction/","framework":"react","chapter":"introduction","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"리뷰","title":"팀과 함께 리뷰하기","description":"지속적 통합(CI)과 비주얼 리뷰를 통한 협업"},"fields":{"slug":"/design-systems-for-developers/react/ko/review/","framework":"react","chapter":"review","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"테스트","title":"품질 유지를 위한 테스트","description":"디자인 시스템 외관, 기능성 및 접근성을 테스트하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/test/","framework":"react","chapter":"test","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"작업 흐름(workflow)","title":"디자인 시스템을 위한 작업 흐름(workflow)","description":"프론트엔드 개발자를 위한 디자인 시스템 작업 흐름(workflow)의 개요"},"fields":{"slug":"/design-systems-for-developers/react/ko/workflow/","framework":"react","chapter":"workflow","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Construção","title":"Construção de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Conclusão","title":"Conclusão","description":"Sistemas de design prósperos economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Distribuição","title":"Distribuir o IU numa organização","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplicações"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a adoção de sistemas de design através de documentação"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Introdução","title":"Introdução aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produção"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Revisão","title":"Revisão com equipas","description":"Colaboração através de integração contínua e revisão visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a aparência,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma visão geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"架构","title":"架构系统","description":"如何从现有的组件库中提取出设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","chapter":"architecture","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"创建","title":"创建 UI 组件","description":"使用 Storybook 来创建和分类您设计系统中的组件"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/build/","framework":"react","chapter":"build","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"总结","title":"总结","description":"持续发展的设计系统帮您节省时间并提高效率"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/conclusion/","framework":"react","chapter":"conclusion","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"发布","title":"在整个组织中发布您的 UI 组件","description":"学习如何打包并在别的应用程序中引入您的设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/distribute/","framework":"react","chapter":"distribute","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"文档","title":"写给干系人的文档","description":"通过文档推动设计系统的使用"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/document/","framework":"react","chapter":"document","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"简介","title":"设计系统简介","description":"最新发布的设计系统工具的指南"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/introduction/","framework":"react","chapter":"introduction","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"审查","title":"与团队一起审查","description":"视觉审查与持续集成并进"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/review/","framework":"react","chapter":"review","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"测试","title":"通过测试来保证质量","description":"如何测试设计系统的界面、功能和无障碍访问"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/test/","framework":"react","chapter":"test","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"工作流程","title":"设计系统的工作流程","description":"概述前端开发创建设计系统的工作流程"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","chapter":"workflow","language":"zh-CN"}}}]}},"pageContext":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/ja/review/","framework":"react","language":"ja","chapter":"review","pageType":"chapter"}},"staticQueryHashes":["238248339"]}
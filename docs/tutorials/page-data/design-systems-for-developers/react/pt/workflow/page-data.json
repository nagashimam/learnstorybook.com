{"componentChunkName":"component---src-components-screens-chapter-screen-index-js","path":"/design-systems-for-developers/react/pt/workflow/","result":{"data":{"currentPage":{"html":"<p>A forma como as ferramentas de trabalho frontend trabalham em conjunto, tem um impacto significativo no valor final que as equipas de design e programação poderão atingir. Quando bem feito, é bastante fácil implementar e reutilizar componentes de IU.</p>\n<p>Este capítulo ilustra o fluxo de trabalho que assenta em 5 passos, através\nda introdução de um novo componente, o AvatarList.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-workflow-horizontal.jpg\" alt=\"Fluxo de trabalho do sistema de design\"></p>\n<h2>Construir</h2>\n<p>O AvatarList é um componente que apresenta uma lista de múltiplos avatars. Tal como outro componente qualquer do sistema de design, o AvatarList começou por ser colado em diversos projetos. Daí ser necessária a inclusão deste no sistema de design. Para esta demonstração, vamos assumir que o componente foi desenvolvido noutro projeto e vamos diretamente para o código finalizado.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/AvatarList.jpg\" alt=\"AvatarList\"></p>\n<p>Primeiro, crie um novo ramo no git, onde este trabalho será acompanhado.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git checkout -b create-avatar-list-component`, `96337850566911520000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"96337850566911520000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git checkout -b create-avatar-list-component\n</code></pre>\n<p>Faça o download do componente <code>AvatarList</code> e a sua estória para o seu computador. Coloque-o na pasta <code>/src</code>:</p>\n<ul>\n<li><a href=\"https://raw.githubusercontent.com/chromaui/learnstorybook-design-system/2347a5e8b27635f39091728d0845ff7a2ded3699/src/AvatarList.js\">Ficheiro do component</a></li>\n<li><a href=\"https://raw.githubusercontent.com/chromaui/learnstorybook-design-system/2347a5e8b27635f39091728d0845ff7a2ded3699/src/AvatarList.stories.js\">Ficheiro de estórias</a></li>\n</ul>\n<p>O Storybook está configurado de forma a reconhecer automaticamente ficheiros que terminam em <code>\\*.stories.js</code> e com isto apresenta-os diretamente no IU,</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-with-avatarlist.png\" alt=\"Storybook com o componente AvatarList\"></p>\n<p>Fantástico! Vamos articular agora cada estado do IU que é suportado pelo AvatarList. De relance podemos verificar que este suporta algumas das propriedades do componente Avatar, tais como <code>small</code> e <code>loading</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`export const smallSize = () => <AvatarList users={users.slice(0, 2)} size=&quot;small&quot; />;\nexport const loading = () => <AvatarList loading />;`, `24492729144313240000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"24492729144313240000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList.stories.js</div>\n<pre><code class=\"language-js\">export const smallSize = () => &#x3C;AvatarList users={users.slice(0, 2)} size=\"small\" />;\nexport const loading = () => &#x3C;AvatarList loading />;\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-with-avatarlist-loading.png\" alt=\"Storybook com mais estórias para o AvatarList\"></p>\n<p>Dado que é uma lista, deverá apresentar inúmeros avatars. Vamos adicionar algumas estórias que demonstram o que acontece quando adicionamos muitos itens à lista e o que acontece quando existem poucos itens na lista.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`export const ellipsized = () => <AvatarList users={users} />;\nexport const bigUserCount = () => <AvatarList users={users} userCount={100} />;\nexport const empty = () => <AvatarList users={[]} />;`, `85231150040093980000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"85231150040093980000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList.stories.js</div>\n<pre><code class=\"language-js\">export const ellipsized = () => &#x3C;AvatarList users={users} />;\nexport const bigUserCount = () => &#x3C;AvatarList users={users} userCount={100} />;\nexport const empty = () => &#x3C;AvatarList users={[]} />;\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-with-all-avatarlist-stories.png\" alt=\"Storybook com todas as estórias do AvatarList\"></p>\n<p>Guarde o seu progresso e faça a submissão da alteração.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git commit -am &quot;Added AvatarList and stories&quot;`, `80074586369895020000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"80074586369895020000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git commit -am \"Added AvatarList and stories\"\n</code></pre>\n<h2>Documentar</h2>\n<p>Graças ao Storybook Docs, obtemos documentação costumizada, requerendo um esforço mínimo. Isto ajuda outros elementos a aprender como usar o AvatarList através da consulta da documentação na tab Docs do Storybook.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs-minimal-avatarlist.png\" alt=\"documentação Storybook com a informação mínima do Avatarlist\"></p>\n<p>Documentação mínima viável! Vamos tornar o AvatarList um pouco mais humano, através da inclusão de contexto adicional em como o utilizar.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`/**\n * A list of Avatars, ellipsized to at most 3. Supports passing only a subset of the total user count.\n */\nexport function AvatarList({ loading, users, userCount, size, ...props }) {}`, `92111682752690770000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"92111682752690770000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList.js</div>\n<pre><code class=\"language-js\">/**\n * A list of Avatars, ellipsized to at most 3. Supports passing only a subset of the total user count.\n */\nexport function AvatarList({ loading, users, userCount, size, ...props }) {}\n</code></pre>\n<p>Adicione uns detalhes extra sobre os adereços (props na forma original) suportados</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`AvatarList.propTypes = {\n  /**\n   * Are we loading avatar data from the network?\n   */\n  loading: PropTypes.bool,\n  /**\n   * A (sub)-list of the users whose avatars we have data for. Note: only 3 will be displayed.\n   */\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      avatarUrl: PropTypes.string,\n    })\n  ),\n  /**\n   * The total number of users, if a subset is passed to \\`users\\`.\n   */\n  userCount: PropTypes.number,\n  /**\n   * AvatarList comes in four sizes. In most cases, you’ll be fine with \\`medium\\`.\n   */\n  size: PropTypes.oneOf(Object.keys(sizes)),\n};`, `52844245754377030000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"52844245754377030000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList.js</div>\n<pre><code class=\"language-js\">AvatarList.propTypes = {\n  /**\n   * Are we loading avatar data from the network?\n   */\n  loading: PropTypes.bool,\n  /**\n   * A (sub)-list of the users whose avatars we have data for. Note: only 3 will be displayed.\n   */\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      avatarUrl: PropTypes.string,\n    })\n  ),\n  /**\n   * The total number of users, if a subset is passed to `users`.\n   */\n  userCount: PropTypes.number,\n  /**\n   * AvatarList comes in four sizes. In most cases, you’ll be fine with `medium`.\n   */\n  size: PropTypes.oneOf(Object.keys(sizes)),\n};\n</code></pre>\n<p>Facílimo! Por agora, este nível de detalhe é mais que suficiente, podemos costumizar mais ainda posteriormente através de MDX.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs-full-avatarlist.png\" alt=\"Documentação Storybook com a informação completa do AvatarList\"></p>\n<p>A documentação não tem que ser enfadonha. Através de ferramentas automatizadas, removeu-se o tédio para seguir diretamente para a escrita.</p>\n<p>Faça a submissão das alterações para o GitHub.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git commit -am “Improved AvatarList docs”`, `86855324491621190000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"86855324491621190000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git commit -am “Improved AvatarList docs”\n</code></pre>\n<h4>Crie um Pull Request</h4>\n<p>Vamos adicionar o nosso ramo que contém o <code>AvatarList</code> e criar um pull request:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git push -u origin \\`create-avatar-list-component\\``, `22307877244404285000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"22307877244404285000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git push -u origin `create-avatar-list-component`\n</code></pre>\n<p>Em seguida no browser navegue para o GitHub e abra um pull request.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-pr-create-avatarlist.png\" alt=\"PR criado para o AvatarList\"></p>\n<h2>Revisão</h2>\n<p>Presentemente, o AvatarList é um candidato para inclusão no sistema de design. Todas as partes interessadas deverão rever o componente de forma a garantir que este cumpre com as expetativas em termos de aparência e funcionalidade.</p>\n<p>O Storybook do sistema de design é automaticamente publicado á medida que cada pull request é feito, de forma a tornar a revisão extremamente simples. Faça um scroll até à lista de verificações do PR para encontrar um link para o Storybook que foi publicado agora.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-pr-checks-deployed.png\" alt=\"verificações do PR para o PR implementado\"></p>\n<p>Encontre o AvatarList no Storybook que está online. Deverá assemelhar-se ao que está no Storybook local.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/netlify-deployed-avatarlist-stories.png\" alt=\"AvatarList no Storybook online\"></p>\n<p>O Storybook online é um ponto universal de referência para a equipa. Partilhe o link do AvatarList com as outras partes interessadas de forma a obter feedback mais depressa. A vossa equipa irá adorar-vos, visto que não têm que lidar com código, ou configurar um ambiente de desenvolvimento.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/visual-review-shipit.png\" alt=\"Parece-me bem, lança-o!\"></p>\n<p>Chegar a um consenso com várias equipas muitas vezes assemelha-se a um exercício de futilidade. Fazem referências a código desatualizado, não possuem um ambiente de desenvolvimento, ou acabam por espalhar o feedback por várias ferramentas. Fazer a revisão do Storybook online, torna isto tão simples tal como partilhar um URL.</p>\n<h2>Testar</h2>\n<p>O nosso conjunto de testes é executado nos bastidores a cada submissão. O AvatarList é um componente simples de apresentação, como tal testes unitários não são necessários. Mas se olharmos para as verificações do PR, o Chromatic, a nossa ferramenta de testes visuais já detetou que existem alterações que precisam de revisão.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-pr-checks-chromatic-changes.png\" alt=\"Alterações Chromatic nas verificações do PR no GitHub\"></p>\n<p>Visto que o AvatarList é novo, ainda não foram definidos testes visuais para ele ainda. Será necessário adicionar linhas de base para cada estória. Aceite as \"novas estórias\" no Chromatic de forma a expandir a cobertura dos testes visuais.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-avatarlist-changes.png\" alt=\"Alterações no Chromatic feitas as estórias do AvatarList\"></p>\n<p>Assim que terminar, o processo de compilação irá ser bem sucedido no Chromatic.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-avatarlist-changes-accepted.png\" alt=\"Alterações aceites para as estórias do AvatarList\"></p>\n<p>O que por sua vez, atualiza as verificações do PR no GitHub.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-pr-checks-chromatic-changes-accepted.png\" alt=\"As alterações do Chromatic aceites nas verificações do PR no GitHub\"></p>\n<p>Os testes foram atualizados com sucesso. No futuro, quaisquer regressão vai ter dificuldade em tentar infiltrar-se no sistema de design.</p>\n<h2>Distribuir</h2>\n<p>Temos um pull request aberto que adiciona o AvatarList ao sistema de design. As estórias estão escritas e os testes tiveram sucesso e existe documentação também. Finalmente estamos prontos para atualizar o pacote que contêm o sistema de design com o Auto e o npm.</p>\n<p>Adicione a etiqueta <code>minor</code> ao PR, isto faz com que o Auto atualize a versão secundária, ou minoritária do pacote assim que for fundido.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-pr-labelled.png\" alt=\"PR GitHub com etiquetas\"></p>\n<p>Agora sim funda o seu PR e no seu browser, navegue para a página do npm associada ao seu pacote e aguarde uns minutos enquanto o pacote é atualizado.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/npm-published-package.png\" alt=\"Pacote publicado no npm\"></p>\n<p>Sucesso! O seu pacote com o sistema de design foi atualizado a partir do conforto do GitHub. Sem ser necessário tocar na linha de comandos, ou mexer com o npm. Atualize a dependência <code>learnstorybook-design-system</code> na aplicação de exemplo para começar a utilizar o AvatarList.</p>\n<h2>A sua jornada começa agora</h2>\n<p>O <em>Sistema de Design para Programadores</em>, na forma original <em>Design Systems for Developers</em>, ilustra todo o fluxo de trabalho que é utilizado por equipas profissionais de frontend de forma a fornecer-lhe um avanço enquanto implementa o seu sistema. À medida que o sistema de design cresce, adicione, reorganize e estenda este conjunto de ferramentas de forma ajustarem-se ás necessidades da sua equipa.</p>\n<p>O capítulo 9 faz a conclusão, com todo o código de exemplo, recursos úteis e as perguntas mais frequentes por parte dos programadores.</p>","frontmatter":{"title":"Fluxo de trabalho associado ao sistema de design","description":"Uma visão geral do fluxo de trabalho associado ao sistema de design para programadores frontend","commit":"9d13d12"},"fields":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/pt/workflow/","chapter":"workflow","framework":"react","language":"pt","permalink":"https://storybook.js.org/tutorials/design-systems-for-developers/react/pt/workflow/","tutorialUpToDate":false}},"currentGuide":{"frontmatter":{"codeGithubUrl":"https://github.com/chromaui/learnstorybook-design-system","toc":["introduction","architecture","build","review","test","document","distribute","workflow","conclusion"],"title":"Design Systems for Developers","twitterShareText":"I’m learning about building design systems! They're great for scaling frontend code on large teams."}},"site":{"siteMetadata":{"title":"Storybook Tutorials","githubUrl":"https://github.com/chromaui/learnstorybook.com","contributeUrl":"https://github.com/chromaui/learnstorybook.com/#contribute","permalink":"https://storybook.js.org/tutorials","siteUrl":"https://storybook.js.org"}},"tocPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture"}}},{"node":{"frontmatter":{"tocTitle":"Construção","title":"Construção de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build"}}},{"node":{"frontmatter":{"tocTitle":"Conclusão","title":"Conclusão","description":"Sistemas de design prósperos economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion"}}},{"node":{"frontmatter":{"tocTitle":"Distribuição","title":"Distribuir o IU numa organização","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplicações"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a adoção de sistemas de design através de documentação"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document"}}},{"node":{"frontmatter":{"tocTitle":"Introdução","title":"Introdução aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produção"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction"}}},{"node":{"frontmatter":{"tocTitle":"Revisão","title":"Revisão com equipas","description":"Colaboração através de integração contínua e revisão visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a aparência,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma visão geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow"}}}]},"translationPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Architecture","title":"Architecting systems","description":"How to extract a design system from component libraries"},"fields":{"slug":"/design-systems-for-developers/react/en/architecture/","framework":"react","chapter":"architecture","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Build","title":"Build UI components","description":"Set up Storybook to build and catalog design system components"},"fields":{"slug":"/design-systems-for-developers/react/en/build/","framework":"react","chapter":"build","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Thriving design systems save time and increase productivity"},"fields":{"slug":"/design-systems-for-developers/react/en/conclusion/","framework":"react","chapter":"conclusion","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Distribute","title":"Distribute UI across an organization","description":"Learn to package and import your design system into other apps"},"fields":{"slug":"/design-systems-for-developers/react/en/distribute/","framework":"react","chapter":"distribute","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Document","title":"Document for stakeholders","description":"Drive design system adoption with documentation"},"fields":{"slug":"/design-systems-for-developers/react/en/document/","framework":"react","chapter":"document","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to design systems","description":"A guide to the latest production-ready tools for design systems"},"fields":{"slug":"/design-systems-for-developers/react/en/introduction/","framework":"react","chapter":"introduction","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Review","title":"Review with teams","description":"Collaborate with continuous integration and visual review"},"fields":{"slug":"/design-systems-for-developers/react/en/review/","framework":"react","chapter":"review","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Test","title":"Test to maintain quality","description":"How to test design system appearance, functionality, and accessibility"},"fields":{"slug":"/design-systems-for-developers/react/en/test/","framework":"react","chapter":"test","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Workflow","title":"Workflow for design systems","description":"An overview of the design system workflow for frontend developers"},"fields":{"slug":"/design-systems-for-developers/react/en/workflow/","framework":"react","chapter":"workflow","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"設計","title":"システム設計","description":"コンポーネントライブラリーからデザインシステムを抽出する方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/architecture/","framework":"react","chapter":"architecture","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"構築","title":"UIコンポーネントを構築する","description":"Storybook をセットアップしデザインシステムコンポーネントを構築してカタログ化する"},"fields":{"slug":"/design-systems-for-developers/react/ja/build/","framework":"react","chapter":"build","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"結論","title":"結論","description":"デザインシステムの成長が時間を節約し生産性を向上させる"},"fields":{"slug":"/design-systems-for-developers/react/ja/conclusion/","framework":"react","chapter":"conclusion","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"配布","title":"組織を横断してUIを配布する","description":"デザインシステムをパッケージングし他のアプリへインポートする方法を学ぶ"},"fields":{"slug":"/design-systems-for-developers/react/ja/distribute/","framework":"react","chapter":"distribute","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ドキュメント","title":"ステークホルダーに向けたドキュメント","description":"ドキュメンテーションでデザインシステムの採用を推進する"},"fields":{"slug":"/design-systems-for-developers/react/ja/document/","framework":"react","chapter":"document","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"イントロダクション","title":"デザインシステムのイントロダクション","description":"デザインシステムのために最新のリリース可能なツールのガイド"},"fields":{"slug":"/design-systems-for-developers/react/ja/introduction/","framework":"react","chapter":"introduction","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"レビュー","title":"チームでレビューする","description":"継続的インテグレーションとビジュアルレビューで協働する"},"fields":{"slug":"/design-systems-for-developers/react/ja/review/","framework":"react","chapter":"review","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"テスト","title":"品質を保つためのテスト","description":"デザインシステムの見た目、機能性、アクセシビリティをテストする方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/test/","framework":"react","chapter":"test","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ワークフロー","title":"デザインシステムのためのワークフロー","description":"フロントエンド開発者のためのデザインシステムワークフローの概要"},"fields":{"slug":"/design-systems-for-developers/react/ja/workflow/","framework":"react","chapter":"workflow","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"설계","title":"시스템 설계","description":"컴포넌트 라이브러리에서 디자인 시스템을 추출하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/architecture/","framework":"react","chapter":"architecture","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"빌드","title":"UI 컴포넌트 구축하기","description":"스토리북에서 디자인 시스템 컴포넌트를 구축하고 구조화하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/build/","framework":"react","chapter":"build","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"마무리","title":"마무리","description":"잘 갖춰놓은 디자인 시스템으로 시간 절약과 생산성 향상"},"fields":{"slug":"/design-systems-for-developers/react/ko/conclusion/","framework":"react","chapter":"conclusion","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"배포","title":"UI 배포","description":"디자인 시스템을 다른 앱에 패키징하고 import하는 방법을 배웁니다."},"fields":{"slug":"/design-systems-for-developers/react/ko/distribute/","framework":"react","chapter":"distribute","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"문서","title":"이해관계자를 위한 문서","description":"문서화를 통하여 디자인 시스템 도입을 촉진하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/document/","framework":"react","chapter":"document","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"소개","title":"디자인 시스템 소개","description":"디자인 시스템을 위한 최신 개발 방법 도구 가이드"},"fields":{"slug":"/design-systems-for-developers/react/ko/introduction/","framework":"react","chapter":"introduction","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"리뷰","title":"팀과 함께 리뷰하기","description":"지속적 통합(CI)과 비주얼 리뷰를 통한 협업"},"fields":{"slug":"/design-systems-for-developers/react/ko/review/","framework":"react","chapter":"review","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"테스트","title":"품질 유지를 위한 테스트","description":"디자인 시스템 외관, 기능성 및 접근성을 테스트하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/test/","framework":"react","chapter":"test","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"작업 흐름(workflow)","title":"디자인 시스템을 위한 작업 흐름(workflow)","description":"프론트엔드 개발자를 위한 디자인 시스템 작업 흐름(workflow)의 개요"},"fields":{"slug":"/design-systems-for-developers/react/ko/workflow/","framework":"react","chapter":"workflow","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Construção","title":"Construção de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Conclusão","title":"Conclusão","description":"Sistemas de design prósperos economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Distribuição","title":"Distribuir o IU numa organização","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplicações"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a adoção de sistemas de design através de documentação"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Introdução","title":"Introdução aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produção"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Revisão","title":"Revisão com equipas","description":"Colaboração através de integração contínua e revisão visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a aparência,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma visão geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"架构","title":"架构系统","description":"如何从现有的组件库中提取出设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","chapter":"architecture","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"创建","title":"创建 UI 组件","description":"使用 Storybook 来创建和分类您设计系统中的组件"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/build/","framework":"react","chapter":"build","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"总结","title":"总结","description":"持续发展的设计系统帮您节省时间并提高效率"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/conclusion/","framework":"react","chapter":"conclusion","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"发布","title":"在整个组织中发布您的 UI 组件","description":"学习如何打包并在别的应用程序中引入您的设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/distribute/","framework":"react","chapter":"distribute","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"文档","title":"写给干系人的文档","description":"通过文档推动设计系统的使用"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/document/","framework":"react","chapter":"document","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"简介","title":"设计系统简介","description":"最新发布的设计系统工具的指南"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/introduction/","framework":"react","chapter":"introduction","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"审查","title":"与团队一起审查","description":"视觉审查与持续集成并进"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/review/","framework":"react","chapter":"review","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"测试","title":"通过测试来保证质量","description":"如何测试设计系统的界面、功能和无障碍访问"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/test/","framework":"react","chapter":"test","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"工作流程","title":"设计系统的工作流程","description":"概述前端开发创建设计系统的工作流程"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","chapter":"workflow","language":"zh-CN"}}}]}},"pageContext":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","language":"pt","chapter":"workflow","pageType":"chapter"}},"staticQueryHashes":["238248339"]}
{"componentChunkName":"component---src-components-screens-chapter-screen-index-js","path":"/design-systems-for-developers/react/pt/document/","result":{"data":{"currentPage":{"html":"<p><a href=\"https://medium.com/@didoo/measuring-the-impact-of-a-design-system-7f925af090f7\">Equipas</a> <a href=\"https://product.hubspot.com/blog/how-to-gain-widespread-adoption-of-your-design-system\">profissionais</a> de\n<a href=\"https://segment.com/blog/driving-adoption-of-a-design-system/\">frontend</a> medem o sucesso de um sistema de design atrav√©s da sua ado√ß√£o. De forma a colher todos os benef√≠cios em termos de tempo de trabalho, os componentes precisam de circular. Caso contr√°rio qual √© o objetivo?</p>\n<p>Neste cap√≠tulo vamos criar um \"manual de utilizador\" para o sistema de design, de forma a ajudar as restantes partes interessadas a reutilizar os componentes nas suas aplica√ß√µes. Ao longo do trajeto, vamos revelar as boas pr√°ticas recomendadas para documenta√ß√£o de IU, usadas por equipas na Shopify, Microsoft, Auth0 e o governo brit√¢nico.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-generate-docs.jpg\" alt=\"Gerar documenta√ß√£o autom√°ticamente com o Storybook\"></p>\n<h2>A documenta√ß√£o √© exaustiva</h2>\n<p>√â √≥bvio; que a documenta√ß√£o √© inestim√°vel para um desenvolvimento colaborativo de IU. Ajuda as equipas a aprender como e quando usar os componentes de IU comuns. Mas porque √© que precisa de tanto trabalho?</p>\n<p>Se j√° alguma vez criou documenta√ß√£o, provavelmente gastou tempo com tarefas que n√£o s√£o relacionadas com documenta√ß√£o, tais como entender a infraestrutura do site, ou discutir com escritores t√©cnicos. E mesmo que conseguiu arranjar tempo para publicar essa documenta√ß√£o, continua a ser doloroso mant√™-la enquanto se continuam a desenvolver funcionalidades.</p>\n<p><strong>A maioria da documenta√ß√£o est√° desatualizada assim que √© criada.</strong> Documenta√ß√£o desatualizada ir√° minar a confian√ßa nos componentes do sistema de design, o que resulta que os programadores optem por criar novos componentes ao inv√©s de reutilizar os que j√° existem.</p>\n<h2>Requisitos</h2>\n<p>A nossa documenta√ß√£o dever√° superar toda e qualquer atrito inerente √° sua cria√ß√£o e manuten√ß√£o, aqui ficam os seus deveres:</p>\n<ul>\n<li><strong>üîÑEstar atualizada</strong> atrav√©s da utiliza√ß√£o do c√≥digo em produ√ß√£o mais recente</li>\n<li><strong>‚úçÔ∏èFacilitar a escrita</strong> recorrendo a ferramentas de escrita conhecidas tais como Markdown</li>\n<li><strong>‚ö°Ô∏èReduzir o tempo de manuten√ß√£o</strong> de forma que as equipas possam focar-se na escrita</li>\n<li><strong>üìêFornecer c√≥digo base</strong> para que os programadores n√£o reescrevam quaisquer padr√µes comuns</li>\n<li><strong>üé®Oferecer costumiza√ß√µes</strong> para qualquer caso particular complexo e componentes</li>\n</ul>\n<p>Como utilizadores do Storybook, j√° temos um avan√ßo, visto que as varia√ß√µes dos componentes est√£o definidas como est√≥rias; uma forma de documenta√ß√£o. Uma est√≥ria ilustra como o componente ir√° funcionar com base em inputs diferentes (adere√ßos (ou props na forma original)). As est√≥rias s√£o f√°ceis de escrever e podem ser atualizadas de forma autom√°tica, visto que usam os componentes em produ√ß√£o. Al√©m disso as est√≥rias podem ser testadas contra poss√≠veis regress√µes recorrendo √°s ferramentas mencionadas no cap√≠tulo anterior!</p>\n<blockquote>\n<p>Quando escreves est√≥rias, recebes de gra√ßa a documenta√ß√£o dos adere√ßos (props na forma original) do componente e tamb√©m casos de utiliza√ß√£o! ‚Äì Justin Bennett, Engenheiro na Artsy</p>\n</blockquote>\n<h2>Escreve est√≥rias, gera documenta√ß√£o</h2>\n<p>Com o extra Docs do Storybook, podemos gerar documenta√ß√£o bastante rica a partir das est√≥rias existentes, de forma a reduzir tempo associado a manuten√ß√£o e obter os padr√µes prontos a usar. Com a consola aberta, navegue at√© √† sua pasta ou diret√≥rio do sistema de design. E instale o extra de documenta√ß√£o:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`yarn add --dev @storybook/addon-docs`, `83327887017514810000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"83327887017514810000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">yarn add --dev @storybook/addon-docs\n</code></pre>\n<p>Mas tamb√©m iremos adicionar um <em>preset</em> para este extra, crie o ficheiro <code>.storybook/presets.js</code> se ainda n√£o existir. Note que a utiliza√ß√£o deste ficheiro de preset, elimina a necessidade do <code>.storybook/webpack.config.js</code> e como tal pode ser eliminado:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`module.exports = ['@storybook/addon-docs/react/preset'];`, `26191209797429860000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"26191209797429860000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">.storybook/presets.js</div>\n<pre><code class=\"language-js\">module.exports = ['@storybook/addon-docs/react/preset'];\n</code></pre>\n<p>Ir√° reparar que existem duas tabs no seu Storybook, a tab \"Canvas\" que corresponde ao seu ambiente de desenvolvimento para os componentes e a \"Docs\" para documenta√ß√£o do componente.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs.png\" alt=\"tab documenta√ß√£o do Storybook\"></p>\n<p>Nos bastidores, o Storybook criou uma nova tab \"Docs\" para cada componente.A tab foi populada com as pe√ßas de documenta√ß√£o mais usadas, tais como pr√©-visualiza√ß√µes interativas, visualizadores de c√≥digo fonte e uma tabela de adere√ßos (props na forma original). Ir√° encontrar funcionalidades semelhantes na documenta√ß√£o do sistema de design do Shopify ou Auth0. Isto tudo em menos de 5 minutos.</p>\n<h2>Extender a documenta√ß√£o</h2>\n<p>At√© agora foram feitos progressos enormes sem ser necess√°rio muito esfor√ßo da nossa parte. No entanto ainda falta √° documenta√ß√£o um toque <em>humano</em>. √â preciso oferecer um pouco mais de contexto (porqu√™, quando e como) para outro programador qualquer.</p>\n<p>Come√ße por adicionar metadados adicionais que explicam o que o componente faz. No ficheiro <code>src/Avatar.stories.js</code>, adicione uma legenda que descreve para que o Avatar √© usado:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`export default {\n  title: 'Design System|Avatar',\n\n  parameters: {\n    component: Avatar,\n    componentSubtitle: 'Displays an image that represents a user or organization',\n  },\n};`, `8659929058646631000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"8659929058646631000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/Avatar.stories.js</div>\n<pre><code class=\"language-js\">export default {\n  title: 'Design System|Avatar',\n\n  parameters: {\n    component: Avatar,\n    componentSubtitle: 'Displays an image that represents a user or organization',\n  },\n};\n</code></pre>\n<p>Em seguida adicione JSdoc ao componente Avatar (no ficheiro <code>src/components/Avatar.js</code>) sob a forma de uma descri√ß√£o que ser√° posteriormente lida:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`/**\n- Use an avatar for attributing actions or content to specific users.\n- The user's name should always be present when using Avatar ‚Äì either printed beside\n- the avatar or in a tooltip.\n**/\n\nexport function Avatar({ loading, username, src, size, ...props }) {}`, `24333768124914856000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"24333768124914856000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/components/Avatar.js</div>\n<pre><code class=\"language-js\">/**\n- Use an avatar for attributing actions or content to specific users.\n- The user's name should always be present when using Avatar ‚Äì either printed beside\n- the avatar or in a tooltip.\n**/\n\nexport function Avatar({ loading, username, src, size, ...props }) {}\n</code></pre>\n<p>Dever√° ver algo do g√©nero:</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docspage.png\" alt=\"Tab documenta√ß√£o do Storybook com detalhes do componente\"></p>\n<p>O Docs do Storybook gerou automaticamente a tabela de adere√ßos (props na forma original) que apresenta quais os tipos e os valores por defeito. O que √© extremamente conveniente, mas n√£o garante que seja \"√° prova de bala\"; diversos adere√ßos (props na forma original) podem ser usados incorretamente. Adicione coment√°rios aos proptypes para que sejam tamb√©m renderizados na tabela de adere√ßos (props na forma original) que √© gerada automaticamente.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`Avatar.propTypes = {\n  /**\n    Use the loading state to indicate that the data Avatar needs is still loading.\n    */\n  loading: PropTypes.bool,\n  /**\n    Avatar falls back to the user's initial when no image is provided.\n    Supply a \\`username\\` and omit \\`src\\` to see what this looks like.\n    */\n  username: PropTypes.string,\n  /**\n    The URL of the Avatar's image.\n    */\n  src: PropTypes.string,\n  /**\n    Avatar comes in four sizes. In most cases, you'll be fine with \\`medium\\`.\n    */\n  size: PropTypes.oneOf(Object.keys(sizes)),\n};`, `73169452194869790000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"73169452194869790000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/components/Avatar.js</div>\n<pre><code class=\"language-js\">Avatar.propTypes = {\n  /**\n    Use the loading state to indicate that the data Avatar needs is still loading.\n    */\n  loading: PropTypes.bool,\n  /**\n    Avatar falls back to the user's initial when no image is provided.\n    Supply a `username` and omit `src` to see what this looks like.\n    */\n  username: PropTypes.string,\n  /**\n    The URL of the Avatar's image.\n    */\n  src: PropTypes.string,\n  /**\n    Avatar comes in four sizes. In most cases, you'll be fine with `medium`.\n    */\n  size: PropTypes.oneOf(Object.keys(sizes)),\n};\n</code></pre>\n<p>Por defeito, cada est√≥ria associada ao Avatar √© renderizada na tab docs j√° mencionada. N√£o podemos assumir que os outros programadores saibam o que representa cada uma delas. No ficheiro <code>src/Avatar.stories.js</code> escreva um texto descritivo para cada uma das est√≥rias:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`export const sizes = () => (\n  <div>\n    <Avatar\n      size=&quot;large&quot;\n      username=&quot;Tom Coleman&quot;\n      src=&quot;https://avatars2.githubusercontent.com/u/132554&quot;\n    />\n    <Avatar\n      size=&quot;medium&quot;\n      username=&quot;Tom Coleman&quot;\n      src=&quot;https://avatars2.githubusercontent.com/u/132554&quot;\n    />\n    <Avatar\n      size=&quot;small&quot;\n      username=&quot;Tom Coleman&quot;\n      src=&quot;https://avatars2.githubusercontent.com/u/132554&quot;\n    />\n    <Avatar\n      size=&quot;tiny&quot;\n      username=&quot;Tom Coleman&quot;\n      src=&quot;https://avatars2.githubusercontent.com/u/132554&quot;\n    />\n  </div>\n);\nsizes.story = {\n  parameters: { docs: { storyDescription: '4 sizes are supported.' } },\n};`, `2302254597652031500`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"2302254597652031500\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/Avatar.stories.js</div>\n<pre><code class=\"language-js\">export const sizes = () => (\n  &#x3C;div>\n    &#x3C;Avatar\n      size=\"large\"\n      username=\"Tom Coleman\"\n      src=\"https://avatars2.githubusercontent.com/u/132554\"\n    />\n    &#x3C;Avatar\n      size=\"medium\"\n      username=\"Tom Coleman\"\n      src=\"https://avatars2.githubusercontent.com/u/132554\"\n    />\n    &#x3C;Avatar\n      size=\"small\"\n      username=\"Tom Coleman\"\n      src=\"https://avatars2.githubusercontent.com/u/132554\"\n    />\n    &#x3C;Avatar\n      size=\"tiny\"\n      username=\"Tom Coleman\"\n      src=\"https://avatars2.githubusercontent.com/u/132554\"\n    />\n  &#x3C;/div>\n);\nsizes.story = {\n  parameters: { docs: { storyDescription: '4 sizes are supported.' } },\n};\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docspage-expanded.png\" alt=\"Tab docs do Storybook com detalhes preenchidos\"></p>\n<h4>Energize a documenta√ß√£o com Markdown/MDX</h4>\n<p>Cada componente √© diferente, assim como os requisitos de documenta√ß√£o. Us√°mos o Storybook Docs de forma a gerar documenta√ß√£o com base nas boas pr√°ticas de forma gratuita. Vamos adicionar alguma informa√ß√£o adicional e tamb√©m identificar algumas nuances no nosso componente.</p>\n<p>O Markdown √© um formato para escrita de texto bastante linear. O MDX permite-nos usar c√≥digo interativo (JSX) dentro do Markdown. O Docs do Storybook usa MDX de forma a oferecer aos programadores controlo absoluto sobre como a documenta√ß√£o √© renderizada.</p>\n<p>Primeiro, vamos controlar a gera√ß√£o de documenta√ß√£o do Avatar a partir do padr√£o existente. Registe o tipo de ficheiros MDX em <code>.storybook/config.js</code> da seguinte forma.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`// automatically import all files ending in *.stories.js|mdx\nconfigure(require.context('../src', true, /\\.stories\\.(js|mdx)\\$/), module);`, `33178829134857126000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"33178829134857126000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">.storybook/config.js</div>\n<pre><code class=\"language-js\">// automatically import all files ending in *.stories.js|mdx\nconfigure(require.context('../src', true, /\\.stories\\.(js|mdx)$/), module);\n</code></pre>\n<p>Crie um novo ficheiro <code>src/Avatar.stories.mdx</code> e adicione alguns detalhes. Em seguida vamos remover o ficheiro <code>Avatar.stories.js</code> e recriar as est√≥rias existentes nesse ficheiro diretamente no ficheiro mdx:</p>\n<!-- prettier-ignore-start -->\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`import { Meta, Story } from '@storybook/addon-docs/blocks';\nimport { withKnobs, select, boolean } from '@storybook/addon-knobs';\n\nimport { Avatar } from './Avatar';\n\n<Meta title=&quot;Design System|Avatar&quot; component={Avatar} />\n\n# Avatar\n\n## Displays an image that represents a user or organization\n\nUse an avatar for attributing actions or content to specific users.\nThe user's name should _always_ be present when using Avatar ‚Äì either printed beside the avatar or in a tooltip.\n\n<Story name=&quot;standard&quot;>\n  <Avatar\n    size=&quot;large&quot;\n    username=&quot;Tom Coleman&quot;\n    src=&quot;https://avatars2.githubusercontent.com/u/132554&quot;\n  />\n</Story>\n\n### Sizes\n\n4 sizes are supported.\n\n<Story name=&quot;sizes&quot;>\n  <div>\n    <Avatar\n      size=&quot;large&quot;\n      username=&quot;Tom Coleman&quot;\n      src=&quot;https://avatars2.githubusercontent.com/u/132554&quot;\n    />\n    <Avatar\n      size=&quot;medium&quot;\n      username=&quot;Tom Coleman&quot;\n      src=&quot;https://avatars2.githubusercontent.com/u/132554&quot;\n    />\n    <Avatar\n      size=&quot;small&quot;\n      username=&quot;Tom Coleman&quot;\n      src=&quot;https://avatars2.githubusercontent.com/u/132554&quot;\n    />\n    <Avatar\n      size=&quot;tiny&quot;\n      username=&quot;Tom Coleman&quot;\n      src=&quot;https://avatars2.githubusercontent.com/u/132554&quot;\n    />\n  </div>\n</Story>\n\n### Default Values\n\nWhen no image is supplied to the \\`src\\` prop, Avatar displays initials.\nAvatar should be used sparingly in situations without access to images.\n\n<Story name=&quot;initials&quot;>\n  <div>\n    <Avatar username=&quot;Tom Coleman&quot; />\n    <Avatar username=&quot;Dominic Nguyen&quot; />\n    <Avatar username=&quot;Kyle Suss&quot; />\n    <Avatar username=&quot;Michael Shilman&quot; />\n  </div>\n</Story>\n\n### Loading\n\nThe loading state is used when the image or username is, well, loading.\n\n<Story name=&quot;loading&quot;>\n  <div>\n    <Avatar size=&quot;large&quot; loading />\n    <Avatar size=&quot;medium&quot; loading />\n    <Avatar size=&quot;small&quot; loading />\n    <Avatar size=&quot;tiny&quot; loading />\n  </div>\n</Story>\n\n### Playground\n\nExperiment with this story with Knobs addon in Canvas mode.\n\n<Story name=&quot;knobs&quot; parameters={{ decorators: [withKnobs] }}>\n  <Avatar\n    loading={boolean('Loading')}\n    size={select('Size', ['tiny', 'small', 'medium', 'large'])}\n    username=&quot;Dominic Nguyen&quot;\n    src=&quot;https://avatars2.githubusercontent.com/u/263385&quot;\n  />\n</Story>`, `45988680640551550000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"45988680640551550000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/Avatar.stories.mdx</div>\n<pre><code class=\"language-js\">import { Meta, Story } from '@storybook/addon-docs/blocks';\nimport { withKnobs, select, boolean } from '@storybook/addon-knobs';\n\nimport { Avatar } from './Avatar';\n\n&#x3C;Meta title=\"Design System|Avatar\" component={Avatar} />\n\n# Avatar\n\n## Displays an image that represents a user or organization\n\nUse an avatar for attributing actions or content to specific users.\nThe user's name should _always_ be present when using Avatar ‚Äì either printed beside the avatar or in a tooltip.\n\n&#x3C;Story name=\"standard\">\n  &#x3C;Avatar\n    size=\"large\"\n    username=\"Tom Coleman\"\n    src=\"https://avatars2.githubusercontent.com/u/132554\"\n  />\n&#x3C;/Story>\n\n### Sizes\n\n4 sizes are supported.\n\n&#x3C;Story name=\"sizes\">\n  &#x3C;div>\n    &#x3C;Avatar\n      size=\"large\"\n      username=\"Tom Coleman\"\n      src=\"https://avatars2.githubusercontent.com/u/132554\"\n    />\n    &#x3C;Avatar\n      size=\"medium\"\n      username=\"Tom Coleman\"\n      src=\"https://avatars2.githubusercontent.com/u/132554\"\n    />\n    &#x3C;Avatar\n      size=\"small\"\n      username=\"Tom Coleman\"\n      src=\"https://avatars2.githubusercontent.com/u/132554\"\n    />\n    &#x3C;Avatar\n      size=\"tiny\"\n      username=\"Tom Coleman\"\n      src=\"https://avatars2.githubusercontent.com/u/132554\"\n    />\n  &#x3C;/div>\n&#x3C;/Story>\n\n### Default Values\n\nWhen no image is supplied to the `src` prop, Avatar displays initials.\nAvatar should be used sparingly in situations without access to images.\n\n&#x3C;Story name=\"initials\">\n  &#x3C;div>\n    &#x3C;Avatar username=\"Tom Coleman\" />\n    &#x3C;Avatar username=\"Dominic Nguyen\" />\n    &#x3C;Avatar username=\"Kyle Suss\" />\n    &#x3C;Avatar username=\"Michael Shilman\" />\n  &#x3C;/div>\n&#x3C;/Story>\n\n### Loading\n\nThe loading state is used when the image or username is, well, loading.\n\n&#x3C;Story name=\"loading\">\n  &#x3C;div>\n    &#x3C;Avatar size=\"large\" loading />\n    &#x3C;Avatar size=\"medium\" loading />\n    &#x3C;Avatar size=\"small\" loading />\n    &#x3C;Avatar size=\"tiny\" loading />\n  &#x3C;/div>\n&#x3C;/Story>\n\n### Playground\n\nExperiment with this story with Knobs addon in Canvas mode.\n\n&#x3C;Story name=\"knobs\" parameters={{ decorators: [withKnobs] }}>\n  &#x3C;Avatar\n    loading={boolean('Loading')}\n    size={select('Size', ['tiny', 'small', 'medium', 'large'])}\n    username=\"Dominic Nguyen\"\n    src=\"https://avatars2.githubusercontent.com/u/263385\"\n  />\n&#x3C;/Story>\n</code></pre>\n<!-- prettier-ignore-end -->\n<p>No seu Storybook, a tab \"Docs\" associada ao componente Avatar, dever√° ter sido substitu√≠da pela nova p√°gina que se encontra ainda algo \"crua\".</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs-mdx-initial.png\" alt=\"documenta√ß√£o Storybook a partir de MDX\"></p>\n<p>O Docs do Storybook vem com o \"Doc Blocks\", um conjunto de componentes prontos a serem usados que oferecem funcionalidades tais como: pr√©-visualiza√ß√µes interativas, a tabela de adere√ßos (props na forma original), entre muitos outros. Por defeito, estes s√£o usados nos bastidores durante o processo de gera√ß√£o das p√°ginas de documenta√ß√£o autom√°ticas.Mas podem tamb√©m ser extra√≠dos para uso individual. O nosso objetivo consiste em costumizar a documenta√ß√£o do Avatar sem que tenhamos que refazer tudo por n√≥s pr√≥prios, para evitar isso vamos reutilizar os Doc Blocks sempre que for poss√≠vel.</p>\n<p>Vamos adicionar o bloco de documenta√ß√£o <code>Props</code> e envolver a est√≥ria inicial num <code>Preview</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`import { Meta, Story, Props, Preview } from '@storybook/addon-docs/blocks';\n\n# ‚Ä¶\n\n<Preview withToolbar>\n  <Story name=&quot;standard&quot;>\n    <Avatar\n      size=&quot;large&quot;\n      username=&quot;Tom Coleman&quot;\n      src=&quot;https://avatars2.githubusercontent.com/u/132554&quot;\n    />\n  </Story>\n</Preview>\n\n<Props of={Avatar} />`, `6872250924956270000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"6872250924956270000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/Avatar.stories.mdx</div>\n<pre><code class=\"language-js\">import { Meta, Story, Props, Preview } from '@storybook/addon-docs/blocks';\n\n# ‚Ä¶\n\n&#x3C;Preview withToolbar>\n  &#x3C;Story name=\"standard\">\n    &#x3C;Avatar\n      size=\"large\"\n      username=\"Tom Coleman\"\n      src=\"https://avatars2.githubusercontent.com/u/132554\"\n    />\n  &#x3C;/Story>\n&#x3C;/Preview>\n\n&#x3C;Props of={Avatar} />\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs-mdx-docblocks.png\" alt=\"Documenta√ß√£o do  Storybook com MDX e blocks\"></p>\n<p>Fant√°stico! Volt√°mos ao ponto de partida, mas agora com controlo absoluto da ordena√ß√£o e conte√∫do. Os benef√≠cios inerentes √† gera√ß√£o de documenta√ß√£o autom√°tica continuam a persistir, visto que estamos a usar Doc Blocks.</p>\n<p>Altere a documenta√ß√£o do Avatar introduzindo uma nota acerca dos casos de uso. Isto\noferece contexto aos programadores, sobre como tirar partido deste componente. Podemos adicionar apenas algum markdown tal como noutro documento qualquer:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`// As before\n\n<Props of={Avatar} />\n\n## Usage\n\nAvatar is used to represent a person or an organization.\nBy default the avatar shows an image and gracefully falls back to the first initial of the username.\nWhile hydrating the component you may find it useful to render a skeleton template to indicate that Avatar is awaiting data.\nAvatars can be grouped with the AvatarList component.\n\n### Sizes\n\n// As before`, `86168428917071990000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"86168428917071990000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/Avatar.stories.mdx</div>\n<pre><code class=\"language-js\">// As before\n\n&#x3C;Props of={Avatar} />\n\n## Usage\n\nAvatar is used to represent a person or an organization.\nBy default the avatar shows an image and gracefully falls back to the first initial of the username.\nWhile hydrating the component you may find it useful to render a skeleton template to indicate that Avatar is awaiting data.\nAvatars can be grouped with the AvatarList component.\n\n### Sizes\n\n// As before\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs-mdx-usage.png\" alt=\"Documenta√ß√£o Storybook para MDX com informa√ß√£o de utiliza√ß√£o\"></p>\n<h4>P√°ginas personalizadas</h4>\n<p>Cada sistema de design vem com uma p√°gina de rosto. O Storybook Docs permite a constru√ß√£o de p√°ginas discretas utilizando MDX.</p>\n<p>Crie um novo ficheiro <code>src/components/Intro.stories.mdx</code>:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`import { Meta } from '@storybook/addon-docs/blocks';\n\n<Meta title=&quot;Design System|Introduction&quot; />\n\n# Introduction to the Learn Storybook design system\n\nThe Learn Storybook design system is a subset of the full [Storybook design system](https://github.com/storybookjs/design-system/).\nCreated as a learning resource for those interested in learning how to write and publish a design system using best practice techniques.\n\nLearn more at [Learn Storybook](https://learnstorybook.com).`, `61281732557362290000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"61281732557362290000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/components/Intro.stories.mdx</div>\n<pre><code class=\"language-js\">import { Meta } from '@storybook/addon-docs/blocks';\n\n&#x3C;Meta title=\"Design System|Introduction\" />\n\n# Introduction to the Learn Storybook design system\n\nThe Learn Storybook design system is a subset of the full [Storybook design system](https://github.com/storybookjs/design-system/).\nCreated as a learning resource for those interested in learning how to write and publish a design system using best practice techniques.\n\nLearn more at [Learn Storybook](https://learnstorybook.com).\n</code></pre>\n<p>Isto gera uma nova p√°gina somente de documenta√ß√£o, que √© independente das restantes p√°ginas de documenta√ß√£o autom√°ticas criadas anteriormente, associadas a componentes.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs-introduction-unsorted.png\" alt=\"Storybook docs with introduction page, unsorted\"></p>\n<p>Para que esta apare√ßa primeiro, precisamos notificar o Storybook para carregar esta p√°gina primeiro:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`configure(\n  [\n    require.context('../src', false, /Intro\\.stories\\.mdx/),\n    require.context('../src', true, /\\.stories\\.(js|mdx)\\$/),\n  ],\n  module\n);`, `83438916035158340000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"83438916035158340000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">.storybook/config.js</div>\n<pre><code class=\"language-js\">configure(\n  [\n    require.context('../src', false, /Intro\\.stories\\.mdx/),\n    require.context('../src', true, /\\.stories\\.(js|mdx)$/),\n  ],\n  module\n);\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs-introduction.png\" alt=\"Documenta√ß√£o Storybook docs com p√°gina de introdu√ß√£o\"></p>\n<h2>Publicar a documenta√ß√£o online</h2>\n<p>Se escreve documenta√ß√£o que ningu√©m l√™, ser√° √∫til? N√£o. N√£o chega somente criar materiais de aprendizagem de alta qualidade, precisamos divulgar estes materiais aos colegas de equipa e outras partes interessadas. At√© agora a nossa documenta√ß√£o encontra-se escondida no reposit√≥rio, o que significa que as pessoas precisam executar localmente o Storybook do sistema de design para poderem visualizar a documenta√ß√£o.</p>\n<p>Num cap√≠tulo anterior, public√°mos o Storybook online para revis√£o visual. √â bastante f√°cil usar o mesmo mecanismo para publicar a nossa documenta√ß√£o dos componentes tamb√©m. Vamos adicionar um novo script ao ficheiro <code>package.json</code> para poder construir o nosso Storybook em modo de documenta√ß√£o:</p>\n<pre><code class=\"language-json\">{\n  \"scripts\": {\n    \"build-storybook-docs\": \"build-storybook -s public --docs\"\n  }\n}\n</code></pre>\n<p>Guarde as altera√ß√µes e fa√ßa a submiss√£o. Poder√≠amos alterar a publica√ß√£o no Netlify para permitir a implementa√ß√£o do site da documenta√ß√£o, ou ent√£o usar um segundo sistema de implementa√ß√£o (tal como <a href=\"https://zeit.co/home\">now.sh</a>) para implementar o site de documenta√ß√£o a cada altera√ß√£o.</p>\n<div class=\"aside\">√Å medida que o seu sistema de design cresce, pode encontrar alguns requisitos que s√£o espec√≠ficos √° organiza√ß√£o, que necessitam de um conjunto de ferramentas espec√≠fico, ou mesmo at√© construir o vosso site est√°tico utilizando ferramentas tais como Gatsby ou Next. Mas √© bastante f√°cil migrar o markdown e MDX para outras solu√ß√µes</div>\n<h2>Importar o sistema de design noutras aplica√ß√µes</h2>\n<p>At√© agora, temos estado concentrados no interior. Primeiro a criar componentes de IU duradouros. Em seguida a rever, testar e documentar. Agora vamos mudar de perspetiva, para o exterior de forma a examinar como as equipas consomem os sistemas de design.</p>\n<p>O cap√≠tulo 7 demonstra como empacotar o sistema de design para ser usado noutras aplica√ß√µes. Aprenda como combinar o npm, o gestor de pacotes do Javascript, com o Auto, uma ferramenta de gest√£o de vers√µes que economiza tempo.</p>","frontmatter":{"title":"Documentar para as partes interessadas","description":"Acelere a ado√ß√£o de sistemas de design atrav√©s de documenta√ß√£o","commit":"2f95d89"},"fields":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/pt/document/","chapter":"document","framework":"react","language":"pt","permalink":"https://storybook.js.org/tutorials/design-systems-for-developers/react/pt/document/","tutorialUpToDate":false}},"currentGuide":{"frontmatter":{"codeGithubUrl":"https://github.com/chromaui/learnstorybook-design-system","toc":["introduction","architecture","build","review","test","document","distribute","workflow","conclusion"],"title":"Design Systems for Developers","twitterShareText":"I‚Äôm learning about building design systems! They're great for scaling frontend code on large teams."}},"site":{"siteMetadata":{"title":"Storybook Tutorials","githubUrl":"https://github.com/chromaui/learnstorybook.com","contributeUrl":"https://github.com/chromaui/learnstorybook.com/#contribute","permalink":"https://storybook.js.org/tutorials","siteUrl":"https://storybook.js.org"}},"tocPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture"}}},{"node":{"frontmatter":{"tocTitle":"Constru√ß√£o","title":"Constru√ß√£o de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build"}}},{"node":{"frontmatter":{"tocTitle":"Conclus√£o","title":"Conclus√£o","description":"Sistemas de design pr√≥speros economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion"}}},{"node":{"frontmatter":{"tocTitle":"Distribui√ß√£o","title":"Distribuir o IU numa organiza√ß√£o","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplica√ß√µes"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a ado√ß√£o de sistemas de design atrav√©s de documenta√ß√£o"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document"}}},{"node":{"frontmatter":{"tocTitle":"Introdu√ß√£o","title":"Introdu√ß√£o aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produ√ß√£o"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction"}}},{"node":{"frontmatter":{"tocTitle":"Revis√£o","title":"Revis√£o com equipas","description":"Colabora√ß√£o atrav√©s de integra√ß√£o cont√≠nua e revis√£o visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a apar√™ncia,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma vis√£o geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow"}}}]},"translationPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Architecture","title":"Architecting systems","description":"How to extract a design system from component libraries"},"fields":{"slug":"/design-systems-for-developers/react/en/architecture/","framework":"react","chapter":"architecture","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Build","title":"Build UI components","description":"Set up Storybook to build and catalog design system components"},"fields":{"slug":"/design-systems-for-developers/react/en/build/","framework":"react","chapter":"build","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Thriving design systems save time and increase productivity"},"fields":{"slug":"/design-systems-for-developers/react/en/conclusion/","framework":"react","chapter":"conclusion","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Distribute","title":"Distribute UI across an organization","description":"Learn to package and import your design system into other apps"},"fields":{"slug":"/design-systems-for-developers/react/en/distribute/","framework":"react","chapter":"distribute","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Document","title":"Document for stakeholders","description":"Drive design system adoption with documentation"},"fields":{"slug":"/design-systems-for-developers/react/en/document/","framework":"react","chapter":"document","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to design systems","description":"A guide to the latest production-ready tools for design systems"},"fields":{"slug":"/design-systems-for-developers/react/en/introduction/","framework":"react","chapter":"introduction","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Review","title":"Review with teams","description":"Collaborate with continuous integration and visual review"},"fields":{"slug":"/design-systems-for-developers/react/en/review/","framework":"react","chapter":"review","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Test","title":"Test to maintain quality","description":"How to test design system appearance, functionality, and accessibility"},"fields":{"slug":"/design-systems-for-developers/react/en/test/","framework":"react","chapter":"test","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Workflow","title":"Workflow for design systems","description":"An overview of the design system workflow for frontend developers"},"fields":{"slug":"/design-systems-for-developers/react/en/workflow/","framework":"react","chapter":"workflow","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Ë®≠Ë®à","title":"„Ç∑„Çπ„ÉÜ„É†Ë®≠Ë®à","description":"„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„É©„Ç§„Éñ„É©„É™„Éº„Åã„Çâ„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÇíÊäΩÂá∫„Åô„ÇãÊñπÊ≥ï"},"fields":{"slug":"/design-systems-for-developers/react/ja/architecture/","framework":"react","chapter":"architecture","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ÊßãÁØâ","title":"UI„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÇíÊßãÁØâ„Åô„Çã","description":"Storybook „Çí„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„Åó„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÇíÊßãÁØâ„Åó„Å¶„Ç´„Çø„É≠„Ç∞Âåñ„Åô„Çã"},"fields":{"slug":"/design-systems-for-developers/react/ja/build/","framework":"react","chapter":"build","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ÁµêË´ñ","title":"ÁµêË´ñ","description":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆÊàêÈï∑„ÅåÊôÇÈñì„ÇíÁØÄÁ¥Ñ„ÅóÁîüÁî£ÊÄß„ÇíÂêë‰∏ä„Åï„Åõ„Çã"},"fields":{"slug":"/design-systems-for-developers/react/ja/conclusion/","framework":"react","chapter":"conclusion","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ÈÖçÂ∏É","title":"ÁµÑÁπî„ÇíÊ®™Êñ≠„Åó„Å¶UI„ÇíÈÖçÂ∏É„Åô„Çã","description":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„Çí„Éë„ÉÉ„Ç±„Éº„Ç∏„É≥„Ç∞„Åó‰ªñ„ÅÆ„Ç¢„Éó„É™„Å∏„Ç§„É≥„Éù„Éº„Éà„Åô„ÇãÊñπÊ≥ï„ÇíÂ≠¶„Å∂"},"fields":{"slug":"/design-systems-for-developers/react/ja/distribute/","framework":"react","chapter":"distribute","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"„Éâ„Ç≠„É•„É°„É≥„Éà","title":"„Çπ„ÉÜ„Éº„ÇØ„Éõ„É´„ÉÄ„Éº„Å´Âêë„Åë„Åü„Éâ„Ç≠„É•„É°„É≥„Éà","description":"„Éâ„Ç≠„É•„É°„É≥„ÉÜ„Éº„Ç∑„Éß„É≥„Åß„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆÊé°Áî®„ÇíÊé®ÈÄ≤„Åô„Çã"},"fields":{"slug":"/design-systems-for-developers/react/ja/document/","framework":"react","chapter":"document","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"„Ç§„É≥„Éà„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥","title":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆ„Ç§„É≥„Éà„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥","description":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆ„Åü„ÇÅ„Å´ÊúÄÊñ∞„ÅÆ„É™„É™„Éº„ÇπÂèØËÉΩ„Å™„ÉÑ„Éº„É´„ÅÆ„Ç¨„Ç§„Éâ"},"fields":{"slug":"/design-systems-for-developers/react/ja/introduction/","framework":"react","chapter":"introduction","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"„É¨„Éì„É•„Éº","title":"„ÉÅ„Éº„É†„Åß„É¨„Éì„É•„Éº„Åô„Çã","description":"Á∂ôÁ∂öÁöÑ„Ç§„É≥„ÉÜ„Ç∞„É¨„Éº„Ç∑„Éß„É≥„Å®„Éì„Ç∏„É•„Ç¢„É´„É¨„Éì„É•„Éº„ÅßÂçîÂÉç„Åô„Çã"},"fields":{"slug":"/design-systems-for-developers/react/ja/review/","framework":"react","chapter":"review","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"„ÉÜ„Çπ„Éà","title":"ÂìÅË≥™„Çí‰øù„Å§„Åü„ÇÅ„ÅÆ„ÉÜ„Çπ„Éà","description":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆË¶ã„ÅüÁõÆ„ÄÅÊ©üËÉΩÊÄß„ÄÅ„Ç¢„ÇØ„Çª„Ç∑„Éì„É™„ÉÜ„Ç£„Çí„ÉÜ„Çπ„Éà„Åô„ÇãÊñπÊ≥ï"},"fields":{"slug":"/design-systems-for-developers/react/ja/test/","framework":"react","chapter":"test","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"„ÉØ„Éº„ÇØ„Éï„É≠„Éº","title":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆ„Åü„ÇÅ„ÅÆ„ÉØ„Éº„ÇØ„Éï„É≠„Éº","description":"„Éï„É≠„É≥„Éà„Ç®„É≥„ÉâÈñãÁô∫ËÄÖ„ÅÆ„Åü„ÇÅ„ÅÆ„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÉØ„Éº„ÇØ„Éï„É≠„Éº„ÅÆÊ¶ÇË¶Å"},"fields":{"slug":"/design-systems-for-developers/react/ja/workflow/","framework":"react","chapter":"workflow","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ÏÑ§Í≥Ñ","title":"ÏãúÏä§ÌÖú ÏÑ§Í≥Ñ","description":"Ïª¥Ìè¨ÎÑåÌä∏ ÎùºÏù¥Î∏åÎü¨Î¶¨ÏóêÏÑú ÎîîÏûêÏù∏ ÏãúÏä§ÌÖúÏùÑ Ï∂îÏ∂úÌïòÎäî Î∞©Î≤ï"},"fields":{"slug":"/design-systems-for-developers/react/ko/architecture/","framework":"react","chapter":"architecture","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"ÎπåÎìú","title":"UI Ïª¥Ìè¨ÎÑåÌä∏ Íµ¨Ï∂ïÌïòÍ∏∞","description":"Ïä§ÌÜ†Î¶¨Î∂ÅÏóêÏÑú ÎîîÏûêÏù∏ ÏãúÏä§ÌÖú Ïª¥Ìè¨ÎÑåÌä∏Î•º Íµ¨Ï∂ïÌïòÍ≥† Íµ¨Ï°∞ÌôîÌïòÍ∏∞"},"fields":{"slug":"/design-systems-for-developers/react/ko/build/","framework":"react","chapter":"build","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"ÎßàÎ¨¥Î¶¨","title":"ÎßàÎ¨¥Î¶¨","description":"Ïûò Í∞ñÏ∂∞ÎÜìÏùÄ ÎîîÏûêÏù∏ ÏãúÏä§ÌÖúÏúºÎ°ú ÏãúÍ∞Ñ Ï†àÏïΩÍ≥º ÏÉùÏÇ∞ÏÑ± Ìñ•ÏÉÅ"},"fields":{"slug":"/design-systems-for-developers/react/ko/conclusion/","framework":"react","chapter":"conclusion","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Î∞∞Ìè¨","title":"UI Î∞∞Ìè¨","description":"ÎîîÏûêÏù∏ ÏãúÏä§ÌÖúÏùÑ Îã§Î•∏ Ïï±Ïóê Ìå®ÌÇ§ÏßïÌïòÍ≥† importÌïòÎäî Î∞©Î≤ïÏùÑ Î∞∞ÏõÅÎãàÎã§."},"fields":{"slug":"/design-systems-for-developers/react/ko/distribute/","framework":"react","chapter":"distribute","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Î¨∏ÏÑú","title":"Ïù¥Ìï¥Í¥ÄÍ≥ÑÏûêÎ•º ÏúÑÌïú Î¨∏ÏÑú","description":"Î¨∏ÏÑúÌôîÎ•º ÌÜµÌïòÏó¨ ÎîîÏûêÏù∏ ÏãúÏä§ÌÖú ÎèÑÏûÖÏùÑ Ï¥âÏßÑÌïòÍ∏∞"},"fields":{"slug":"/design-systems-for-developers/react/ko/document/","framework":"react","chapter":"document","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"ÏÜåÍ∞ú","title":"ÎîîÏûêÏù∏ ÏãúÏä§ÌÖú ÏÜåÍ∞ú","description":"ÎîîÏûêÏù∏ ÏãúÏä§ÌÖúÏùÑ ÏúÑÌïú ÏµúÏã† Í∞úÎ∞ú Î∞©Î≤ï ÎèÑÍµ¨ Í∞ÄÏù¥Îìú"},"fields":{"slug":"/design-systems-for-developers/react/ko/introduction/","framework":"react","chapter":"introduction","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Î¶¨Î∑∞","title":"ÌåÄÍ≥º Ìï®Íªò Î¶¨Î∑∞ÌïòÍ∏∞","description":"ÏßÄÏÜçÏ†Å ÌÜµÌï©(CI)Í≥º ÎπÑÏ£ºÏñº Î¶¨Î∑∞Î•º ÌÜµÌïú ÌòëÏóÖ"},"fields":{"slug":"/design-systems-for-developers/react/ko/review/","framework":"react","chapter":"review","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"ÌÖåÏä§Ìä∏","title":"ÌíàÏßà Ïú†ÏßÄÎ•º ÏúÑÌïú ÌÖåÏä§Ìä∏","description":"ÎîîÏûêÏù∏ ÏãúÏä§ÌÖú Ïô∏Í¥Ä, Í∏∞Îä•ÏÑ± Î∞è Ï†ëÍ∑ºÏÑ±ÏùÑ ÌÖåÏä§Ìä∏ÌïòÎäî Î∞©Î≤ï"},"fields":{"slug":"/design-systems-for-developers/react/ko/test/","framework":"react","chapter":"test","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"ÏûëÏóÖ ÌùêÎ¶Ñ(workflow)","title":"ÎîîÏûêÏù∏ ÏãúÏä§ÌÖúÏùÑ ÏúÑÌïú ÏûëÏóÖ ÌùêÎ¶Ñ(workflow)","description":"ÌîÑÎ°†Ìä∏ÏóîÎìú Í∞úÎ∞úÏûêÎ•º ÏúÑÌïú ÎîîÏûêÏù∏ ÏãúÏä§ÌÖú ÏûëÏóÖ ÌùêÎ¶Ñ(workflow)Ïùò Í∞úÏöî"},"fields":{"slug":"/design-systems-for-developers/react/ko/workflow/","framework":"react","chapter":"workflow","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Constru√ß√£o","title":"Constru√ß√£o de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Conclus√£o","title":"Conclus√£o","description":"Sistemas de design pr√≥speros economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Distribui√ß√£o","title":"Distribuir o IU numa organiza√ß√£o","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplica√ß√µes"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a ado√ß√£o de sistemas de design atrav√©s de documenta√ß√£o"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Introdu√ß√£o","title":"Introdu√ß√£o aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produ√ß√£o"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Revis√£o","title":"Revis√£o com equipas","description":"Colabora√ß√£o atrav√©s de integra√ß√£o cont√≠nua e revis√£o visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a apar√™ncia,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma vis√£o geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Êû∂ÊûÑ","title":"Êû∂ÊûÑÁ≥ªÁªü","description":"Â¶Ç‰Ωï‰ªéÁé∞ÊúâÁöÑÁªÑ‰ª∂Â∫ì‰∏≠ÊèêÂèñÂá∫ËÆæËÆ°Á≥ªÁªü"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","chapter":"architecture","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÂàõÂª∫","title":"ÂàõÂª∫ UI ÁªÑ‰ª∂","description":"‰ΩøÁî® Storybook Êù•ÂàõÂª∫ÂíåÂàÜÁ±ªÊÇ®ËÆæËÆ°Á≥ªÁªü‰∏≠ÁöÑÁªÑ‰ª∂"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/build/","framework":"react","chapter":"build","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÊÄªÁªì","title":"ÊÄªÁªì","description":"ÊåÅÁª≠ÂèëÂ±ïÁöÑËÆæËÆ°Á≥ªÁªüÂ∏ÆÊÇ®ËäÇÁúÅÊó∂Èó¥Âπ∂ÊèêÈ´òÊïàÁéá"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/conclusion/","framework":"react","chapter":"conclusion","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÂèëÂ∏É","title":"Âú®Êï¥‰∏™ÁªÑÁªá‰∏≠ÂèëÂ∏ÉÊÇ®ÁöÑ UI ÁªÑ‰ª∂","description":"Â≠¶‰π†Â¶Ç‰ΩïÊâìÂåÖÂπ∂Âú®Âà´ÁöÑÂ∫îÁî®Á®ãÂ∫è‰∏≠ÂºïÂÖ•ÊÇ®ÁöÑËÆæËÆ°Á≥ªÁªü"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/distribute/","framework":"react","chapter":"distribute","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÊñáÊ°£","title":"ÂÜôÁªôÂπ≤Á≥ª‰∫∫ÁöÑÊñáÊ°£","description":"ÈÄöËøáÊñáÊ°£Êé®Âä®ËÆæËÆ°Á≥ªÁªüÁöÑ‰ΩøÁî®"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/document/","framework":"react","chapter":"document","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÁÆÄ‰ªã","title":"ËÆæËÆ°Á≥ªÁªüÁÆÄ‰ªã","description":"ÊúÄÊñ∞ÂèëÂ∏ÉÁöÑËÆæËÆ°Á≥ªÁªüÂ∑•ÂÖ∑ÁöÑÊåáÂçó"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/introduction/","framework":"react","chapter":"introduction","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÂÆ°Êü•","title":"‰∏éÂõ¢Èòü‰∏ÄËµ∑ÂÆ°Êü•","description":"ËßÜËßâÂÆ°Êü•‰∏éÊåÅÁª≠ÈõÜÊàêÂπ∂Ëøõ"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/review/","framework":"react","chapter":"review","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÊµãËØï","title":"ÈÄöËøáÊµãËØïÊù•‰øùËØÅË¥®Èáè","description":"Â¶Ç‰ΩïÊµãËØïËÆæËÆ°Á≥ªÁªüÁöÑÁïåÈù¢„ÄÅÂäüËÉΩÂíåÊó†ÈöúÁ¢çËÆøÈóÆ"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/test/","framework":"react","chapter":"test","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"Â∑•‰ΩúÊµÅÁ®ã","title":"ËÆæËÆ°Á≥ªÁªüÁöÑÂ∑•‰ΩúÊµÅÁ®ã","description":"Ê¶ÇËø∞ÂâçÁ´ØÂºÄÂèëÂàõÂª∫ËÆæËÆ°Á≥ªÁªüÁöÑÂ∑•‰ΩúÊµÅÁ®ã"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","chapter":"workflow","language":"zh-CN"}}}]}},"pageContext":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/pt/document/","framework":"react","language":"pt","chapter":"document","pageType":"chapter"}},"staticQueryHashes":["238248339"]}
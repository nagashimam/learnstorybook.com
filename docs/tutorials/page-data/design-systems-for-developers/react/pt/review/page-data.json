{"componentChunkName":"component---src-components-screens-chapter-screen-index-js","path":"/design-systems-for-developers/react/pt/review/","result":{"data":{"currentPage":{"html":"<p>No capítulo 4, vamos aprender quais os fluxos de trabalho profissionais para fazer melhoramentos no sistema de design mitigando inconsistências. Este capítulo abrange técnicas para obter feedback sobre o IU e chegar a um consenso na equipa. Estes processos de produção são usados pelas equipas de pessoas da Auth0, Shopify e Discovery Network.</p>\n<h2>Fonte de verdade única ou ponto único de falhanço</h2>\n<p>Anteriormente, escrevi um artigo mencionando que os sistemas de design são um <a href=\"https://www.chromatic.com/blog/why-design-systems-are-a-single-point-of-failure\">ponto único de falhanço</a> para equipas de frontend. Na sua essência os sistemas de design são uma dependência. Se alterarem um componente do sistema de design, essa alteração propaga-se para todas as aplicações dependentes. Como o mecanismo de distribuição é imparcial - melhoramentos, ou erros são lançados igualmente.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-dependencies.png\" alt=\"Dependências do sistema de design\"></p>\n<p>Os erros são um risco existêncial para os sistemas de design, como tal fazemos tudo para evitá-los. Ajustes pequenos, têm tendência em transformar-se num número grande de regressões. Sem uma estratégia clara de manutenção contínua os sistemas de design têm tendência a murchar.</p>\n<h2>Integração contínua</h2>\n<p>A integração contínua é a abordagem ideal para manutenção de aplicações web modernas. Permite que se codifiquem comportamentos tais como testes, análise e implementação á medida que se adiciona código. Vamos pedir emprestada esta técnica de forma a poupar-nos qualquer tipo de trabalho manual repetitivo.</p>\n<p>Neste caso vamos usar o CircleCI, que é gratuito para a nossa utilização modesta. Mas os mesmos princípios podem ser aplicados a quaisquer outros serviços de CI também.</p>\n<p>Primeiro, registe-se no CircleCI se ainda não o fez. Uma vez feito o registo, irá reparar na tab com o nome \"add projects\", é aqui que pode configurar o projeto de sistemas de design da seguinte forma.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/circleci-add-project.png\" alt=\"Adicionar um projeto no CircleCI\"></p>\n<p>Crie uma pasta ou diretório chamado <code>.circleci</code> na raíz do seu projeto e no seu interior crie um ficheiro chamado config.yml. Isto irá permitir definir qual o comportamento do processo de integração contínua (IC). Por agora pode simplesmente utilizar a recomendação fornecida pela Circle para Node:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`version: 2\njobs:\n  build:\n    docker:\n      - image: circleci/node:8.10.0\n    working_directory: ~/repo\n    steps:\n      - checkout\n      - restore_cache:\n          keys:\n            - v1-dependencies-{{ checksum &quot;package.json&quot; }}\n            - v1-dependencies-\n      - run: yarn install\n      - save_cache:\n          paths:\n            - node_modules\n          key: v1-dependencies-{{ checksum &quot;package.json&quot; }}\n      - run: yarn test`, `34050978641719510000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"34050978641719510000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">null</div>\n<pre><code class=\"language-yml\">version: 2\njobs:\n  build:\n    docker:\n      - image: circleci/node:8.10.0\n    working_directory: ~/repo\n    steps:\n      - checkout\n      - restore_cache:\n          keys:\n            - v1-dependencies-{{ checksum \"package.json\" }}\n            - v1-dependencies-\n      - run: yarn install\n      - save_cache:\n          paths:\n            - node_modules\n          key: v1-dependencies-{{ checksum \"package.json\" }}\n      - run: yarn test\n</code></pre>\n<p>Presentemente só vai ser executado <code>yarn test</code>, que não é nada mais nada menos que um teste básico para React, configurado inicialmente pelo create-react-app. Vamos verificar que funciona no Circle:</p>\n<p><img src=\"/tutorials/design-systems-for-developers/circleci-first-build.png\" alt=\"Primeira execução no CircleCI\"></p>\n<p>Reparem que a execução falhou, visto que ainda não existem testes definidos para o projeto. Não há problema, brevemente vão ser adicionados, vamos continuar por agora.</p>\n<blockquote>\n<p>“Mas isto funciona na minha máquina?!” – toda a gente</p>\n</blockquote>\n<h2>Revisão visual dos componentes de IU com a equipa</h2>\n<p>A revisão visual é o processo de confirmação tanto do comportamento, como da estética associada aos interfaces de utilizador. Este ocorre durante o processo de desenvolvimento do interface de utilizador, mas também durante o controlo de qualidade com os restantes elementos da equipa.</p>\n<p>A maioria dos programadores estão familiarizados com revisões de código, ou seja, o processo de obter feedback sobre o código vindo de outros programadores de forma a melhorar a sua qualidade. Visto que os componentes do IU expressam código graficamente, a revisão visual é necessária de forma a obter feedback sobre o IU, ou experiência de utilizador (UX).</p>\n<h4>Estabelecer um ponto de referência universal</h4>\n<p>Eliminar a pasta ou diretório node_modules. Reinstalar os pacotes. Limpar a localstorage. Eliminar cookies. Se estas ações são familiares, já sabe como é difícil manter uma referência relativa á ultima versão do código para todos os elementos da equipa. Quando os elementos da equipa não possuem os mesmos ambientes de trabalho, torna-se um pesadelo distinguir problemas causados pelo ambiente de desenvolvimento local de erros reais.</p>\n<p>Felizmente, como programadores frontend, possuímos um alvo comum para compilação: o browser. Equipas experientes publicam os seus Storybook online, para que sirvam como um ponto de referência universal para o processo de revisão visual. Com isto, evitam-se complicações que possam surgir devido aos ambientes locais de desenvolvimento (de qualquer forma é chato ser o suporte técnico).</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-visual-review.jpg\" alt=\"Revisão do trabalho na núvem\"></p>\n<p>Quando os componentes vivos do IU estão acessíveis através de um URL, as partes interessadas podem confirmar a aparência do IU no conforto dos seus próprios browsers. O que significa que programadores, designers e gestores de projeto não precisam de se preocupar com coisas tais como ambientes de desenvolvimento, distribuir capturas de ecrã por todo o lado, ou referenciar IU desatualizados.</p>\n<blockquote>\n<p>\"Implementação do Storybook em cada PR torna a revisão visual mais fácil e ajuda os proprietários dos produtos pensarem em termos de componentes.\" –Norbert de Langen, Storybook core maintainer</p>\n</blockquote>\n<h4>Publicar o Storybook</h4>\n<p>Utilize o serviço <a href=\"http://netlify.com\">Netlify</a>, que é um serviço de implementação deveras fácil de utilizar para construir o fluxo de trabalho associado à revisão visual. O Netlify é gratuito para o nosso caso de uso, mas também é bastante <a href=\"https://storybook.js.org/docs/react/sharing/publish-storybook\">fácil implementar o Storybook como um site estático e implementá-lo</a> noutros serviços de hospedagem.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/netlify-choose-provider.png\" alt=\"Escolher o Netlify no GitHub\"></p>\n<p>Localize o repositório GitHub associado ao sistema de design que foi criado no capítulo anterior.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/netlify-choose-repository.png\" alt=\"Escolha do repositório no Netlify\"></p>\n<p>Introduza o comando <code>storybook-build</code> para este seja executado pelo Netlify sempre que for feita uma alteração.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/netlify-setup-build.png\" alt=\"Configurar a primeira implementação no Netlify\"></p>\n<p>Até agora está tudo a correr bem, deverá ver que o Netlify compilou com sucesso.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/netlify-deployed.png\" alt=\"Primeira compilação executou com sucesso no Storybook\"></p>\n<p>Navegue no seu Storybook que foi publicado, clicando no link fornecido. Irá verificar que o seu ambiente de desenvolvimento local do Storybook, foi espelhado online. O que faz com que seja mais fácil para a sua equipa rever os componentes de IU reais renderizados da mesma forma que os vê localmente.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/netlify-deployed-site.png\" alt=\"Visualizando a primeira compilação no Netlify\"></p>\n<p>O Netlify executa um comando de compilação para cada submissão feita que afeta a implementação do Storybook. Irá encontrar um link associado na lista de verificações do PR (pull request) do GitHub (iremos observar isto em seguida).</p>\n<p>Parabéns! Agora que foi configurada a infraestrutura para publicar o Storybook, vamos recolher feedback através de uma demonstração.</p>\n<p>Já que estamos a tocar neste assunto, adicione a pasta ou diretório <code>storybook-static</code> ao ficheiro <code>.gitignore</code>:</p>\n<pre><code># …\nstorybook-static\n</code></pre>\n<p>E faça a submissão da alteração.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git commit -am “ignore storybook static”`, `37766216794096574000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"37766216794096574000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git commit -am “ignore storybook static”\n</code></pre>\n<h4>Solicite uma revisão visual da sua equipa.</h4>\n<p>Sempre que for feito um pull request que contém alterações ao interface de utilizador, é extremamente útil iniciar um processo de revisão visual com as partes envolvidas de forma a chegar a um consenso ao que irá ser expedido para o utilizador. Com isto evitam-se surpresas desagradáveis ou refazer o trabalho já feito.</p>\n<p>Iremos demonstrar a revisão visual através de uma alteração no interface de utilizador, feita num novo ramo.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git checkout -b improve-button`, `25737422257689092000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"25737422257689092000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git checkout -b improve-button\n</code></pre>\n<p>Primeiro, faça uma alteração no componente Button. \"Faça com que brilhe\" - os designers irão adorar.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`// ...\nconst StyledButton = styled.button\\`\n  border: 10px solid red;\n  font-size: 20px;\n\\`;\n// ...`, `92080244932108730000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"92080244932108730000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/Button.js</div>\n<pre><code class=\"language-js\">// ...\nconst StyledButton = styled.button`\n  border: 10px solid red;\n  font-size: 20px;\n`;\n// ...\n</code></pre>\n<p>Submeta a alteração para o repositório GitHub.</p>\n<pre><code class=\"language-shell\">git commit -am “make Button pop”\ngit push -u origin improve-button\n</code></pre>\n<p>No browser, navegue para o GitHub.com e crie um pull request para o ramo <code>improve-button</code>.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-create-pr.png\" alt=\"Criar um PR no GitHub\"></p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-created-pr.png\" alt=\"PR criado no GitHub\"></p>\n<p>Abra o URL gerado pelo Netlify, que se encontra na lista de verificações do PR para visualizar o seu componente.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-deployed-site-with-changed-button.png\" alt=\"Componente Button alterado no site implementado\"></p>\n<p>Para cada componente e estória que foi alterada, copie o URL da barra de endereço e\npartilhe-a na plataforma utilizada pela equipa para gerir tarefas (GitHub, Asana, Jira, etc), de forma a ajudar os restantes elementos da equipa a rever as estórias que são relevantes.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-created-pr-with-links.png\" alt=\"PR do GitHub com links para o storybook\"></p>\n<p>Atribua o problema aos seus colegas de equipa e fique a aguardar pelo retorno de feedback.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/visual-review-feedback-github.gif\" alt=\"Porquê?!\"></p>\n<p>No desenvolvimento de software, a maioria dos defeitos são oriundos de falhas de comunicação e não da tecnologia. As revisões visuais ajudam as equipas a obter feedback contínuo durante o processo de desenvolvimento de forma a ser possível lançar sistemas de design mais rapidamente.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/visual-review-loop.jpg\" alt=\"Processo de revisão visual\"></p>\n<blockquote>\n<p>A implementação de um URL do Storybook para cada Pull Request é algo que temos estado a fazer á algum tempo com o sistema de design do Shopify, Polaris e tem sido extremamente útil. Ben Scott, Engenheiro na Shopify</p>\n</blockquote>\n<h2>Testar o sistema de design</h2>\n<p>A revisão visual é inestimável; no entanto, rever manualmente centenas de estórias de componentes pode demorar horas. Idealmente, o que se pretende é ver somente as alterações intencionais (adições/melhoramentos) e capturar automaticamente quaisquer regressões não intencionais.</p>\n<p>No capítulo 5, vamos introduzir estratégias de teste que ajudam a reduzir qualquer ruído introduzido durante a revisão visual e garantir que os componentes continuam a ser duradouros ao longo do tempo.</p>","frontmatter":{"title":"Revisão com equipas","description":"Colaboração através de integração contínua e revisão visual","commit":"5bbfa8c"},"fields":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/pt/review/","chapter":"review","framework":"react","language":"pt","permalink":"https://storybook.js.org/tutorials/design-systems-for-developers/react/pt/review/","tutorialUpToDate":false}},"currentGuide":{"frontmatter":{"codeGithubUrl":"https://github.com/chromaui/learnstorybook-design-system","toc":["introduction","architecture","build","review","test","document","distribute","workflow","conclusion"],"title":"Design Systems for Developers","twitterShareText":"I’m learning about building design systems! They're great for scaling frontend code on large teams."}},"site":{"siteMetadata":{"title":"Storybook Tutorials","githubUrl":"https://github.com/chromaui/learnstorybook.com","contributeUrl":"https://github.com/chromaui/learnstorybook.com/#contribute","permalink":"https://storybook.js.org/tutorials","siteUrl":"https://storybook.js.org"}},"tocPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture"}}},{"node":{"frontmatter":{"tocTitle":"Construção","title":"Construção de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build"}}},{"node":{"frontmatter":{"tocTitle":"Conclusão","title":"Conclusão","description":"Sistemas de design prósperos economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion"}}},{"node":{"frontmatter":{"tocTitle":"Distribuição","title":"Distribuir o IU numa organização","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplicações"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a adoção de sistemas de design através de documentação"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document"}}},{"node":{"frontmatter":{"tocTitle":"Introdução","title":"Introdução aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produção"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction"}}},{"node":{"frontmatter":{"tocTitle":"Revisão","title":"Revisão com equipas","description":"Colaboração através de integração contínua e revisão visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a aparência,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma visão geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow"}}}]},"translationPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Architecture","title":"Architecting systems","description":"How to extract a design system from component libraries"},"fields":{"slug":"/design-systems-for-developers/react/en/architecture/","framework":"react","chapter":"architecture","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Build","title":"Build UI components","description":"Set up Storybook to build and catalog design system components"},"fields":{"slug":"/design-systems-for-developers/react/en/build/","framework":"react","chapter":"build","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Thriving design systems save time and increase productivity"},"fields":{"slug":"/design-systems-for-developers/react/en/conclusion/","framework":"react","chapter":"conclusion","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Distribute","title":"Distribute UI across an organization","description":"Learn to package and import your design system into other apps"},"fields":{"slug":"/design-systems-for-developers/react/en/distribute/","framework":"react","chapter":"distribute","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Document","title":"Document for stakeholders","description":"Drive design system adoption with documentation"},"fields":{"slug":"/design-systems-for-developers/react/en/document/","framework":"react","chapter":"document","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to design systems","description":"A guide to the latest production-ready tools for design systems"},"fields":{"slug":"/design-systems-for-developers/react/en/introduction/","framework":"react","chapter":"introduction","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Review","title":"Review with teams","description":"Collaborate with continuous integration and visual review"},"fields":{"slug":"/design-systems-for-developers/react/en/review/","framework":"react","chapter":"review","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Test","title":"Test to maintain quality","description":"How to test design system appearance, functionality, and accessibility"},"fields":{"slug":"/design-systems-for-developers/react/en/test/","framework":"react","chapter":"test","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Workflow","title":"Workflow for design systems","description":"An overview of the design system workflow for frontend developers"},"fields":{"slug":"/design-systems-for-developers/react/en/workflow/","framework":"react","chapter":"workflow","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"設計","title":"システム設計","description":"コンポーネントライブラリーからデザインシステムを抽出する方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/architecture/","framework":"react","chapter":"architecture","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"構築","title":"UIコンポーネントを構築する","description":"Storybook をセットアップしデザインシステムコンポーネントを構築してカタログ化する"},"fields":{"slug":"/design-systems-for-developers/react/ja/build/","framework":"react","chapter":"build","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"結論","title":"結論","description":"デザインシステムの成長が時間を節約し生産性を向上させる"},"fields":{"slug":"/design-systems-for-developers/react/ja/conclusion/","framework":"react","chapter":"conclusion","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"配布","title":"組織を横断してUIを配布する","description":"デザインシステムをパッケージングし他のアプリへインポートする方法を学ぶ"},"fields":{"slug":"/design-systems-for-developers/react/ja/distribute/","framework":"react","chapter":"distribute","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ドキュメント","title":"ステークホルダーに向けたドキュメント","description":"ドキュメンテーションでデザインシステムの採用を推進する"},"fields":{"slug":"/design-systems-for-developers/react/ja/document/","framework":"react","chapter":"document","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"イントロダクション","title":"デザインシステムのイントロダクション","description":"デザインシステムのために最新のリリース可能なツールのガイド"},"fields":{"slug":"/design-systems-for-developers/react/ja/introduction/","framework":"react","chapter":"introduction","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"レビュー","title":"チームでレビューする","description":"継続的インテグレーションとビジュアルレビューで協働する"},"fields":{"slug":"/design-systems-for-developers/react/ja/review/","framework":"react","chapter":"review","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"テスト","title":"品質を保つためのテスト","description":"デザインシステムの見た目、機能性、アクセシビリティをテストする方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/test/","framework":"react","chapter":"test","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ワークフロー","title":"デザインシステムのためのワークフロー","description":"フロントエンド開発者のためのデザインシステムワークフローの概要"},"fields":{"slug":"/design-systems-for-developers/react/ja/workflow/","framework":"react","chapter":"workflow","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"설계","title":"시스템 설계","description":"컴포넌트 라이브러리에서 디자인 시스템을 추출하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/architecture/","framework":"react","chapter":"architecture","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"빌드","title":"UI 컴포넌트 구축하기","description":"스토리북에서 디자인 시스템 컴포넌트를 구축하고 구조화하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/build/","framework":"react","chapter":"build","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"마무리","title":"마무리","description":"잘 갖춰놓은 디자인 시스템으로 시간 절약과 생산성 향상"},"fields":{"slug":"/design-systems-for-developers/react/ko/conclusion/","framework":"react","chapter":"conclusion","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"배포","title":"UI 배포","description":"디자인 시스템을 다른 앱에 패키징하고 import하는 방법을 배웁니다."},"fields":{"slug":"/design-systems-for-developers/react/ko/distribute/","framework":"react","chapter":"distribute","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"문서","title":"이해관계자를 위한 문서","description":"문서화를 통하여 디자인 시스템 도입을 촉진하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/document/","framework":"react","chapter":"document","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"소개","title":"디자인 시스템 소개","description":"디자인 시스템을 위한 최신 개발 방법 도구 가이드"},"fields":{"slug":"/design-systems-for-developers/react/ko/introduction/","framework":"react","chapter":"introduction","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"리뷰","title":"팀과 함께 리뷰하기","description":"지속적 통합(CI)과 비주얼 리뷰를 통한 협업"},"fields":{"slug":"/design-systems-for-developers/react/ko/review/","framework":"react","chapter":"review","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"테스트","title":"품질 유지를 위한 테스트","description":"디자인 시스템 외관, 기능성 및 접근성을 테스트하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/test/","framework":"react","chapter":"test","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"작업 흐름(workflow)","title":"디자인 시스템을 위한 작업 흐름(workflow)","description":"프론트엔드 개발자를 위한 디자인 시스템 작업 흐름(workflow)의 개요"},"fields":{"slug":"/design-systems-for-developers/react/ko/workflow/","framework":"react","chapter":"workflow","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Construção","title":"Construção de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Conclusão","title":"Conclusão","description":"Sistemas de design prósperos economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Distribuição","title":"Distribuir o IU numa organização","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplicações"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a adoção de sistemas de design através de documentação"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Introdução","title":"Introdução aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produção"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Revisão","title":"Revisão com equipas","description":"Colaboração através de integração contínua e revisão visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a aparência,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma visão geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"架构","title":"架构系统","description":"如何从现有的组件库中提取出设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","chapter":"architecture","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"创建","title":"创建 UI 组件","description":"使用 Storybook 来创建和分类您设计系统中的组件"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/build/","framework":"react","chapter":"build","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"总结","title":"总结","description":"持续发展的设计系统帮您节省时间并提高效率"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/conclusion/","framework":"react","chapter":"conclusion","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"发布","title":"在整个组织中发布您的 UI 组件","description":"学习如何打包并在别的应用程序中引入您的设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/distribute/","framework":"react","chapter":"distribute","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"文档","title":"写给干系人的文档","description":"通过文档推动设计系统的使用"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/document/","framework":"react","chapter":"document","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"简介","title":"设计系统简介","description":"最新发布的设计系统工具的指南"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/introduction/","framework":"react","chapter":"introduction","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"审查","title":"与团队一起审查","description":"视觉审查与持续集成并进"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/review/","framework":"react","chapter":"review","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"测试","title":"通过测试来保证质量","description":"如何测试设计系统的界面、功能和无障碍访问"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/test/","framework":"react","chapter":"test","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"工作流程","title":"设计系统的工作流程","description":"概述前端开发创建设计系统的工作流程"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","chapter":"workflow","language":"zh-CN"}}}]}},"pageContext":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/pt/review/","framework":"react","language":"pt","chapter":"review","pageType":"chapter"}},"staticQueryHashes":["238248339"]}
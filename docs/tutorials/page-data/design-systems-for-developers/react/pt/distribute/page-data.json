{"componentChunkName":"component---src-components-screens-chapter-screen-index-js","path":"/design-systems-for-developers/react/pt/distribute/","result":{"data":{"currentPage":{"html":"<p>De uma perspetiva arquitet√≥nica, os sistemas de design s√£o apenas mais uma depend√™ncia de frontend. N√£o s√£o t√£o diferentes de outras depend√™ncias populares, tais como moment ou lodash. Os componentes de IU s√£o apenas c√≥digo, como tal podemos utilizar t√©cnicas estabelecidas para reutiliza√ß√£o de c√≥digo.</p>\n<p>Este cap√≠tulo ilustra como distribuir sistemas de design, desde empacotamento dos componentes de IU at√© √† importa√ß√£o dos mesmos noutras aplica√ß√µes. Iremos desvendar t√©cnicas que economizam tempo em termos de publica√ß√£o e vers√µes.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-propagation.png\" alt=\"Propagar componentes em sites\"></p>\n<h2>Empacotar o sistema de design</h2>\n<p>As organiza√ß√µes possuem milhares de componentes de IU espalhados por in√∫meras aplica√ß√µes. Anteriormente extra√≠mos os componentes comuns para o sistema de design. Agora √© necess√°rio reintroduzi-los de volta nas aplica√ß√µes</p>\n<p>O nosso sistema de design usa o gestor de pacotes npm para Javascript, para lidar com a gest√£o de depend√™ncias, distribui√ß√£o e controlo de vers√µes.</p>\n<p>Existem muitas outros m√©todos v√°lidos para empacotar os sistemas de design. D√™ uma olhadela aos sistemas de design da Lonely Planet, Auth0, Salesforce, GitHub e Microsoft para ver a diversidade de abordagens. Alguns lan√ßam cada componente como um pacote separado. Outros lan√ßam todos os componentes num s√≥ pacote.</p>\n<p>Para sistemas de design rec√©m-nascido, a forma mais direta √© a publica√ß√£o de um pacote com controlo de vers√µes que encapsula:</p>\n<ul>\n<li>üèó Componentes interface utilizador comuns</li>\n<li>üé® Tokens de design(tamb√©m conhecidos como vari√°veis de estilo)</li>\n<li>üìï Documenta√ß√£o</li>\n</ul>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-package.jpg\" alt=\"Package a design system\"></p>\n<h2>Prepare o seu sistema de design para ser exportado</h2>\n<p>Utiliz√°mos como ponto de partida para o nosso sistema de design o create-react-app, com isto ainda existem alguns vest√≠gios da aplica√ß√£o inicial criada pelo pacote. Vamos fazer agora uma limpeza.</p>\n<p>Primeiro deveremos adicionar um ficheiro README.md b√°sico:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`# The Learn Storybook design system\n\nThe Learn Storybook design system is a subset of the full [Storybook design system](https://github.com/storybookjs/design-system/),\ncreated as a learning resource for those interested in learning how to write and publish a design system using best in practice techniques.\n\nLearn more at [Learn Storybook](https://learnstorybook.com).`, `59705110117315050000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"59705110117315050000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">README.md</div>\n<pre><code class=\"language-markdown\"># The Learn Storybook design system\n\nThe Learn Storybook design system is a subset of the full [Storybook design system](https://github.com/storybookjs/design-system/),\ncreated as a learning resource for those interested in learning how to write and publish a design system using best in practice techniques.\n\nLearn more at [Learn Storybook](https://learnstorybook.com).\n</code></pre>\n<p>Em seguida, vamos criar o ficheiro <code>src/index.js</code>, como ponto de partida para o nosso sistema de design. Neste ficheiro v√£o ser exportados todos os tokens de design e tamb√©m os componentes:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`import * as styles from './shared/styles';\nimport * as global from './shared/global';\nimport * as animation from './shared/animation';\nimport * as icons from './shared/icons';\n\nexport { styles, global, animation, icons };\n\nexport * from './Avatar';\nexport * from './Badge';\nexport * from './Button';\nexport * from './Icon';\nexport * from './Link';`, `73645762677308000000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"73645762677308000000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/index.js</div>\n<pre><code class=\"language-js\">import * as styles from './shared/styles';\nimport * as global from './shared/global';\nimport * as animation from './shared/animation';\nimport * as icons from './shared/icons';\n\nexport { styles, global, animation, icons };\n\nexport * from './Avatar';\nexport * from './Badge';\nexport * from './Button';\nexport * from './Icon';\nexport * from './Link';\n</code></pre>\n<p>Ap√≥s isto, vamos adicionar uma nova depend√™ncia de desenvolvimento <code>@babel/cli</code> para ser poss√≠vel compilar o nosso Javascript para publica√ß√£o:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`yarn add --dev @babel/cli`, `11592927295296506000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"11592927295296506000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">yarn add --dev @babel/cli\n</code></pre>\n<p>Para ser poss√≠vel compilar o nosso pacote, vamos adicionar ainda um script no ficheiro <code>package.json</code>, que ir√° compilar o conte√∫do da pasta de c√≥digo diretamente para a pasta <code>dist</code>:</p>\n<pre><code class=\"language-json\">{\n  \"scripts\": {\n    \"build\": \"BABEL_ENV=production babel src -d dist\",\n      ...\n  }\n  \"babel\": {\n    \"presets\": [\n      \"react-app\"\n    ]\n  }\n}\n</code></pre>\n<p>Podemos agora executar <code>yarn build</code> para compilar o nosso c√≥digo para a pasta <code>dist</code>; √© boa ideia adicionar esta pasta ao ficheiro <code>.gitignore</code> tamb√©m:</p>\n<pre><code>// ..\nstorybook-static\ndist\n</code></pre>\n<h4>Adicionar metadados ao pacote para a publica√ß√£o</h4>\n<p>Finalmente, vamos fazer algumas altera√ß√µes adicionais ao ficheiro <code>package.json</code>, de forma a garantir que todos os consumidores do pacote, obtenham todas as informa√ß√µes necess√°rias. A forma mais simples para isto √© executar <code>yarn init</code>: um comando que inicializa o pacote para ser publicado:</p>\n<pre><code class=\"language-shell\">yarn init\n\nyarn init v1.16.0\nquestion name (learnstorybook-design-system):\nquestion version (0.1.0):\nquestion description (Learn Storybook design system):\nquestion entry point (dist/index.js):\nquestion repository url (https://github.com/chromaui/learnstorybook-design-system.git):\nquestion author (Tom Coleman &#x3C;tom@thesnail.org>):\nquestion license (MIT):\nquestion private: no\n</code></pre>\n<p>Ao executar este comando, ir√£o ser apresentados um conjunto de quest√µes, algumas destas j√° cont√™m a resposta pr√©-preenchida, para outras ter√° que pensar um pouco mais. Ter√° que escolher um nome que ser√° √∫nico ao pacote no npm (n√£o ser√° poss√≠vel usar, visto que j√° existe <code>learnstorybook-design-system</code>; uma boa escolha √© <code>&#x3C;o-seu-nome-de-utilizador>-learnstorybook-design-system</code>).</p>\n<p>Em resumo, com base nas respostas fornecidas o ficheiro <code>package.json</code> ir√° ser atualizado com os novos valores:</p>\n<pre><code class=\"language-json\">{\n  \"name\": \"learnstorybook-design-system\",\n  \"description\": \"Learn Storybook design system\",\n  \"version\": \"0.1.0\",\n  \"license\": \"MIT\",\n  \"main\": \"dist/index.js\",\n  \"repository\": \"https://github.com/chromaui/learnstorybook-design-system.git\"\n  // ...\n}\n</code></pre>\n<p>Com isto prepar√°mos o nosso pacote e podemos public√°-lo no npm pela primeira vez!</p>\n<h2>Controlo de vers√µes com o Auto</h2>\n<p>De forma a publicar diversas vers√µes para o npm, vamos utilizar um processo que ir√° atualizar um registo de altera√ß√µes, define um valor para vers√£o de forma sensata e cria uma tag no git, que depois ir√° vincular o n√∫mero da vers√£o a uma submiss√£o no nosso reposit√≥rio. De forma a ajudar com tudo isto, vamos utilizar uma ferramenta de c√≥digo aberto chamada <a href=\"https://github.com/intuit/auto\">Auto</a>, que foi criada espec√≠ficamente para este prop√≥sito.</p>\n<p>Vamos instalar o Auto:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`yarn add --dev auto`, `94458571866193280000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"94458571866193280000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">yarn add --dev auto\n</code></pre>\n<p>O Auto √© uma ferramenta da linha de comandos, que podemos utilizar para diversas tarefas relacionadas com a gest√£o de vers√µes. Pode aprender mais sobre o Auto na sua <a href=\"https://intuit.github.io/auto/\">p√°gina de documenta√ß√£o</a>.</p>\n<h4>Obter um token para o Github e npm</h4>\n<p>Nos pr√≥ximos passos, o Auto ir√° ter uma conversa com o GitHub e o npm. De forma que a conversa corra sem incidentes, ser√° necess√°rio obter um token de acesso pessoal. Para o GitHub pode obter um destes <a href=\"https://github.com/settings/tokens\">nesta p√°gina</a>. N√£o esquecer que o token ir√° necessitar de um escopo <code>repo</code>.</p>\n<p>Para o npm, pode gerar um token no seguinte URL:<a href=\"https://www.npmjs.com/settings/&#x26;lt;your-username&#x26;gt;/tokens\">https://www.npmjs.com/settings/&#x26;lt;your-username&#x26;gt;/tokens</a>.</p>\n<p>Neste caso ir√° necessitar de um token com permiss√µes ‚ÄúRead and Publish‚Äù.</p>\n<p>Com esta informa√ß√£o ao nosso dispor, vamos adicionar os tokens obtidos num ficheiro chamado <code>.env</code> no nosso projeto:</p>\n<pre><code>GH_TOKEN=&#x3C;value you just got from GitHub>\nNPM_TOKEN=&#x3C;value you just got from npm>\n</code></pre>\n<p>Ao criar este ficheiro, com base no conte√∫do do ficheiro <code>.gitignore</code>, garantimos que estes valores n√£o s√£o adicionados acidentalmente no reposit√≥rio de c√≥digo aberto, que todas as pessoas podem ver! Isto √© crucial. Se algu√©m pretender publicar o pacote localmente (posteriormente iremos alterar as configura√ß√µes para publicar autom√°ticamente quando os pull requests (PR) s√£o fundidos com o ramo master), ent√£o dever√£o configurar os seus pr√≥prios ficheiros <code>.env</code> com base neste processo:</p>\n<pre><code>storybook-static\ndist\n.env\n</code></pre>\n<h4>Criar etiquetas no GitHub</h4>\n<p>A primeira coisa que temos que fazer com o Auto √© criar um conjunto de etiquetas no GitHub. Vamos usar estas etiquetas futuramente, quando forem feitas altera√ß√µes ao pacote (veja o pr√≥ximo cap√≠tulo), o que ir√° permitir ao <code>auto</code> atualizar a vers√£o de forma sensata e criar um registo de altera√ß√µes e notas de lan√ßamento.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`yarn auto create-labels`, `77332057502272630000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"77332057502272630000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">yarn auto create-labels\n</code></pre>\n<p>Se verificar no GitHub, ir√° observar que existe um conjunto de etiquetas que o <code>auto</code> gostaria que fossem usadas:</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-auto-labels.png\" alt=\"Conjunto de etiquetas criadas pelo auto no GitHub\"></p>\n<p>Antes de ser fundido, cada pull request (PR) dever√° ser etiquetado com uma das seguintes etiquetas <code>major</code>, <code>minor</code>, <code>patch</code>, <code>skip-release</code>, <code>prerelease</code>, <code>internal</code>, <code>documentation</code>.</p>\n<h4>Publicar manualmente a primeira vers√£o com o Auto</h4>\n<p>Futuramente os novos valores das vers√µes ir√£o ser calculados pelo <code>auto</code>, recorrendo a scripts, mas para a primeira vers√£o, vamos executar os comandos manualmente de forma a entender o que cada um faz. Vamos gerar a primeira entrada no registo de altera√ß√µes:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`yarn auto changelog`, `98736772356678600000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"98736772356678600000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">yarn auto changelog\n</code></pre>\n<p>O que o comando faz, √© gerar uma entrada no registo de altera√ß√µes bem grande, com cada submiss√£o feita (e um aviso que temos estado a fazer altera√ß√µes no ramo master e devemos parar com isso o mais depressa poss√≠vel).</p>\n<p>No entanto √© extremamente √∫til manter um registo de altera√ß√µes gerado automaticamente, de forma que n√£o se percam pitada do que est√° a acontecer, √© tamb√©m uma muito boa ideia, edit√°-lo manualmente e gerar uma mensagem √∫til para os utilizadores. Neste caso, os utilizadores n√£o precisam ter conhecimento de todo e qualquer submiss√£o feita at√© agora. Vamos criar uma mensagem simples e agrad√°vel para a primeira vers√£o v0.1.0. Para isto, primeiro desfa√ßa a altera√ß√£o feita Auto (mas mantenha-a):</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git reset HEAD^`, `3839399707859314700`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"3839399707859314700\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git reset HEAD^\n</code></pre>\n<p>Em seguida atualize o registo de altera√ß√µes e fa√ßa a submiss√£o:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`# v0.1.0 (Tue Sep 03 2019)\n\n- Created first version of the design system, with \\`Avatar\\`, \\`Badge\\`, \\`Button\\`, \\`Icon\\` and \\`Link\\` components.\n\n#### Authors: 1\n- Tom Coleman ([@tmeasday](https://github.com/tmeasday))`, `14454815539909904000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"14454815539909904000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">null</div>\n<pre><code class=\"language-markdown\"># v0.1.0 (Tue Sep 03 2019)\n\n- Created first version of the design system, with `Avatar`, `Badge`, `Button`, `Icon` and `Link` components.\n\n#### Authors: 1\n- Tom Coleman ([@tmeasday](https://github.com/tmeasday))\n</code></pre>\n<p>Vamos agora sim adicionar o registo de altera√ß√µes ao git. Tenham em aten√ß√£o que usamos <code>[skip ci]</code> para notificar toda e qualquer plataforma de integra√ß√£o cont√≠nua (IC) para ignorar este tipo de submiss√µes, caso contr√°rio acabamos por entrar num loop the compila√ß√£o e publica√ß√£o.</p>\n<pre><code class=\"language-shell\">git add CHANGELOG.md\ngit commit -m \"Changelog for v0.1.0 [skip ci]\"\n</code></pre>\n<p>E agora sim podemos publicar:</p>\n<pre><code class=\"language-shell\">npm version 0.1.0 -m \"Bump version to: %s [skip ci]\"\nnpm publish\n</code></pre>\n<p>E usamos o Auto para gerar uma vers√£o de lan√ßamento no GitHub:</p>\n<pre><code class=\"language-shell\">git push --follow-tags origin main\nyarn auto release\n</code></pre>\n<p>Parab√©ns! Public√°mos com sucesso o nosso pacote para o npm e cri√°mos uma vers√£o\nde lan√ßamento no GitHub (com muita sorte!).</p>\n<p><img src=\"/tutorials/design-systems-for-developers/npm-published-package.png\" alt=\"Pacote publicado no npm\"></p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-published-release.png\" alt=\"Vers√£o de lan√ßamento publicada no GitHub\"></p>\n<p>(Note-se que apesar que o <code>auto</code> ter gerado autom√°ticamente as notas de lan√ßamento para a primeira vers√£o, mas tamb√©m foram modificadas de forma a fazerem sentido para uma primeira vers√£o).</p>\n<h4>Configurar scripts para usarem o Auto</h4>\n<p>Vamos agora configurar o Auto para seguir o mesmo processo quando for necess√°rio publicar o nosso pacote no futuro. Vamos alterar o ficheiro <code>package.json</code> e adicionar o seguinte script:</p>\n<pre><code class=\"language-json\">{\n  \"scripts\": {\n    \"release\": \"auto shipit --base-branch=main\"\n  }\n}\n</code></pre>\n<p>Agora, quando for executado o <code>yarn release</code>, ir√£o ser percorridos quase todos os passos mencionados anteriormente (sendo a exce√ß√£o, a utiliza√ß√£o do registo de altera√ß√µes que foi gerado automaticamente), de forma autom√°tica. Iremos garantir que todas as submiss√µes para o ramo master do reposit√≥rio s√£o publicados atrav√©s da adi√ß√£o de um comando ao ficheiro de configura√ß√£o do circle:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`# ...\n- run: yarn test\n- run: npx chromatic --project-token=2wix88i1ziu\n- run: |\n    if [ \\$CIRCLE_BRANCH = &quot;main&quot; ]\n    then\n      yarn release\n    fi`, `93139442928600240000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"93139442928600240000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">.circleci/config.yml</div>\n<pre><code class=\"language-yml\"># ...\n- run: yarn test\n- run: npx chromatic --project-token=2wix88i1ziu\n- run: |\n    if [ $CIRCLE_BRANCH = \"main\" ]\n    then\n      yarn release\n    fi\n</code></pre>\n<p>Ser√° tamb√©m necess√°rio adicionar os tokens npm e GitHub ao ambiente CircleCI associado ao vosso projeto, mais exatamente no website do CircleCI (<a href=\"https://circleci.com/gh/&#x26;lt;your-username&#x26;gt;/learnstorybook-design-system/edit#env-vars\">https://circleci.com/gh/&#x26;lt;your-username&#x26;gt;/learnstorybook-design-system/edit#env-vars</a>):</p>\n<p><img src=\"/tutorials/design-systems-for-developers/circleci-set-env-vars.png\" alt=\"Definir vari√°veis de ambiente no CircleCI\"></p>\n<p>Desta forma, assim que cada PR for fundido com o ramo master, ir√° publicar automaticamente uma nova vers√£o, incrementando o n√∫mero da vers√£o apropriadamente, gra√ßas √°s etiquetas adicionadas.</p>\n<div class=\"aside\">N√£o mencion√°mos todas as funcionalidades e integra√ß√µes existentes no Auto, que poder√£o ser √∫teis para sistemas de design emergentes. Para isso leia a documenta√ß√£o <a href=\"https://github.com/intuit/auto\">aqui</a>.</div>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-import.png\" alt=\"Importar o sistema de design\"></p>\n<h2>Importar o sistema de design numa aplica√ß√£o</h2>\n<p>Agora que o nosso sistema de design est√° online, √© bastante trivial instalar a depend√™ncia e come√ßar a utilizar os diversos componentes do IU.</p>\n<h4>Obter a aplica√ß√£o de exemplo</h4>\n<p>Anteriormente neste tutorial, opt√°mos pela stack de frontend popular que inclui React e styled-components. O que significa que a nossa aplica√ß√£o de exemplo dever√° usar tamb√©m React e styled-components para retirar o m√°ximo do sistema de design.</p>\n<div class=\"aside\">Outros m√©todos que tamb√©m s√£o muito promissores, tal como o Svelte ou componentes web, que permitem tamb√©m que se criem de IU completamente agn√≥sticos. No entanto, estes s√£o relativamente novos, ainda n√£o est√£o bem documentados ou ainda n√£o t√™m uma ado√ß√£o generalizada, como tal n√£o foram inclu√≠dos ainda neste guia.</div>\n<p>A aplica√ß√£o de exemplo usa o Storybook de forma a facilitar o <a href=\"https://www.componentdriven.org/\">desenvolvimento orientado a componentes</a>, que √© uma metodologia de desenvolvimento de aplica√ß√µes usada para criar IU de baixo para cima, come√ßando por componentes, acabando nos ecr√£s. Durante a demonstra√ß√£o iremos executar dois Storybooks lado a lado: um para a aplica√ß√£o de exemplo e outro para o nosso sistema de design.</p>\n<p>Clone a aplica√ß√£o de exemplo do reposit√≥rio do GitHub</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git clone chromaui/learnstorybook-design-system-example-app`, `54221931175607920000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"54221931175607920000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git clone chromaui/learnstorybook-design-system-example-app\n</code></pre>\n<p>Instale as depend√™ncias e inicie o Storybook da aplica√ß√£o de exemplo</p>\n<pre><code class=\"language-shell\">yarn install\nyarn storybook\n</code></pre>\n<p>Dever√° ver o Storybook a ser executado com as est√≥rias associadas aos componentes utilizados pela aplica√ß√£o:</p>\n<p><img src=\"/tutorials/design-systems-for-developers/example-app-starting-storybook.png\" alt=\"Storybook inicial para a aplica√ß√£o de exemplo\"></p>\n<h4>Integrar o sistema de design</h4>\n<p>Adicione o seu sistema de design que foi publicado anteriormente como uma depend√™ncia.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`yarn add <your-username>-learnstorybook-design-system`, `93895609164315160000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"93895609164315160000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">yarn add &#x3C;your-username>-learnstorybook-design-system\n</code></pre>\n<p>Em seguida, vamos alterar o ficheiro <code>.storybook/config.js</code> da aplica√ß√£o de exemplo, de forma a listar os componentes utilizados no sistema de design e tamb√©m os estilos globais que foram definidos. Fa√ßa a altera√ß√£o seguinte:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`import React from 'react';\nimport { configure. addDecorator } from '@storybook/react';\nimport { GlobalStyles } from '<your-username>-learnstorybook-design-system';\naddDecorator(s => <><GlobalStyles/>{s()}</>);\n\n// automatically import all files ending in *.stories.js\nconfigure(\n  [\n    require.context('../src', true, /\\.stories\\.js\\$/),\n    require.context(\n      '../node_modules/<your-username>-learnstorybook-design-system/dist',\n      true,\n      /\\.stories\\.(js|mdx)\\$/\n    ),\n  ],\n  module\n);`, `69911632333420410000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"69911632333420410000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">.storybook/config.js</div>\n<pre><code class=\"language-js\">import React from 'react';\nimport { configure. addDecorator } from '@storybook/react';\nimport { GlobalStyles } from '&#x3C;your-username>-learnstorybook-design-system';\naddDecorator(s => &#x3C;>&#x3C;GlobalStyles/>{s()}&#x3C;/>);\n\n// automatically import all files ending in *.stories.js\nconfigure(\n  [\n    require.context('../src', true, /\\.stories\\.js$/),\n    require.context(\n      '../node_modules/&#x3C;your-username>-learnstorybook-design-system/dist',\n      true,\n      /\\.stories\\.(js|mdx)$/\n    ),\n  ],\n  module\n);\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/example-app-storybook-with-design-system-stories.png\" alt=\"Aplica√ß√£o de exemplo com as est√≥rias do sistema de design\"></p>\n<p>Poder√° agora pesquisar os componentes do sistema de design e documenta√ß√£o, enquanto continua a trabalhar na aplica√ß√£o de exemplo. Apresentar o sistema de design durante o desenvolvimento de funcionalidades aumenta a probabilidade dos componentes serem reutilizados ao inv√©s de perder tempo a inventar os seus pr√≥prios componentes.</p>\n<p>Alternativamente, se o Storybook do sistema de design foi publicado online anteriormente (veja o cap√≠tulo 4), pode consultar toda a informa√ß√£o no endere√ßo gerado.</p>\n<p>Vamos usar o componente Avatar do nosso sistema de design no componente UserItem da nossa aplica√ß√£o. O UserItem dever√° renderizar a informa√ß√£o relativa ao utilizador inclu√≠ndo um nome e foto de perfil.</p>\n<p>No vosso editor, abram o ficheiro UserItem.js. Mas procurem tamb√©m pelo UserItem na barra lateral do Storybook, para verem todas as altera√ß√µes de c√≥digo serem atualizadas instantaneamente atrav√©s do hot module reload.</p>\n<p>Importe o componente Avatar.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`import { Avatar } from '<your-username>-learnstorybook-design-system';`, `38862265732816680000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"38862265732816680000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/components/UserItem.js</div>\n<pre><code class=\"language-js\">import { Avatar } from '&#x3C;your-username>-learnstorybook-design-system';\n</code></pre>\n<p>Como queremos renderizar o Avatar lado a lado com o username, fa√ßa a seguinte altera√ß√£o.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`import React from 'react';\nimport styled from 'styled-components';\nimport { Avatar } from 'learnstorybook-design-system';\n\nconst Container = styled.div\\`\n  background: #eee;\n  margin-bottom: 1em;\n  padding: 0.5em;\n\\`;\n\nconst Name = styled.span\\`\n  color: #333;\n  font-size: 16px;\n\\`;\n\nexport default ({ user: { name, avatarUrl } }) => (\n  <Container>\n    <Avatar username={name} src={avatarUrl} />\n    <Name>{name}</Name>\n  </Container>\n);`, `49123795901711500000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"49123795901711500000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/components/UserItem.js</div>\n<pre><code class=\"language-javascript\">import React from 'react';\nimport styled from 'styled-components';\nimport { Avatar } from 'learnstorybook-design-system';\n\nconst Container = styled.div`\n  background: #eee;\n  margin-bottom: 1em;\n  padding: 0.5em;\n`;\n\nconst Name = styled.span`\n  color: #333;\n  font-size: 16px;\n`;\n\nexport default ({ user: { name, avatarUrl } }) => (\n  &#x3C;Container>\n    &#x3C;Avatar username={name} src={avatarUrl} />\n    &#x3C;Name>{name}&#x3C;/Name>\n  &#x3C;/Container>\n);\n</code></pre>\n<p>Assim que guardar estas altera√ß√µes, o componente UserItem ser√° atualizado no Storybook e ir√° apresentar estas altera√ß√µes. Visto que o UserItem faz parte do componente UserList, as mesmas altera√ß√µes ser√£o propagadas para este componente tamb√©m.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/example-app-storybook-using-design-system.png\" alt=\"Aplica√ß√£o de exemplo a utilizar o sistema de design\"></p>\n<p>E j√° est√°! Com isto acabou de importar um componente do sistema de design diretamente para a aplica√ß√£o de exemplo. Quando for publicada uma nova atualiza√ß√£o ao componente Avatar no sistema de design, essa altera√ß√£o ser√° depois propagada para a aplica√ß√£o de exemplo, assim que a depend√™ncia for atualizada.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-propagation-storybook.png\" alt=\"Distribuir sistemas de design\"></p>\n<h2>Domine o fluxo de trabalho associado ao sistema de design</h2>\n<p>O fluxo de trabalho associado ao sistema de design come√ßa pelo desenvolvimento de componentes de IU no Storybook e termina com a distribui√ß√£o para aplica√ß√µes cliente. No entanto isso n√£o √© tudo. Os sistemas de design dever√£o continuar a evoluir de forma a poderem servir os requisitos de produto que est√£o em muta√ß√£o constante. O nosso trabalho ainda agora come√ßou.</p>\n<p>O cap√≠tulo 8 ilustra o fluxo de trabalho completo associado ao sistema de design que foi criado neste guia. Iremos ver como altera√ß√µes no IU propagam-se para fora do sistema de design.</p>","frontmatter":{"title":"Distribuir o IU numa organiza√ß√£o","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplica√ß√µes","commit":"dabd221"},"fields":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/pt/distribute/","chapter":"distribute","framework":"react","language":"pt","permalink":"https://storybook.js.org/tutorials/design-systems-for-developers/react/pt/distribute/","tutorialUpToDate":false}},"currentGuide":{"frontmatter":{"codeGithubUrl":"https://github.com/chromaui/learnstorybook-design-system","toc":["introduction","architecture","build","review","test","document","distribute","workflow","conclusion"],"title":"Design Systems for Developers","twitterShareText":"I‚Äôm learning about building design systems! They're great for scaling frontend code on large teams."}},"site":{"siteMetadata":{"title":"Storybook Tutorials","githubUrl":"https://github.com/chromaui/learnstorybook.com","contributeUrl":"https://github.com/chromaui/learnstorybook.com/#contribute","permalink":"https://storybook.js.org/tutorials","siteUrl":"https://storybook.js.org"}},"tocPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture"}}},{"node":{"frontmatter":{"tocTitle":"Constru√ß√£o","title":"Constru√ß√£o de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build"}}},{"node":{"frontmatter":{"tocTitle":"Conclus√£o","title":"Conclus√£o","description":"Sistemas de design pr√≥speros economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion"}}},{"node":{"frontmatter":{"tocTitle":"Distribui√ß√£o","title":"Distribuir o IU numa organiza√ß√£o","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplica√ß√µes"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a ado√ß√£o de sistemas de design atrav√©s de documenta√ß√£o"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document"}}},{"node":{"frontmatter":{"tocTitle":"Introdu√ß√£o","title":"Introdu√ß√£o aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produ√ß√£o"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction"}}},{"node":{"frontmatter":{"tocTitle":"Revis√£o","title":"Revis√£o com equipas","description":"Colabora√ß√£o atrav√©s de integra√ß√£o cont√≠nua e revis√£o visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a apar√™ncia,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma vis√£o geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow"}}}]},"translationPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Architecture","title":"Architecting systems","description":"How to extract a design system from component libraries"},"fields":{"slug":"/design-systems-for-developers/react/en/architecture/","framework":"react","chapter":"architecture","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Build","title":"Build UI components","description":"Set up Storybook to build and catalog design system components"},"fields":{"slug":"/design-systems-for-developers/react/en/build/","framework":"react","chapter":"build","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Thriving design systems save time and increase productivity"},"fields":{"slug":"/design-systems-for-developers/react/en/conclusion/","framework":"react","chapter":"conclusion","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Distribute","title":"Distribute UI across an organization","description":"Learn to package and import your design system into other apps"},"fields":{"slug":"/design-systems-for-developers/react/en/distribute/","framework":"react","chapter":"distribute","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Document","title":"Document for stakeholders","description":"Drive design system adoption with documentation"},"fields":{"slug":"/design-systems-for-developers/react/en/document/","framework":"react","chapter":"document","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to design systems","description":"A guide to the latest production-ready tools for design systems"},"fields":{"slug":"/design-systems-for-developers/react/en/introduction/","framework":"react","chapter":"introduction","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Review","title":"Review with teams","description":"Collaborate with continuous integration and visual review"},"fields":{"slug":"/design-systems-for-developers/react/en/review/","framework":"react","chapter":"review","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Test","title":"Test to maintain quality","description":"How to test design system appearance, functionality, and accessibility"},"fields":{"slug":"/design-systems-for-developers/react/en/test/","framework":"react","chapter":"test","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Workflow","title":"Workflow for design systems","description":"An overview of the design system workflow for frontend developers"},"fields":{"slug":"/design-systems-for-developers/react/en/workflow/","framework":"react","chapter":"workflow","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Ë®≠Ë®à","title":"„Ç∑„Çπ„ÉÜ„É†Ë®≠Ë®à","description":"„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„É©„Ç§„Éñ„É©„É™„Éº„Åã„Çâ„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÇíÊäΩÂá∫„Åô„ÇãÊñπÊ≥ï"},"fields":{"slug":"/design-systems-for-developers/react/ja/architecture/","framework":"react","chapter":"architecture","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ÊßãÁØâ","title":"UI„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÇíÊßãÁØâ„Åô„Çã","description":"Storybook „Çí„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„Åó„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÇíÊßãÁØâ„Åó„Å¶„Ç´„Çø„É≠„Ç∞Âåñ„Åô„Çã"},"fields":{"slug":"/design-systems-for-developers/react/ja/build/","framework":"react","chapter":"build","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ÁµêË´ñ","title":"ÁµêË´ñ","description":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆÊàêÈï∑„ÅåÊôÇÈñì„ÇíÁØÄÁ¥Ñ„ÅóÁîüÁî£ÊÄß„ÇíÂêë‰∏ä„Åï„Åõ„Çã"},"fields":{"slug":"/design-systems-for-developers/react/ja/conclusion/","framework":"react","chapter":"conclusion","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ÈÖçÂ∏É","title":"ÁµÑÁπî„ÇíÊ®™Êñ≠„Åó„Å¶UI„ÇíÈÖçÂ∏É„Åô„Çã","description":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„Çí„Éë„ÉÉ„Ç±„Éº„Ç∏„É≥„Ç∞„Åó‰ªñ„ÅÆ„Ç¢„Éó„É™„Å∏„Ç§„É≥„Éù„Éº„Éà„Åô„ÇãÊñπÊ≥ï„ÇíÂ≠¶„Å∂"},"fields":{"slug":"/design-systems-for-developers/react/ja/distribute/","framework":"react","chapter":"distribute","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"„Éâ„Ç≠„É•„É°„É≥„Éà","title":"„Çπ„ÉÜ„Éº„ÇØ„Éõ„É´„ÉÄ„Éº„Å´Âêë„Åë„Åü„Éâ„Ç≠„É•„É°„É≥„Éà","description":"„Éâ„Ç≠„É•„É°„É≥„ÉÜ„Éº„Ç∑„Éß„É≥„Åß„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆÊé°Áî®„ÇíÊé®ÈÄ≤„Åô„Çã"},"fields":{"slug":"/design-systems-for-developers/react/ja/document/","framework":"react","chapter":"document","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"„Ç§„É≥„Éà„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥","title":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆ„Ç§„É≥„Éà„É≠„ÉÄ„ÇØ„Ç∑„Éß„É≥","description":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆ„Åü„ÇÅ„Å´ÊúÄÊñ∞„ÅÆ„É™„É™„Éº„ÇπÂèØËÉΩ„Å™„ÉÑ„Éº„É´„ÅÆ„Ç¨„Ç§„Éâ"},"fields":{"slug":"/design-systems-for-developers/react/ja/introduction/","framework":"react","chapter":"introduction","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"„É¨„Éì„É•„Éº","title":"„ÉÅ„Éº„É†„Åß„É¨„Éì„É•„Éº„Åô„Çã","description":"Á∂ôÁ∂öÁöÑ„Ç§„É≥„ÉÜ„Ç∞„É¨„Éº„Ç∑„Éß„É≥„Å®„Éì„Ç∏„É•„Ç¢„É´„É¨„Éì„É•„Éº„ÅßÂçîÂÉç„Åô„Çã"},"fields":{"slug":"/design-systems-for-developers/react/ja/review/","framework":"react","chapter":"review","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"„ÉÜ„Çπ„Éà","title":"ÂìÅË≥™„Çí‰øù„Å§„Åü„ÇÅ„ÅÆ„ÉÜ„Çπ„Éà","description":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆË¶ã„ÅüÁõÆ„ÄÅÊ©üËÉΩÊÄß„ÄÅ„Ç¢„ÇØ„Çª„Ç∑„Éì„É™„ÉÜ„Ç£„Çí„ÉÜ„Çπ„Éà„Åô„ÇãÊñπÊ≥ï"},"fields":{"slug":"/design-systems-for-developers/react/ja/test/","framework":"react","chapter":"test","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"„ÉØ„Éº„ÇØ„Éï„É≠„Éº","title":"„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÅÆ„Åü„ÇÅ„ÅÆ„ÉØ„Éº„ÇØ„Éï„É≠„Éº","description":"„Éï„É≠„É≥„Éà„Ç®„É≥„ÉâÈñãÁô∫ËÄÖ„ÅÆ„Åü„ÇÅ„ÅÆ„Éá„Ç∂„Ç§„É≥„Ç∑„Çπ„ÉÜ„É†„ÉØ„Éº„ÇØ„Éï„É≠„Éº„ÅÆÊ¶ÇË¶Å"},"fields":{"slug":"/design-systems-for-developers/react/ja/workflow/","framework":"react","chapter":"workflow","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ÏÑ§Í≥Ñ","title":"ÏãúÏä§ÌÖú ÏÑ§Í≥Ñ","description":"Ïª¥Ìè¨ÎÑåÌä∏ ÎùºÏù¥Î∏åÎü¨Î¶¨ÏóêÏÑú ÎîîÏûêÏù∏ ÏãúÏä§ÌÖúÏùÑ Ï∂îÏ∂úÌïòÎäî Î∞©Î≤ï"},"fields":{"slug":"/design-systems-for-developers/react/ko/architecture/","framework":"react","chapter":"architecture","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"ÎπåÎìú","title":"UI Ïª¥Ìè¨ÎÑåÌä∏ Íµ¨Ï∂ïÌïòÍ∏∞","description":"Ïä§ÌÜ†Î¶¨Î∂ÅÏóêÏÑú ÎîîÏûêÏù∏ ÏãúÏä§ÌÖú Ïª¥Ìè¨ÎÑåÌä∏Î•º Íµ¨Ï∂ïÌïòÍ≥† Íµ¨Ï°∞ÌôîÌïòÍ∏∞"},"fields":{"slug":"/design-systems-for-developers/react/ko/build/","framework":"react","chapter":"build","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"ÎßàÎ¨¥Î¶¨","title":"ÎßàÎ¨¥Î¶¨","description":"Ïûò Í∞ñÏ∂∞ÎÜìÏùÄ ÎîîÏûêÏù∏ ÏãúÏä§ÌÖúÏúºÎ°ú ÏãúÍ∞Ñ Ï†àÏïΩÍ≥º ÏÉùÏÇ∞ÏÑ± Ìñ•ÏÉÅ"},"fields":{"slug":"/design-systems-for-developers/react/ko/conclusion/","framework":"react","chapter":"conclusion","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Î∞∞Ìè¨","title":"UI Î∞∞Ìè¨","description":"ÎîîÏûêÏù∏ ÏãúÏä§ÌÖúÏùÑ Îã§Î•∏ Ïï±Ïóê Ìå®ÌÇ§ÏßïÌïòÍ≥† importÌïòÎäî Î∞©Î≤ïÏùÑ Î∞∞ÏõÅÎãàÎã§."},"fields":{"slug":"/design-systems-for-developers/react/ko/distribute/","framework":"react","chapter":"distribute","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Î¨∏ÏÑú","title":"Ïù¥Ìï¥Í¥ÄÍ≥ÑÏûêÎ•º ÏúÑÌïú Î¨∏ÏÑú","description":"Î¨∏ÏÑúÌôîÎ•º ÌÜµÌïòÏó¨ ÎîîÏûêÏù∏ ÏãúÏä§ÌÖú ÎèÑÏûÖÏùÑ Ï¥âÏßÑÌïòÍ∏∞"},"fields":{"slug":"/design-systems-for-developers/react/ko/document/","framework":"react","chapter":"document","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"ÏÜåÍ∞ú","title":"ÎîîÏûêÏù∏ ÏãúÏä§ÌÖú ÏÜåÍ∞ú","description":"ÎîîÏûêÏù∏ ÏãúÏä§ÌÖúÏùÑ ÏúÑÌïú ÏµúÏã† Í∞úÎ∞ú Î∞©Î≤ï ÎèÑÍµ¨ Í∞ÄÏù¥Îìú"},"fields":{"slug":"/design-systems-for-developers/react/ko/introduction/","framework":"react","chapter":"introduction","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Î¶¨Î∑∞","title":"ÌåÄÍ≥º Ìï®Íªò Î¶¨Î∑∞ÌïòÍ∏∞","description":"ÏßÄÏÜçÏ†Å ÌÜµÌï©(CI)Í≥º ÎπÑÏ£ºÏñº Î¶¨Î∑∞Î•º ÌÜµÌïú ÌòëÏóÖ"},"fields":{"slug":"/design-systems-for-developers/react/ko/review/","framework":"react","chapter":"review","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"ÌÖåÏä§Ìä∏","title":"ÌíàÏßà Ïú†ÏßÄÎ•º ÏúÑÌïú ÌÖåÏä§Ìä∏","description":"ÎîîÏûêÏù∏ ÏãúÏä§ÌÖú Ïô∏Í¥Ä, Í∏∞Îä•ÏÑ± Î∞è Ï†ëÍ∑ºÏÑ±ÏùÑ ÌÖåÏä§Ìä∏ÌïòÎäî Î∞©Î≤ï"},"fields":{"slug":"/design-systems-for-developers/react/ko/test/","framework":"react","chapter":"test","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"ÏûëÏóÖ ÌùêÎ¶Ñ(workflow)","title":"ÎîîÏûêÏù∏ ÏãúÏä§ÌÖúÏùÑ ÏúÑÌïú ÏûëÏóÖ ÌùêÎ¶Ñ(workflow)","description":"ÌîÑÎ°†Ìä∏ÏóîÎìú Í∞úÎ∞úÏûêÎ•º ÏúÑÌïú ÎîîÏûêÏù∏ ÏãúÏä§ÌÖú ÏûëÏóÖ ÌùêÎ¶Ñ(workflow)Ïùò Í∞úÏöî"},"fields":{"slug":"/design-systems-for-developers/react/ko/workflow/","framework":"react","chapter":"workflow","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Constru√ß√£o","title":"Constru√ß√£o de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Conclus√£o","title":"Conclus√£o","description":"Sistemas de design pr√≥speros economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Distribui√ß√£o","title":"Distribuir o IU numa organiza√ß√£o","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplica√ß√µes"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a ado√ß√£o de sistemas de design atrav√©s de documenta√ß√£o"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Introdu√ß√£o","title":"Introdu√ß√£o aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produ√ß√£o"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Revis√£o","title":"Revis√£o com equipas","description":"Colabora√ß√£o atrav√©s de integra√ß√£o cont√≠nua e revis√£o visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a apar√™ncia,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma vis√£o geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Êû∂ÊûÑ","title":"Êû∂ÊûÑÁ≥ªÁªü","description":"Â¶Ç‰Ωï‰ªéÁé∞ÊúâÁöÑÁªÑ‰ª∂Â∫ì‰∏≠ÊèêÂèñÂá∫ËÆæËÆ°Á≥ªÁªü"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","chapter":"architecture","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÂàõÂª∫","title":"ÂàõÂª∫ UI ÁªÑ‰ª∂","description":"‰ΩøÁî® Storybook Êù•ÂàõÂª∫ÂíåÂàÜÁ±ªÊÇ®ËÆæËÆ°Á≥ªÁªü‰∏≠ÁöÑÁªÑ‰ª∂"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/build/","framework":"react","chapter":"build","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÊÄªÁªì","title":"ÊÄªÁªì","description":"ÊåÅÁª≠ÂèëÂ±ïÁöÑËÆæËÆ°Á≥ªÁªüÂ∏ÆÊÇ®ËäÇÁúÅÊó∂Èó¥Âπ∂ÊèêÈ´òÊïàÁéá"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/conclusion/","framework":"react","chapter":"conclusion","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÂèëÂ∏É","title":"Âú®Êï¥‰∏™ÁªÑÁªá‰∏≠ÂèëÂ∏ÉÊÇ®ÁöÑ UI ÁªÑ‰ª∂","description":"Â≠¶‰π†Â¶Ç‰ΩïÊâìÂåÖÂπ∂Âú®Âà´ÁöÑÂ∫îÁî®Á®ãÂ∫è‰∏≠ÂºïÂÖ•ÊÇ®ÁöÑËÆæËÆ°Á≥ªÁªü"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/distribute/","framework":"react","chapter":"distribute","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÊñáÊ°£","title":"ÂÜôÁªôÂπ≤Á≥ª‰∫∫ÁöÑÊñáÊ°£","description":"ÈÄöËøáÊñáÊ°£Êé®Âä®ËÆæËÆ°Á≥ªÁªüÁöÑ‰ΩøÁî®"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/document/","framework":"react","chapter":"document","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÁÆÄ‰ªã","title":"ËÆæËÆ°Á≥ªÁªüÁÆÄ‰ªã","description":"ÊúÄÊñ∞ÂèëÂ∏ÉÁöÑËÆæËÆ°Á≥ªÁªüÂ∑•ÂÖ∑ÁöÑÊåáÂçó"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/introduction/","framework":"react","chapter":"introduction","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÂÆ°Êü•","title":"‰∏éÂõ¢Èòü‰∏ÄËµ∑ÂÆ°Êü•","description":"ËßÜËßâÂÆ°Êü•‰∏éÊåÅÁª≠ÈõÜÊàêÂπ∂Ëøõ"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/review/","framework":"react","chapter":"review","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"ÊµãËØï","title":"ÈÄöËøáÊµãËØïÊù•‰øùËØÅË¥®Èáè","description":"Â¶Ç‰ΩïÊµãËØïËÆæËÆ°Á≥ªÁªüÁöÑÁïåÈù¢„ÄÅÂäüËÉΩÂíåÊó†ÈöúÁ¢çËÆøÈóÆ"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/test/","framework":"react","chapter":"test","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"Â∑•‰ΩúÊµÅÁ®ã","title":"ËÆæËÆ°Á≥ªÁªüÁöÑÂ∑•‰ΩúÊµÅÁ®ã","description":"Ê¶ÇËø∞ÂâçÁ´ØÂºÄÂèëÂàõÂª∫ËÆæËÆ°Á≥ªÁªüÁöÑÂ∑•‰ΩúÊµÅÁ®ã"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","chapter":"workflow","language":"zh-CN"}}}]}},"pageContext":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","language":"pt","chapter":"distribute","pageType":"chapter"}},"staticQueryHashes":["238248339"]}
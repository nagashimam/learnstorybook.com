{"componentChunkName":"component---src-components-screens-chapter-screen-index-js","path":"/design-systems-for-developers/react/en/workflow/","result":{"data":{"currentPage":{"html":"<p>How frontend tools work together has a significant impact on the ultimate value design and development teams can realize. When done well, it should be seamless to develop and reuse UI components.</p>\n<p>This chapter showcases the five-step workflow by introducing a new component AvatarList.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/design-system-workflow-horizontal.jpg\" alt=\"Design system workflow\"></p>\n<h2>Build</h2>\n<p><code>AvatarList</code> is a component that displays multiple avatars. Like the other design system components, <code>AvatarList</code> started off being pasted into many projects, and that’s why it warrants inclusion in the design system. Let’s assume that the component was developed in another project and jump straight to the finished code for this demo.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/AvatarList.jpg\" alt=\"AvatarList\"></p>\n<p>First, create a new branch where we’ll be tracking this work.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git checkout -b create-avatar-list-component`, `43803235851688280000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"43803235851688280000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git checkout -b create-avatar-list-component\n</code></pre>\n<p>Download the <code>AvatarList</code> component and story to your machine and place them in the <code>/src/AvatarList</code> directory:</p>\n<ul>\n<li><a href=\"https://raw.githubusercontent.com/chromaui/learnstorybook-design-system/bd9a7647bfa61717c2388153955756e1591227de/src/AvatarList/AvatarList.jsx\">Component file</a></li>\n<li><a href=\"https://raw.githubusercontent.com/chromaui/learnstorybook-design-system/bd9a7647bfa61717c2388153955756e1591227de/src/AvatarList/AvatarList.stories.jsx\">Story file</a></li>\n<li><a href=\"https://raw.githubusercontent.com/chromaui/learnstorybook-design-system/bd9a7647bfa61717c2388153955756e1591227de/src/AvatarList/index.js\">Index file</a></li>\n</ul>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-with-avatarlist-7-0.png\" alt=\"Storybook with AvatarList component\"></p>\n<div class=\"aside\">\n<p>💡 Storybook is set up to automatically detect files ending in <code>*.stories.js|jsx</code> and show them in the UI.</p>\n</div>\n<p>Nice! Now let’s articulate each UI state supported by <code>AvatarList</code>. At a glance, it’s clear that <code>AvatarList</code> supports some of <code>Avatar</code>’s properties like <code>small</code> and <code>loading</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`export const SmallSize = {\n  args: {\n    ...Short.args,\n    size: 'small',\n  },\n};\n\nexport const Loading = {\n  args: {\n    ...Short.args,\n    loading: true,\n  },\n};`, `25608970841660430000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"25608970841660430000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList/AvatarList.stories.jsx</div>\n<pre><code class=\"language-jsx\">export const SmallSize = {\n  args: {\n    ...Short.args,\n    size: 'small',\n  },\n};\n\nexport const Loading = {\n  args: {\n    ...Short.args,\n    loading: true,\n  },\n};\n</code></pre>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-with-avatarlist-loading-7-0.png\" alt=\"Storybook with more AvatarList stories\"></p>\n<p>Given that it’s a list, it should show many avatars. Let’s add stories that showcase what happens with numerous list items and with few list items.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`export const Ellipsized = {\n  args: {\n    users: [\n      ...Short.args.users,\n      {\n        id: '3',\n        name: 'Zoltan Olah',\n        avatarUrl: 'https://avatars0.githubusercontent.com/u/81672',\n      },\n      {\n        id: '4',\n        name: 'Tim Hingston',\n        avatarUrl: 'https://avatars3.githubusercontent.com/u/1831709',\n      },\n    ],\n  },\n};\n\nexport const BigUserCount = {\n  args: {\n    users: Ellipsized.args.users,\n    userCount: 100,\n  },\n};\n\nexport const Empty = {\n  args: {\n    users: [],\n  },\n};`, `50242559185954620000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"50242559185954620000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList/AvatarList.stories.jsx</div>\n<pre><code class=\"language-jsx\">export const Ellipsized = {\n  args: {\n    users: [\n      ...Short.args.users,\n      {\n        id: '3',\n        name: 'Zoltan Olah',\n        avatarUrl: 'https://avatars0.githubusercontent.com/u/81672',\n      },\n      {\n        id: '4',\n        name: 'Tim Hingston',\n        avatarUrl: 'https://avatars3.githubusercontent.com/u/1831709',\n      },\n    ],\n  },\n};\n\nexport const BigUserCount = {\n  args: {\n    users: Ellipsized.args.users,\n    userCount: 100,\n  },\n};\n\nexport const Empty = {\n  args: {\n    users: [],\n  },\n};\n</code></pre>\n<video autoPlay muted playsInline loop>\n  <source\n    src=\"/tutorials/design-systems-for-developers/storybook-with-all-avatarlist-stories-7-0.mp4\"\n    type=\"video/mp4\"\n  />\n</video>\n<p>Save your progress and commit.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git commit -am &quot;Added AvatarList and stories&quot;`, `70748829271303750000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"70748829271303750000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git commit -am \"Added AvatarList and stories\"\n</code></pre>\n<h2>Document</h2>\n<p>With the Storybook's <a href=\"https://storybook.js.org/docs/react/writing-docs/autodocs\">auto-documentation</a> feature, creating customizable documentation is effortless. This is beneficial for others who want to learn how to use AvatarList, as they can easily refer to the Docs entry in the Storybook UI.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs-minimal-avatarlist-7-0.png\" alt=\"Storybook docs with minimal AvatarList info\"></p>\n<p>Minimum viable docs! Let’s make AvatarList a bit more human by supplying additional context on how to use it.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`/**\n * A list of Avatars, ellipsized to at most 3. Supports passing only a subset of the total user count.\n */\nexport function AvatarList({ loading, users, userCount, size, ...props }) {}`, `82058142478217920000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"82058142478217920000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList/AvatarList.jsx</div>\n<pre><code class=\"language-jsx\">/**\n * A list of Avatars, ellipsized to at most 3. Supports passing only a subset of the total user count.\n */\nexport function AvatarList({ loading, users, userCount, size, ...props }) {}\n</code></pre>\n<p>Sprinkle in some additional details about the supported props.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`AvatarList.propTypes = {\n  /**\n   * Are we loading avatar data from the network?\n   */\n  loading: PropTypes.bool,\n  /**\n   * A (sub)-list of the users whose avatars we have data for. Note: only 3 will be displayed.\n   */\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      avatarUrl: PropTypes.string,\n    })\n  ),\n  /**\n   * The total number of users, if a subset is passed to \\`users\\`.\n   */\n  userCount: PropTypes.number,\n  /**\n   * AvatarList comes in four sizes. In most cases, you’ll be fine with \\`medium\\`.\n   */\n  size: PropTypes.oneOf(Object.keys(sizes)),\n};`, `12903180998618114000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"12903180998618114000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/AvatarList/AvatarList.jsx</div>\n<pre><code class=\"language-jsx\">AvatarList.propTypes = {\n  /**\n   * Are we loading avatar data from the network?\n   */\n  loading: PropTypes.bool,\n  /**\n   * A (sub)-list of the users whose avatars we have data for. Note: only 3 will be displayed.\n   */\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      avatarUrl: PropTypes.string,\n    })\n  ),\n  /**\n   * The total number of users, if a subset is passed to `users`.\n   */\n  userCount: PropTypes.number,\n  /**\n   * AvatarList comes in four sizes. In most cases, you’ll be fine with `medium`.\n   */\n  size: PropTypes.oneOf(Object.keys(sizes)),\n};\n</code></pre>\n<p>Easy as pie! This level of detail is sufficient for now-–we can always customize more using MDX later.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/storybook-docs-full-avatarlist-7-0.png\" alt=\"Storybook docs with full AvatarList info\"></p>\n<p>Documentation doesn’t have to be tiresome. With automated tooling, we removed the tedium to get straight to writing.</p>\n<p>Commit the changes and push to GitHub.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git commit -am &quot;Improved AvatarList docs&quot;`, `46780866610711610000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"46780866610711610000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git commit -am \"Improved AvatarList docs\"\n</code></pre>\n<h3>Prepare for publishing</h3>\n<p>Before publishing our component to the design system, we must ensure it’s available once installed. Let’s add it to the design system’s <code>index.js</code> file.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`import * as styles from './shared/styles';\nimport * as animation from './shared/animation';\nimport * as icons from './shared/icons';\nimport * as global from './shared/global';\n\nexport { styles, animation, icons, global };\n\nexport * from './Avatar';\n export * from './AvatarList';\nexport * from './Badge';\nexport * from './Button';\nexport * from './Icon';\nexport * from './Link';\nexport * from './LinkWrapper';\n`, `9756270712296366000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"9756270712296366000\"\n              >\n                Copy \n              </div>\n            </div>\n<div class=\"gatsby-code-title\">src/index.js</div>\n<pre><code class=\"language-diff\">import * as styles from './shared/styles';\nimport * as animation from './shared/animation';\nimport * as icons from './shared/icons';\nimport * as global from './shared/global';\n\nexport { styles, animation, icons, global };\n\nexport * from './Avatar';\n+ export * from './AvatarList';\nexport * from './Badge';\nexport * from './Button';\nexport * from './Icon';\nexport * from './Link';\nexport * from './LinkWrapper';\n\n</code></pre>\n<h4>Create a Pull Request</h4>\n<p>Let’s push our <code>AvatarList</code> branch to GitHub and create a pull request:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              onClick=\"copyToClipboard(`git push -u origin create-avatar-list-component`, `56959998557235230000`)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-toaster-id=\"56959998557235230000\"\n              >\n                Copy \n              </div>\n            </div>\n<pre><code class=\"language-shell\">git push -u origin create-avatar-list-component\n</code></pre>\n<p>Then navigate to GitHub and open a pull request.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-pr-create-avatarlist.png\" alt=\"PR created in PR for AvatarList\"></p>\n<h2>Review</h2>\n<p>At this point, <code>AvatarList</code> is a candidate for design system inclusion. Stakeholders must review the component to see if it meets expectations for functionality and appearance.</p>\n<p>The design system’s Storybook is automatically published with each pull request to make review dead simple. Scroll down to the PR checks to find a link to the deployed Storybook.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/avatarlist-github-pr-checks-chromatic-changes.png\" alt=\"PR check for deployed PR\"></p>\n<p>Find the <code>AvatarList</code> in your published Storybook. It should look identical to your local Storybook.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-deployed-avatarlist-stories-7-0.png\" alt=\"AvatarList in Storybook online\"></p>\n<p>The published Storybook is a universal reference point for the team. Share the link to <code>AvatarList</code> with other stakeholders to get feedback faster. Your team will love you because they don’t have to deal with code or set up a development environment.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/visual-review-shipit.png\" alt=\"Looks good, ship it!\"></p>\n<p>Reaching consensus with numerous teams often feels like an exercise in futility. Folks reference out-of-date code, don’t have a development environment or scatter feedback across multiple tools. Reviewing Storybook online makes it as simple as sharing a URL.</p>\n<h2>Test</h2>\n<p>Our test suite runs in the background every commit. <code>AvatarList</code> is a simple presentational component, so unit tests aren’t necessary. But if we look at the PR check, our visual testing tool Chromatic has already detected changes that need reviewing.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/avatarlist-github-pr-checks-chromatic-changes.png\" alt=\"Chromatic changes on the GitHub PR check\"></p>\n<p>Since AvatarList is new, there aren’t visual tests for it yet. We’ll need to add baselines for each story. Accept the “new stories” in Chromatic to expand visual test coverage.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-avatarlist-changes.png\" alt=\"Chromatic changes to the AvatarList stories\"></p>\n<p>Once you’re done, the build will pass in Chromatic.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/chromatic-avatarlist-changes-accepted.png\" alt=\"Chromatic changes to the AvatarList stories accepted\"></p>\n<p>Which, in turn, updates the PR check in GitHub.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/avatarlist-github-pr-checks-chromatic-changes-accepted.png\" alt=\"Chromatic changes accepted on the GitHub PR check\"></p>\n<p>The tests were successfully updated. In the future, regressions will have a tough time sneaking into the design system.</p>\n<h2>Distribute</h2>\n<p>We have an open pull request that adds <code>AvatarList</code> to the design system. We've written our stories, the tests pass, and documentation exists. At last, we’re ready to update our design system package with Auto and npm.</p>\n<p>Add the <code>minor</code> label to the PR. This tells Auto to update the minor version of the package on merge.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/github-pr-labelled.png\" alt=\"GitHub PR with labels\"></p>\n<p>Now merge your PR, navigate to your package on npm, and hang tight for a few minutes while the package is updated.</p>\n<p><img src=\"/tutorials/design-systems-for-developers/npm-published-package-minor.png\" alt=\"Package published on npm\"></p>\n<p>Success! Your design system package was updated from the comfort of GitHub. No need to touch the command line or fuss with npm. Update the <code>learnstorybook-design-system</code> dependency in the example app to start using AvatarList.</p>\n<h2>Your journey begins</h2>\n<p><em>Design Systems for Developers</em> highlights the end-to-end workflow used by professional frontend teams to give you a headstart as you develop your own. As your design system grows, add, rearrange, and extend these tools to fit your team’s needs.</p>\n<p>Chapter 9 concludes with the complete sample code, helpful resources, and frequently asked questions from developers.</p>","frontmatter":{"title":"Workflow for design systems","description":"An overview of the design system workflow for frontend developers","commit":"9d13d12"},"fields":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/en/workflow/","chapter":"workflow","framework":"react","language":"en","permalink":"https://storybook.js.org/tutorials/design-systems-for-developers/react/en/workflow/","tutorialUpToDate":true}},"currentGuide":{"frontmatter":{"codeGithubUrl":"https://github.com/chromaui/learnstorybook-design-system","toc":["introduction","architecture","build","review","test","document","distribute","workflow","conclusion"],"title":"Design Systems for Developers","twitterShareText":"I’m learning about building design systems! They're great for scaling frontend code on large teams."}},"site":{"siteMetadata":{"title":"Storybook Tutorials","githubUrl":"https://github.com/chromaui/learnstorybook.com","contributeUrl":"https://github.com/chromaui/learnstorybook.com/#contribute","permalink":"https://storybook.js.org/tutorials","siteUrl":"https://storybook.js.org"}},"tocPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Architecture","title":"Architecting systems","description":"How to extract a design system from component libraries"},"fields":{"slug":"/design-systems-for-developers/react/en/architecture/","framework":"react","chapter":"architecture"}}},{"node":{"frontmatter":{"tocTitle":"Build","title":"Build UI components","description":"Set up Storybook to build and catalog design system components"},"fields":{"slug":"/design-systems-for-developers/react/en/build/","framework":"react","chapter":"build"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Thriving design systems save time and increase productivity"},"fields":{"slug":"/design-systems-for-developers/react/en/conclusion/","framework":"react","chapter":"conclusion"}}},{"node":{"frontmatter":{"tocTitle":"Distribute","title":"Distribute UI across an organization","description":"Learn to package and import your design system into other apps"},"fields":{"slug":"/design-systems-for-developers/react/en/distribute/","framework":"react","chapter":"distribute"}}},{"node":{"frontmatter":{"tocTitle":"Document","title":"Document for stakeholders","description":"Drive design system adoption with documentation"},"fields":{"slug":"/design-systems-for-developers/react/en/document/","framework":"react","chapter":"document"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to design systems","description":"A guide to the latest production-ready tools for design systems"},"fields":{"slug":"/design-systems-for-developers/react/en/introduction/","framework":"react","chapter":"introduction"}}},{"node":{"frontmatter":{"tocTitle":"Review","title":"Review with teams","description":"Collaborate with continuous integration and visual review"},"fields":{"slug":"/design-systems-for-developers/react/en/review/","framework":"react","chapter":"review"}}},{"node":{"frontmatter":{"tocTitle":"Test","title":"Test to maintain quality","description":"How to test design system appearance, functionality, and accessibility"},"fields":{"slug":"/design-systems-for-developers/react/en/test/","framework":"react","chapter":"test"}}},{"node":{"frontmatter":{"tocTitle":"Workflow","title":"Workflow for design systems","description":"An overview of the design system workflow for frontend developers"},"fields":{"slug":"/design-systems-for-developers/react/en/workflow/","framework":"react","chapter":"workflow"}}}]},"translationPages":{"edges":[{"node":{"frontmatter":{"tocTitle":"Architecture","title":"Architecting systems","description":"How to extract a design system from component libraries"},"fields":{"slug":"/design-systems-for-developers/react/en/architecture/","framework":"react","chapter":"architecture","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Build","title":"Build UI components","description":"Set up Storybook to build and catalog design system components"},"fields":{"slug":"/design-systems-for-developers/react/en/build/","framework":"react","chapter":"build","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Conclusion","title":"Conclusion","description":"Thriving design systems save time and increase productivity"},"fields":{"slug":"/design-systems-for-developers/react/en/conclusion/","framework":"react","chapter":"conclusion","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Distribute","title":"Distribute UI across an organization","description":"Learn to package and import your design system into other apps"},"fields":{"slug":"/design-systems-for-developers/react/en/distribute/","framework":"react","chapter":"distribute","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Document","title":"Document for stakeholders","description":"Drive design system adoption with documentation"},"fields":{"slug":"/design-systems-for-developers/react/en/document/","framework":"react","chapter":"document","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Introduction","title":"Introduction to design systems","description":"A guide to the latest production-ready tools for design systems"},"fields":{"slug":"/design-systems-for-developers/react/en/introduction/","framework":"react","chapter":"introduction","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Review","title":"Review with teams","description":"Collaborate with continuous integration and visual review"},"fields":{"slug":"/design-systems-for-developers/react/en/review/","framework":"react","chapter":"review","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Test","title":"Test to maintain quality","description":"How to test design system appearance, functionality, and accessibility"},"fields":{"slug":"/design-systems-for-developers/react/en/test/","framework":"react","chapter":"test","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"Workflow","title":"Workflow for design systems","description":"An overview of the design system workflow for frontend developers"},"fields":{"slug":"/design-systems-for-developers/react/en/workflow/","framework":"react","chapter":"workflow","language":"en"}}},{"node":{"frontmatter":{"tocTitle":"設計","title":"システム設計","description":"コンポーネントライブラリーからデザインシステムを抽出する方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/architecture/","framework":"react","chapter":"architecture","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"構築","title":"UIコンポーネントを構築する","description":"Storybook をセットアップしデザインシステムコンポーネントを構築してカタログ化する"},"fields":{"slug":"/design-systems-for-developers/react/ja/build/","framework":"react","chapter":"build","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"結論","title":"結論","description":"デザインシステムの成長が時間を節約し生産性を向上させる"},"fields":{"slug":"/design-systems-for-developers/react/ja/conclusion/","framework":"react","chapter":"conclusion","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"配布","title":"組織を横断してUIを配布する","description":"デザインシステムをパッケージングし他のアプリへインポートする方法を学ぶ"},"fields":{"slug":"/design-systems-for-developers/react/ja/distribute/","framework":"react","chapter":"distribute","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ドキュメント","title":"ステークホルダーに向けたドキュメント","description":"ドキュメンテーションでデザインシステムの採用を推進する"},"fields":{"slug":"/design-systems-for-developers/react/ja/document/","framework":"react","chapter":"document","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"イントロダクション","title":"デザインシステムのイントロダクション","description":"デザインシステムのために最新のリリース可能なツールのガイド"},"fields":{"slug":"/design-systems-for-developers/react/ja/introduction/","framework":"react","chapter":"introduction","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"レビュー","title":"チームでレビューする","description":"継続的インテグレーションとビジュアルレビューで協働する"},"fields":{"slug":"/design-systems-for-developers/react/ja/review/","framework":"react","chapter":"review","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"テスト","title":"品質を保つためのテスト","description":"デザインシステムの見た目、機能性、アクセシビリティをテストする方法"},"fields":{"slug":"/design-systems-for-developers/react/ja/test/","framework":"react","chapter":"test","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"ワークフロー","title":"デザインシステムのためのワークフロー","description":"フロントエンド開発者のためのデザインシステムワークフローの概要"},"fields":{"slug":"/design-systems-for-developers/react/ja/workflow/","framework":"react","chapter":"workflow","language":"ja"}}},{"node":{"frontmatter":{"tocTitle":"설계","title":"시스템 설계","description":"컴포넌트 라이브러리에서 디자인 시스템을 추출하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/architecture/","framework":"react","chapter":"architecture","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"빌드","title":"UI 컴포넌트 구축하기","description":"스토리북에서 디자인 시스템 컴포넌트를 구축하고 구조화하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/build/","framework":"react","chapter":"build","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"마무리","title":"마무리","description":"잘 갖춰놓은 디자인 시스템으로 시간 절약과 생산성 향상"},"fields":{"slug":"/design-systems-for-developers/react/ko/conclusion/","framework":"react","chapter":"conclusion","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"배포","title":"UI 배포","description":"디자인 시스템을 다른 앱에 패키징하고 import하는 방법을 배웁니다."},"fields":{"slug":"/design-systems-for-developers/react/ko/distribute/","framework":"react","chapter":"distribute","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"문서","title":"이해관계자를 위한 문서","description":"문서화를 통하여 디자인 시스템 도입을 촉진하기"},"fields":{"slug":"/design-systems-for-developers/react/ko/document/","framework":"react","chapter":"document","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"소개","title":"디자인 시스템 소개","description":"디자인 시스템을 위한 최신 개발 방법 도구 가이드"},"fields":{"slug":"/design-systems-for-developers/react/ko/introduction/","framework":"react","chapter":"introduction","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"리뷰","title":"팀과 함께 리뷰하기","description":"지속적 통합(CI)과 비주얼 리뷰를 통한 협업"},"fields":{"slug":"/design-systems-for-developers/react/ko/review/","framework":"react","chapter":"review","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"테스트","title":"품질 유지를 위한 테스트","description":"디자인 시스템 외관, 기능성 및 접근성을 테스트하는 방법"},"fields":{"slug":"/design-systems-for-developers/react/ko/test/","framework":"react","chapter":"test","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"작업 흐름(workflow)","title":"디자인 시스템을 위한 작업 흐름(workflow)","description":"프론트엔드 개발자를 위한 디자인 시스템 작업 흐름(workflow)의 개요"},"fields":{"slug":"/design-systems-for-developers/react/ko/workflow/","framework":"react","chapter":"workflow","language":"ko"}}},{"node":{"frontmatter":{"tocTitle":"Arquitetura","title":"Arquitetar sistemas","description":"Como extrair um sistema de design a partir de bibliotecas de componentes"},"fields":{"slug":"/design-systems-for-developers/react/pt/architecture/","framework":"react","chapter":"architecture","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Construção","title":"Construção de componentes IU","description":"Configurar o Storybook para catalogar e construir componentes do sistemas de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/build/","framework":"react","chapter":"build","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Conclusão","title":"Conclusão","description":"Sistemas de design prósperos economizam tem e aumentam produtividade"},"fields":{"slug":"/design-systems-for-developers/react/pt/conclusion/","framework":"react","chapter":"conclusion","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Distribuição","title":"Distribuir o IU numa organização","description":"Aprenda como empacotar e importar o seu sistema de design para outras aplicações"},"fields":{"slug":"/design-systems-for-developers/react/pt/distribute/","framework":"react","chapter":"distribute","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Documentar","title":"Documentar para as partes interessadas","description":"Acelere a adoção de sistemas de design através de documentação"},"fields":{"slug":"/design-systems-for-developers/react/pt/document/","framework":"react","chapter":"document","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Introdução","title":"Introdução aos sistemas de design","description":"Um guia para as ferramentas mais recentes orientadas para sistemas de design prontas para produção"},"fields":{"slug":"/design-systems-for-developers/react/pt/introduction/","framework":"react","chapter":"introduction","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Revisão","title":"Revisão com equipas","description":"Colaboração através de integração contínua e revisão visual"},"fields":{"slug":"/design-systems-for-developers/react/pt/review/","framework":"react","chapter":"review","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Testar","title":"Testar para manter a qualidade","description":"Como testar a aparência,funcionalidade e acessibilidade do sistema de design"},"fields":{"slug":"/design-systems-for-developers/react/pt/test/","framework":"react","chapter":"test","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"Fluxo de trabalho","title":"Fluxo de trabalho associado ao sistema de design","description":"Uma visão geral do fluxo de trabalho associado ao sistema de design para programadores frontend"},"fields":{"slug":"/design-systems-for-developers/react/pt/workflow/","framework":"react","chapter":"workflow","language":"pt"}}},{"node":{"frontmatter":{"tocTitle":"架构","title":"架构系统","description":"如何从现有的组件库中提取出设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/architecture/","framework":"react","chapter":"architecture","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"创建","title":"创建 UI 组件","description":"使用 Storybook 来创建和分类您设计系统中的组件"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/build/","framework":"react","chapter":"build","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"总结","title":"总结","description":"持续发展的设计系统帮您节省时间并提高效率"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/conclusion/","framework":"react","chapter":"conclusion","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"发布","title":"在整个组织中发布您的 UI 组件","description":"学习如何打包并在别的应用程序中引入您的设计系统"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/distribute/","framework":"react","chapter":"distribute","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"文档","title":"写给干系人的文档","description":"通过文档推动设计系统的使用"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/document/","framework":"react","chapter":"document","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"简介","title":"设计系统简介","description":"最新发布的设计系统工具的指南"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/introduction/","framework":"react","chapter":"introduction","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"审查","title":"与团队一起审查","description":"视觉审查与持续集成并进"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/review/","framework":"react","chapter":"review","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"测试","title":"通过测试来保证质量","description":"如何测试设计系统的界面、功能和无障碍访问"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/test/","framework":"react","chapter":"test","language":"zh-CN"}}},{"node":{"frontmatter":{"tocTitle":"工作流程","title":"设计系统的工作流程","description":"概述前端开发创建设计系统的工作流程"},"fields":{"slug":"/design-systems-for-developers/react/zh-CN/workflow/","framework":"react","chapter":"workflow","language":"zh-CN"}}}]}},"pageContext":{"guide":"design-systems-for-developers","slug":"/design-systems-for-developers/react/en/workflow/","framework":"react","language":"en","chapter":"workflow","pageType":"chapter"}},"staticQueryHashes":["238248339"]}